<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category   design_default
 * @package    Mage
 * @copyright  Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php $_pickup = false; ?>
<?php if($this->helper('shipperhq_shipper')->isModuleEnabled('Shipperhq_Splitrates') && !$this->helper('shipperhq_splitrates')->displayMergedCheckout()
    && count($this->getCarrierGroupRates()) > 1): ?>
    <?php if (!($_carrierGroupRates = $this->getCarrierGroupRates())): ?>
        <strong><?php echo $this->__('Sorry, no quotes are available for this order at this time.') ?></strong>
    <?php else: ?>
        <input type=hidden id="transaction_id" value='<?php echo Mage::helper('shipperhq_shipper')->getTransactionId(); ?>' />
        <?php foreach ($_carrierGroupRates as $_carriergroupId => $_shippingRateGroups): ?>
            <?php $carriergroupInsert = $_carriergroupId == '' ? '' : '_' . $_carriergroupId; ?>
            <input type=hidden id="carriergroup_id" value='<?php echo $_carriergroupId ?>' />
            <?php $_sole = count($_shippingRateGroups['shipping']) == 1; ?>
            <dt class="carrier-group-name"><br><strong><?php echo $_shippingRateGroups['checkout_text']; ?></strong></dt>
            <ul>
                <?php if ($this->showItemDescription()) :?>
                    <?php if(array_key_exists('item_list', $_shippingRateGroups) && $_shippingRateGroups['item_list']): ?>
                        <?php foreach ($_shippingRateGroups['item_list'] as $_formattedItemDetail): ?>
                            <li class="carrier-group-items" id="carrier_group_items<?php echo $carriergroupInsert?>">
                                <?php echo $_formattedItemDetail ?>
                            </li>
                        <?php endforeach; ?>
                    <?php endif ?>
                <?php endif ?>
            </ul>
            <dl class="sp-methods">
                <dl class="shipment-methods">
                    <?php foreach ($_shippingRateGroups['shipping']  as $code => $_rates): ?>
                            <dd><?php echo $this->getCarrierName($code) ?></dd>
                            <?php $showCarrierNotice = false; ?>
                            <?php $_error = array_key_exists('error', $_shippingRateGroups) && array_key_exists($code, $_shippingRateGroups['error']); ?>
                            <?php if(Mage::helper('shipperhq_shipper')->isModuleEnabled('Shipperhq_Calendar') && Mage::helper('shipperhq_calendar')->hasCalendarDetails($_carriergroupId, $code, $_rates[0]->getCarrierType())) :?>
                                <?php $calendarRates = true; ?>
                            <?php else: ?>
                                <?php $calendarRates = false; ?>
                            <?php endif ?>
                            <?php $isFreightCarrier = $this->isFreightCarrier($_rates[0]); ?>
                            <?php $isPickupCarrier = false; ?>
                            <?php if(Mage::helper('shipperhq_shipper')->isModuleEnabled('Shipperhq_Pickup')) :?>
                                <?php if(Mage::helper('shipperhq_pickup')->isPickupEnabledCarrier($_rates[0]->getCarrierType())) :?>
                                    <?php $isPickupCarrier = true; ?>
                                <?php endif ?>
                            <?php endif ?>
                            <?php if($_rates[0]->getCustomDescription()): ?>
                                <p class="disclaimer" id="disclaimer_<?php echo $_carriergroupId ?>_<?php echo $code ?>" name="disclaimer_<?php echo $_carriergroupId ?>"><?php echo $_rates[0]->getCustomDescription(); ?></p>
                            <?php endif; ?>
                            <?php if($calendarRates || $isPickupCarrier || $isFreightCarrier): ?>
                                <div id="ship_options_<?php echo $_carriergroupId ?>_<?php echo $code ?>" class="ship_options">
                                    <div id="radio_choices_<?php echo $_carriergroupId ?>_<?php echo $code ?>">
                            <?php endif ?>
                            <?php foreach ($_rates as $_rate): ?>
                                <dt style="margin-bottom: 5px;">
                                <?php if ($_rate->getErrorMessage()): ?>
                                    <ul class="messages"><li class="error-msg"><ul><li><?php echo $_rate->getErrorMessage() ?></li></ul></li></ul>
                                <?php else: ?>
                                    <input name="shipping_method<?php echo $carriergroupInsert ?>" type="radio" class="validate-one-required-by-name shipping-method-radio"  value="<?php echo $_rate->getCode() ?>" id="s_method_<?php echo $_carriergroupId ?>_<?php echo $_rate->getCode() ?>" <?php if($_rate->getCode()===$this->getCarrierGroupAddressShippingMethod($_carriergroupId)) echo ' checked="checked"' ?> />
                                    <label for="s_method_<?php echo $_carriergroupId ?>_<?php echo $_rate->getCode() ?>"><!--<b><?php echo $this->getCarrierName($code) ?>:</b>--> <?php echo $this->getMethodTitle($_rate->getMethodTitle(), $_rate->getMethodDescription(), true) ?>
                                        <strong>
                                            <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
                                            <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>

                                            <?php echo $_excl; ?>
                                            <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
                                                (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
                                            <?php endif; ?>
                                        </strong>
                                        <?php if ($_rate->getTooltip()): ?>
                                            <span style="float:right;" class="helpcursor" title="<?php echo $_rate->getTooltip() ?>">
                                        <img src="<?php echo $this->getSkinUrl('images/shipperhq/tooltip.jpg') ?>">
                                    </span>
                                        <?php endif; ?>
                                    </label>
                                <?php endif ?>
                                </dt>
                            <?php endforeach; ?>
                            <?php if($_rates[0]->getCarrierNotice() && !$showCarrierNotice): ?>
                                <?php $showCarrierNotice = $_rates[0]->getCarrierNotice(); ?>
                            <?php endif ?>
                        <?php if ($showCarrierNotice): ?>
                            <p class="disclaimer" id="disclaimer_<?php echo $_carriergroupId ?>_<?php echo $code ?>" hidden="" name="disclaimer_<?php echo $_carriergroupId ?>"><?php echo $showCarrierNotice; ?></p>
                        <?php endif ?>
                        <?php if($calendarRates || $isPickupCarrier || $isFreightCarrier ) :?>
                            </div>
                            </div>
                        <?php endif; ?>
                        <?php if($isPickupCarrier) :?>
                            <?php echo $this->getStorepickupHtml($code, $_rates[0]->getCarrierType(), $_carriergroupId) ?>
                        <?php endif ?>
                       <?php if($calendarRates): ?>
                            <?php echo $this->getCalendarHtml($_carriergroupId, $code) ?>
                        <?php endif ?>
                        <?php if ($isFreightCarrier): ?>
                            <?php echo $this->getFreightAccessorialsHtml($code, $_rates[0]->getCarrierType(), $_carriergroupId); ?>
                        <?php endif; ?>
                    <?php endforeach; ?>
                </dl>
            </dl>
        <?php endforeach; ?>
        <!--  <div class="dropship-text">
            <?php echo $this->getExplanationText(); ?>
        </div> -->
    <?php endif; ?>
<?php else: ?>
    <?php if (!($_shippingRateGroups = $this->getProcessedShippingRates())): ?>
        <strong><?php echo $this->__('Sorry, no quotes are available for this order at this time.') ?></strong>
    <?php else: ?>
        <input type=hidden id="transaction_id" value='<?php echo Mage::helper('shipperhq_shipper')->getTransactionId(); ?>' />
        <?php if (count($_shippingRateGroups['shipping'])=='1' && Mage::getStoreConfig('onestepcheckout/general/hide_shipping_method')):?>
            <dl class="shipment-methods" style="display: none">
                <?php foreach ($_shippingRateGroups as $code => $_rates): ?>
                    <dd><?php echo $this->getCarrierName($code)?></dd>
                    <?php foreach ($_rates as $_rate): ?>
                        <dt style="margin-bottom: 5px;">
                        <?php if ($_rate->getErrorMessage()): ?>
                            <ul class="messages"><li class="error-msg"><ul><li><?php echo $_rate->getErrorMessage() ?></li></ul></li></ul>
                        <?php else: ?>
                            <input name="shipping_method" type="radio" value="<?php echo $_rate->getCode() ?>" id="s_method_<?php echo $_rate->getCode() ?>" checked="checked" />
                            <label for="s_method_<?php echo $_rate->getCode() ?>"><!--<b><?php echo $this->getCarrierName($code) ?>:</b>--> <?php echo $this->getMethodTitle($_rate->getMethodTitle(), $_rate->getMethodDescription(), true) ?>
                                <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
                                <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>
                                <?php echo $_excl; ?>
                                <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
                                    (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
                                <?php endif; ?>
                                </strong>
                                <?php if ($_rate->getTooltip()): ?>
                                    <span style="float:right;" class="helpcursor" title="<?php echo $_rate->getTooltip() ?>">
                                        <img src="<?php echo $this->getSkinUrl('images/shipperhq/tooltip.jpg') ?>">
                                    </span>
                                <?php endif; ?>
                            </label>
                        <?php endif ?>
                        </dt>
                    <?php endforeach; ?>
                <?php endforeach; ?>
            </dl>
        <?php else: ?>
            <dl class="shipment-methods">
                <?php $_sole = count($_shippingRateGroups['shipping']) == 1; foreach ($_shippingRateGroups['shipping'] as $code => $_rates): ?>
                    <dd><?php echo $this->getCarrierName($code) ?></dd>
                    <?php $showCarrierNotice = false; ?>
                    <?php $_error = array_key_exists('error', $_shippingRateGroups) && array_key_exists($code, $_shippingRateGroups['error']); ?>
                    <?php if(Mage::helper('shipperhq_shipper')->isModuleEnabled('Shipperhq_Calendar') && Mage::helper('shipperhq_calendar')->hasCalendarDetails('', $code, $_rates[0]->getCarrierType())) :?>
                        <?php $calendarRates = true; ?>
                    <?php else: ?>
                        <?php $calendarRates = false; ?>
                    <?php endif ?>
                    <?php $isPickupCarrier = $this->isPickupCarrier($_rates[0]); ?>
                    <?php $isFreightCarrier = $this->isFreightCarrier($_rates[0]); ?>
                    <?php if($_rates[0]->getCustomDescription()): ?>
                        <p class="disclaimer" id="disclaimer_<?php echo $code ?>" name="disclaimer"><?php echo $_rates[0]->getCustomDescription(); ?></p>
                    <?php endif; ?>
                    <?php if($calendarRates || $isPickupCarrier || $isFreightCarrier): ?>
                        <div id="ship_options_<?php echo $code ?>" class="ship_options">
                        <div id="radio_choices_<?php echo $code ?>">
                    <?php endif ?>
                    <?php foreach ($_rates as $_rate): ?>
                        <dt style="margin-bottom: 5px;">
                        <?php if ($_rate->getErrorMessage()): ?>
                            <ul class="messages"><li class="error-msg"><ul><li><?php echo $_rate->getErrorMessage() ?></li></ul></li></ul>
                        <?php else: ?>
                            <input name="shipping_method" type="radio" class="validate-one-required-by-name shipping-method-radio" value="<?php echo $_rate->getCode() ?>" id="s_method_<?php echo $_rate->getCode() ?>"<?php if($_rate->getCode()===$this->getAddressShippingMethod()) echo ' checked="checked"' ?> />
                            <label for="s_method_<?php echo $_rate->getCode() ?>"><!--<b><?php echo $this->getCarrierName($code) ?>:</b>--> <?php echo $this->getMethodTitle($_rate->getMethodTitle(), $_rate->getMethodDescription(), true) ?>
                                <strong>
                                    <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
                                    <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>

                                    <?php echo $_excl; ?>
                                    <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
                                        (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
                                    <?php endif; ?>
                                </strong>
                                <?php if ($_rate->getTooltip()): ?>
                                    <span style="float:right;" class="helpcursor" title="<?php echo $_rate->getTooltip() ?>">
                                        <img src="<?php echo $this->getSkinUrl('images/shipperhq/tooltip.jpg') ?>">
                                    </span>
                                <?php endif; ?>
                            </label>
                        <?php endif ?>
                        </dt>
                    <?php endforeach; ?>
                    <?php if($_rates[0]->getCarrierNotice() && !$showCarrierNotice): ?>
                        <?php $showCarrierNotice = $_rates[0]->getCarrierNotice(); ?>
                    <?php endif ?>
                    <?php if ($showCarrierNotice): ?>
                        <p class="disclaimer" id="disclaimer_<?php echo $code ?>" name="disclaimer" hidden=""><?php echo $showCarrierNotice; ?></p>
                    <?php endif ?>
                    <?php if($calendarRates || $isPickupCarrier || $isFreightCarrier ) :?>
                        </div>
                        </div>
                    <?php endif; ?>
                    <?php if($calendarRates ) :?>
                        <?php echo $this->getCalendarHtml('', $code); ?>
                    <?php endif ?>
                    <?php if($isPickupCarrier) :?>
                        <?php echo $this->getStorepickupHtml($code, $_rates[0]->getCarrierType(), ''); ?>
                    <?php endif ?>
                    <?php if($isFreightCarrier): ?>
                        <?php echo $this->getFreightAccessorialsHtml($code, $_rates[0]->getCarrierType(), ''); ?>
                    <?php endif; ?>
                <?php endforeach; ?>
            </dl>
        <?php endif; ?>
    <?php endif; ?>
<?php endif; ?>

<script type="text/javascript">
//<![CDATA[
document.observe('dom:loaded', pageInit);
function pageInit()
{
    //explicitly call click on shipping method radio if selected
    var shipMethodRadios = document.getElementsByClassName('shipping-method-radio');
    for (var i = 0; i < shipMethodRadios.length; i++) {
        var radio = shipMethodRadios[i];
        if(radio.checked) {
            radio.click();
        }
    }

    var showTooltip = '<?php echo $this->showToolTips(); ?>';
    if(showTooltip == 1) {
        var tooltipText = '<?php echo $this->getToolTipText() ?>';
        var tooltipImgUrl =  '<?php echo $this->getSkinUrl('images/shipperhq/tooltip.jpg') ?>';
        var tooltipHtml =  '<b class="helpcursor" title="' + tooltipText + '"><img src="'
            + tooltipImgUrl + '"></b>';
        var shipMethodSectionColl = document.getElementsByClassName('onestepcheckout-shipping-method');
        var found = false;
        var shipHeading = false;
        var className1 = 'onestepcheckout-numbers';
        var className2 = 'onestepcheckout-numbers-2';
        for (var t = 0, tt = shipMethodSectionColl.length; t < tt; t++) {
            var shipMethodSection = shipMethodSectionColl[t];
            for (var i = 0, il = shipMethodSection.childNodes.length; i < il; i++) {
                if(!found) {
                    var classes = shipMethodSection.childNodes[i].className != undefined? shipMethodSection.childNodes[i].className.split(" ") : [];
                    for (var j = 0, jl = classes.length; j < jl; j++) {
                        if (classes[j] == className1){
                            shipHeading = shipMethodSection.childNodes[i];
                            found = true;
                        }
                    }
                }
            }
        }
        if(shipHeading) {
            var html = shipHeading.innerHTML;
            shipHeading.innerHTML = html + tooltipHtml;
        }

    }

}

$$('input[type="radio"][name^="shipping_method"]').each(function (el) {
    Event.observe(el, 'click', shippingMethodChosenEvent );
});


function shippingMethodChosenEvent(event)
{
    var el = $(Event.element(event));
    setSelected(el);
}

function setSelected(el)
{
        if (el.checked == true) {
            var methodName = el.id;
            var lastPartMethodName = methodName.substr(9);
            var indexOfCarriergroupIdEnd = lastPartMethodName.indexOf('_');
            var methodCarriergroupId = lastPartMethodName.substr(0, indexOfCarriergroupIdEnd);
            var splitSGroup = methodCarriergroupId.indexOf('XXXX');
            if (splitSGroup < 1 && (isNaN(methodCarriergroupId) || isNaN(parseInt(methodCarriergroupId)))) {
                var carriergroupInsert = '';
                var methodCarriergroupId = '';
            } else {
                var carriergroupInsert = '_' + methodCarriergroupId;
            }

            if(el.name != "shipping_method") {
                var url_save_selected_shipping = '<?php echo $this->getUrl('shipperhq_splitrates/ajax/oscSaveShipping', array('_secure'=>true)); ?>';
                selectedShipMethod = el.value;
                new Ajax.Request(url_save_selected_shipping, {
                    method: 'post',
                    onSuccess: function(transport)    {
                        if(transport.status == 200)    {
                            //result
                        }
                    },
                    parameters: {carriergroup_id: methodCarriergroupId, selected_method: selectedShipMethod}
                });
            }
        }
    }

var addressValEnabled = '<?php echo Mage::helper('shipperhq_shipper')->isModuleEnabled('Shipperhq_Validation', 'carriers/shipper/AV_ENABLED'); ?>';
if(!addressValEnabled) {
    function get_save_billing_function(url, set_methods_url, update_payments, triggered)
    {
        if(typeof update_payments == 'undefined')    {
            var update_payments = false;
        }

        if(typeof triggered == 'undefined')    {
            var triggered = true;
        }

        if(!triggered){
            return function(){return;};
        }

        return function()    {
            var form = $('onestepcheckout-form');
            var items = exclude_unchecked_checkboxes($$('input[name^=billing]').concat($$('select[name^=billing]')));
            var names = items.pluck('name');
            var values = items.pluck('value');
            var parameters = {
                shipping_method: $RF(form, 'shipping_method')
            };


            var street_count = 0;
            for(var x=0; x < names.length; x++)    {
                if(names[x] != 'payment[method]')    {

                    var current_name = names[x];

                    if(names[x] == 'billing[street][]')    {
                        current_name = 'billing[street][' + street_count + ']';
                        street_count = street_count + 1;
                    }

                    parameters[current_name] = values[x];
                }
            }

            var use_for_shipping = $('billing:use_for_shipping_yes');




            if(use_for_shipping && use_for_shipping.getValue() != '1')    {
                var items = $$('input[name^=shipping]').concat($$('select[name^=shipping]'));
                var shipping_names = items.pluck('name');
                var shipping_values = items.pluck('value');
                var shipping_parameters = {};
                var street_count = 0;

                for(var x=0; x < shipping_names.length; x++)    {
                    if(shipping_names[x] != 'shipping_method')    {
                        var current_name = shipping_names[x];
                        if(shipping_names[x] == 'shipping[street][]')    {
                            current_name = 'shipping[street][' + street_count + ']';
                            street_count = street_count + 1;
                        }

                        parameters[current_name] = shipping_values[x];
                    }
                }
            }

            var shipment_methods = $$('div.onestepcheckout-shipping-method-block')[0];
            var shipment_methods_found = false;

            if(typeof shipment_methods != 'undefined') {
                shipment_methods_found = true;
            }

            if(shipment_methods_found)  {
                shipment_methods.update('<div class="loading-ajax">&nbsp;</div>');
            }

            var payment_method = $RF(form, 'payment[method]');
            parameters['payment_method'] = payment_method;
            parameters['payment[method]'] = payment_method;

            if(update_payments){
                var payment_methods = $$('div.payment-methods')[0];
                payment_methods.update('<div class="loading-ajax">&nbsp;</div>');
            }

            var totals = get_totals_element();
            totals.update('<div class="loading-ajax">&nbsp;</div>');


            new Ajax.Request(url, {
                method: 'post',
                onSuccess: function(transport)    {
                    if(transport.status == 200)    {

                        var data = transport.responseText.evalJSON();

                        // Update shipment methods
                        if(shipment_methods_found)  {
                            shipment_methods.update(data.shipping_method);

                        }

                        if(update_payments){
                            payment_methods.replace(data.payment_method);
                        }

                        totals.update(data.summary);


                    }
                },
                onComplete: function(transport){
                    if(transport.status == 200)    {
                        if(shipment_methods_found)  {
                            $$('dl.shipment-methods input').invoke('observe', 'click', get_separate_save_methods_function(set_methods_url, update_payments));
                            $$('dl.shipment-methods input').invoke('observe', 'click', function() {
                                $$('div.onestepcheckout-shipment-method-error').each(function(item) {
                                    new Effect.Fade(item);
                                });
                            });
                            //explicitly click radios to trigger totals calculation with new rates
                            var shipMethodRadios = document.getElementsByClassName('shipping-method-radio');
                            for (var i = 0; i < shipMethodRadios.length; i++) {
                                var radio = shipMethodRadios[i];
                                if(radio.checked) {
                                    radio.click();
                                }
                            }
                        }

                        if(update_payments){
                            $$('div.payment-methods input[name="payment\[method\]"]').invoke('observe', 'click', get_separate_save_methods_function(set_methods_url));

                            $$('div.payment-methods input[name="payment\[method\]"]').invoke('observe', 'click', function() {
                                $$('div.onestepcheckout-payment-method-error').each(function(item) {
                                    new Effect.Fade(item);
                                });
                            });

                            if($RF(form, 'payment[method]') != null)    {
                                try    {
                                    var payment_method = $RF(form, 'payment[method]');
                                    $('container_payment_method_' + payment_method).show();
                                    $('payment_form_' + payment_method).show();
                                } catch(err)    {

                                }
                            }
                        }
                    }
                },
                parameters: parameters
            });

        }
    }
}

//]]>
</script>

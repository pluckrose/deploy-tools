<?php
/**
 *
 * Webshopapps Shipping Module
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * Shipper HQ Shipping
 *
 * @category ShipperHQ
 * @package ShipperHQ_Shipping_Carrier
 * @copyright Copyright (c) 2014 Zowta LLC (http://www.ShipperHQ.com)
 * @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 * @author ShipperHQ Team sales@shipperhq.com
 */
?>
<?php
$helper = Mage::helper('shipperhq_shipper');
$checkoutHelper = Mage::helper('onestepcheckout/checkout');
$dataHelper = Mage::helper('onestepcheckout');

if(!empty($checkoutHelper->settings['addressreview']['enable_addressreview'])):?>
    <div id="addressreview" style="display:none">
        <div class="leftcol">
            <div id="addressreview_billinga"><h4 class="title"><?php echo $this->__('Billing address'); ?></h4><div class="data"></div></div>
            <div id="addressreview_shippinga"><h4 class="title"><?php echo $this->__('Shipping address'); ?></h4><div class="data"></div></div>
              <div id="addressreview_shipping"><h4 class="title"><?php echo $this->__('Shipping method'); ?></h4><div class="data"></div></div>
            <div id="addressreview_payment"><h4 class="title"><?php echo $this->__('Payment method'); ?></h4><div class="data"></div></div>
        </div>
        <div class="rightcol">
            <div id="addressreview_pickupsummary" display="none"><h4 class="title"><?php echo $this->__('Review in store pickup selections'); ?></h4><div class="data"></div></div>
            <div id="addressreview_summary"><h4 class="title"><?php echo $this->__('Review your order'); ?></h4><div class="data"></div></div>
        </div>
        <div id="buttons">
            <div class="onestepcheckout-place-order-wrapper">
                <button type="button" title="<?php echo $this->__('Place order now'); ?>" id="onestepcheckout-place-order-preview" class="large orange onestepcheckout-button onestepcheckout-place-order" onclick="javasctipt:void(0);"><span><span><?php echo $this->__('Place order now'); ?></span></span></button>
            </div>
            <div class="close-preview">
                <button type="button" title="<?php echo $this->__('Edit more'); ?>" id="close-preview" class="large gray onestepcheckout-button" onclick="javasctipt:reviewmodal.close();review=false;"><span><span><?php echo $this->__('Edit more'); ?></span></span></button>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        //<![CDATA[
        <?php
            if(Mage::getSingleton('customer/session')->isLoggedIn()){
                $blacklist = array('entity_id','entity_type_id','attribute_set_id','increment_id','parent_id','created_at','updated_at','is_active','customer_id');
                $baddresses = array();
                $saddresses = array();
                $customerEmail = $dataHelper->clearDash(Mage::getSingleton('customer/session')->getCustomer()->getEmail());
                $i = 0;
                foreach(Mage::helper('shipperhq_shipper')->getQuote()->getCustomer()->getAddresses() as $address){
                    foreach($address->getData() as $key=>$value){
                        if(!in_array($key,$blacklist)){
                            if($key == 'street'){
                                for($n= 0; $n<=4; $n++){
                                    if($address->getStreet($n)){
                                        $baddresses[$i]['billing:'.$key.$n] = $dataHelper->clearDash($address->getStreet($n));
                                        $saddresses[$i]['shipping:'.$key.$n] = $dataHelper->clearDash($address->getStreet($n));
                                    }
                                }
                            } else if ($key === 'country_id') {
                                $baddresses[$i]['billing:'.$key] = $dataHelper->clearDash(Mage::getModel('directory/country')->loadByCode($value)->getName());
                                $saddresses[$i]['shipping:'.$key] = $dataHelper->clearDash(Mage::getModel('directory/country')->loadByCode($value)->getName());
                            } else {
                                $baddresses[$i]['billing:'.$key] = $dataHelper->clearDash($value);
                                $saddresses[$i]['shipping:'.$key] = $dataHelper->clearDash($value);
                                $baddresses[$i]['billing:email'] = $customerEmail;
                                $saddresses[$i]['shipping:email'] = $customerEmail;
                            }
                        }
                    }
                    $i++;
                }
                echo 'var customerBAddresses = '.Mage::helper('onestepcheckout')->jsonEncode($baddresses).';';
                echo 'var customerSAddresses = '.Mage::helper('onestepcheckout')->jsonEncode($saddresses).';';
            }
        ?>
        var addressTemplates = {
            shipping: '<?php echo str_replace("\r", '', str_replace("\n", '', $checkoutHelper->settings['addressreview']['shipping_template']));?>',
            billing: '<?php echo str_replace("\r", '', str_replace("\n", '', $checkoutHelper->settings['addressreview']['billing_template']));?>'
        };
        addressPreview(addressTemplates, 'addressreview');

        function addressPreview(templates, target) {
            var pickupReview = '<?php echo Mage::helper('shipperhq_shipper')->showPickupConfirm(); ?>';
            if(pickupReview == '1') {
                var pickupItems = document.getElementsByClassName('datepickerstorepickup');
                var output = '';
                $('addressreview_pickupsummary').style.display = "none";

                for (var i = 0; i < pickupItems.length; i++) {
                    var pickupDateSelect = pickupItems[i];
                    var idOfPickupDate = pickupDateSelect.id;
                    var lastPartMethodName = idOfPickupDate.substr(18);
                    var indexOfCarriergroupEnd = lastPartMethodName.indexOf('_');
                    var pickupCarriergroupId = lastPartMethodName.substr(indexOfCarriergroupEnd+1, lastPartMethodName.length);
                    if (isNaN(pickupCarriergroupId) || isNaN(parseInt(pickupCarriergroupId))) {
                        var carriergroupInsert = '';
                        var pickupCarriergroupId = '';
                    } else {

                        var carriergroupInsert = '_' + pickupCarriergroupId;
                    }

                    var pickupDate = pickupDateSelect.value;
                    var locationDropdown = $('location-select' + carriergroupInsert);
                    if(locationDropdown != '' && pickupDate != '') {
                        var pickupSlotDropdown = $('pickup_slot_select' + carriergroupInsert);
                        var pickupSlotIndex = pickupSlotDropdown.selectedIndex;
                        var pickupSlotOptions = pickupSlotDropdown.options;
                        var pickupSlot = pickupSlotOptions[pickupSlotIndex].text;
                        var itemsIncluded = $('carrier_group_items' + carriergroupInsert);

                        var location = locationDropdown.options[locationDropdown.selectedIndex].text;
                        output += '<br/>';
                        output += '<span>' + location.escapeHTML() + '</span>';
                        if(itemsIncluded && itemsIncluded != '') {
                            var itemText = itemsIncluded.innerHTML;
                            output +='</br>';
                            output += itemText;

                        }

                        if(pickupDate != '') {
                            output += '</br><span> Pickup Date: ' + pickupDate.escapeHTML() + '</span>';
                        }
                        if(pickupSlot != '') {
                            output += '</br><span> Pickup Time: ' + pickupSlot.escapeHTML() + '</span>';
                            output += '</br>';
                        }
                    }
                }
                var targetelem = $(target + '_pickupsummary').childElements()[1];
                if(targetelem && output != ''){
                    $('addressreview_pickupsummary').style.display = "";
                    targetelem.update(output);
                }
                //Storepickup end

                var bparams = {};
                var sparams = {};
                var savedBillingItems = $('billing-address-select');
                if(savedBillingItems && savedBillingItems.getValue()){
                    index = savedBillingItems.selectedIndex;
                    bparams = customerBAddresses[index];
                } else {
                    var items = $$('input[name^=billing]').concat($$('select[name^=billing]'));
                    items.each(function(s) {
                        if(s.getStyle('display') != 'none'){
                            selectText = s.options
                            if(selectText){
                                value = selectText[s.selectedIndex].text;
                            } else {
                                value = s.getValue();
                            }
                            if(value){
                                value = '<span class="' + s.id.replace(':','-') + '">' + value.escapeHTML() + '</span>';
                            }
                            if(s.id == 'billing:region_id'){
                                bparams['billing:region'] = value;
                            } else {
                                bparams[s.id] = value;
                            }
                        }
                    });
                }



                var savedShippingItems = $('shipping-address-select');
                if(savedShippingItems && savedShippingItems.getValue()){
                    index = savedShippingItems.selectedIndex;
                    sparams = customerSAddresses[index];
                } else {
                    var items = $$('input[name^=shipping]').concat($$('select[name^=shipping]'));
                    items.each(function(s) {
                        if(s.getStyle('display') != 'none'){
                            selectText = s.options
                            if(selectText){
                                value = selectText[s.selectedIndex].text;
                            } else {
                                value = s.getValue();
                            }
                            if(value){
                                value = '<span class="' + s.id.replace(':','-') + '">' + value.escapeHTML() + '</span>';
                            }
                            if(s.id == 'shipping:region_id'){
                                sparams['shipping:region'] = value;
                            } else {
                                sparams[s.id] = value;
                            }
                        }
                    });
                }

                var form = $('onestepcheckout-form');

                 var shipping_method = $RF(form, 'shipping_method');
                 if(shipping_method){
                     var shipping_label = $('s_method_' + shipping_method).up('dt').down('label').innerHTML.stripScripts();
                     var shipping_title = $('s_method_' + shipping_method).up('dt').previous('dd').innerHTML.stripScripts();
                     var shipping_row = shipping_title + ' - ' + shipping_label
                 }

                var useOnlyBilling = $('billing:use_for_shipping_yes').getValue();
                billinga_template = new Template(templates.billing);

                if(useOnlyBilling){
                    shippinga_template = new Template(templates.billing);
                }else{
                    shippinga_template = new Template(templates.shipping);
                }

                var payment_method = payment.currentMethod;

                if(payment_method){
                    var payment_label = $('p_method_'+payment_method).up('dt').down('label').innerHTML.stripScripts();
                }

                var targetelem = $(target + '_billinga').childElements()[1];
                if(targetelem){
                    targetelem.update(billinga_template.evaluate(bparams));
                }

                var targetelem = $(target + '_shippinga').childElements()[1];
                if(targetelem){
                    if(useOnlyBilling){
                        targetelem.update(shippinga_template.evaluate(bparams));
                    }else{
                        targetelem.update(shippinga_template.evaluate(sparams));
                    }
                }

                /*   var targetelem = $(target + '_shipping').childElements()[1];
                 if(targetelem){
                 targetelem.update(shipping_row);
                 } */

                var targetelem = $(target + '_payment').childElements()[1];
                if(targetelem){
                    targetelem.update(payment_label);
                }

                var targetelem = $(target + '_summary').childElements()[1];
                if(targetelem){
                    targetelem.update('');
                    targetelem.insert($$('table.onestepcheckout-summary')[0].cloneNode(true));
                    targetelem.insert($$('table.onestepcheckout-totals')[0].cloneNode(true));
                }
            }

        }

        //]]>
    </script>
<?php endif;?>

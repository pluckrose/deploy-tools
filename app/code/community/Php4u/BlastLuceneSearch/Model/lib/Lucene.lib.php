<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2013
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of ditribution, sell, transfer, reverse engineering forbidden - see licence above
 *
 * Code was obfusacted due to previous licence violations
 */ 
$_F=__FILE__;$_X="JF9GPV9fRklMRV9fOyRfWD0iSkY5R1BWOWZSa2xNUlY5Zk95UmZXRDBpU2tZNVIxQldPV1pTYTJ4TlVsWTVaazk1VW1aWFJEQnBVMnRaTlZJeFFsZFBWMXBUWVRKNFRsVnNXVFZhYXprMVZXMWFXRkpFUW5CVk1uUmFUbFpKZUZGc1pGQldNWEJVV1ZSS05GUnNWbk5YVkZaaFlYcHJNVlpYTVdGWFJrcEZVVzVDVmsxdVVtRlViRnBLWlVaR2MxcEdRbGROV0VKVlYxWlNTMDVHVW5OV2JrNVlWa1phYUZsWWNISk5WbHBZVFZkR1dGSnJjRVpWVnpWRFZqRktXR0ZJY0dGU2VrWlFWbTE0VjJNeFRuUmlSVFZwVm10d1QxWXhXbUZXTVUxNFVtNU9ZVkpzV2xWWlZFcFRWREZXZEU1VlRsaFdiVko1V1ZWa1IyRkhTbFpqUkVKaFVsZE5lRlpyV21GV2F6VldWV3hrVjJKV1NrbFdWRVpoVWpGYVYxSnVVbXRTYkhCWVZXeFdkMVJzV2xWU2JHUlZUV3hLZWxscVRtOVZNa1Y1WlVaT1dtSkhVblpYVmxwVFYwVTFWMVJ0YkU1V01VbzBWbFJLTkZsV2JGWk5WV2hzVWxaYVYxWnRNVk5qYkZwMFpVVndiRll3V2taV1IzaFhZVVV4ZEdGR2JGZE5ha1V3VldwS1UxTkdXbkpoUjJoVFRUQktVRlpHV2xka01WRjRXa2hLV0dKWVVsWlVWM1IzVTFaVmVVNVdUbGROYTNCSVZUSXhiMVl5Um5KVGJXaFZZa1p3Y2xac1drOWtSVFZYVm0xb1RsSkdXWHBXYkZwaFlqRkplRlJ1VGxSaVJuQlZXV3hTYzJGR1ZuUk5WemxYVW0xNGVGVXlkSGRpUjBwR1RsWnNXR0V4V2pOV1YzTjRVbXhrZFZac1drNVdiSEJZVjJ4V2ExSXhUa2RWYmxaV1lrWmFjRmxVUW5ka01XUlhWMnhrVkUxV2NGaFpNRnB2VkRGYWNrNVlRbFpoYTBWNFZGVmFkMVp0UmtaVWJXaFhUVWhDV2xaclkzZE5WbHB6VTJ4b1ZXRnNTbUZXYkdSVFZVWndSbGRzVG10V2Exb3dXV3RrYjFSc1NsaFBWRnBYVFZad1dGbHFSa2RqYXpGV1lVWmFhVkpyY0ZGV2JYQlBVVEpPUjJOR1pGWmlSbkJ6VlcweE5GZHNiSFZqUlU1WFZqQldNMVJzYUd0V2JGcDBZVVZvVmsxdWFFeFdiWGhQWkZaS2MyTkhhR2hsYkZwR1ZtdGtOR0V4VVhsVmEyaFVZVEpvVUZacVNtOVdWbFowWkVkR2ExWnNWalJXYlRGSFZXc3hjbUpFVmxkU00xSllWbTB4UjJOc1pISmtSbHBwVW10d1NWZFhjRWRqYlZaV1RWWmFVRll6UWxSVVZXaERUVEZhVjFwRVVsWk5hM0JKVlRJMVQxWkhTbkpPVjBaVlZqTkNSMVJWV25Ka01YQkdaRWQwVTJKWVVURldNblJYVGtaVmQwMVZWbE5oYXpWWFZGWmFZVlpHVlhsTlZrcHJUVVJHV0ZadGVFOVdNVnBIVjJ0YVdGWnNjRmhWYWtwWFVqRlNjMWRzWkdoTlJGWjRWa1prTUZsV1pGZFhhMmhPVmtaS2IxWnFRbmRsVmxKellVVTVWMUpzY0ZsV1Z6VmhWbFphV0ZWc1VsWk5WbkJJVm14YWEyTnJNVmhsUm1SVFRUSlJNbFpxUm1GV01rbDRVbTVLVGxaWGFGZFphMXBMVlVaYWNWUnJUbXBTYmtKWVZsZDRZV0pHU25SbFJuQmFWMGhDV0ZsWGMzaGpiR1J6WWtaa1UyVnJWWGRYVmxwclV6RmFjazVXYkZWaVJscFZWV3BCTUdWc1dsbGpSVTVxVFZWd1NWVXhhSE5aVmtwMFZXeFNWMkZyY0haVk1GcFdaVVphZEZKc1ZrNVdiSEJKVmxSSk1WUXhXblJUYTJob1VtczFXRmxzYUZOTk1WWnhVbXM1VjJKR2NERldSM2hyVlRGWmVtRkZiRmRXYlZFd1ZrUkdZVlpyTVZkYVIzQlRWMFpLV0ZkV1VrZFpWbVJIVm01T1YySnJOVlJWYlhNeFpWWlZlV1ZIUm1sU2JIQlhXVEJXTkZZeVNraGhTSEJXVFdwR1QxcEVTa3RTYkhCSVVteE9XRkpWY0ZwV2JHUTBZVEpKZUZac1pGaGlhelZaV1d0V2QyRkdVbGRYYms1T1RWWmFNRnBWVlRWV01rcFdWbXBPVjAxdWFFUldha3BHWlVkT1NXSkdhR2hoTVhCVVYydFNSMkV4WkVkalJXUlVZa2RTV0ZWdGVIZGlNVnBWVW14a1YwMUVSa2hXUnpWUFZtMUtjbU5HWkZkTlJsVjRWWHBHVjJNeFpIUlNiR2hwVW01Q1dGWnFTakJOUmxWNVUydGtWMkZzU2xoVmJURlRZMnhhYzFaWWFGZGlWWEJIVkRGYVMxUnRTbGxoUlZKWVZrVmFXRmw2Umt0a1JrNXlWMnM1VjJKSVFsVldha0pyWWpGU1IxZHNhR3hTYlZKWFdXeFZlRTB4YkhKV2JVWm9WbXR3VmxscldrOVdWbHBZWVVoYVYyRnJXbGhaTW5oaFpGWlNjMVpyTlZkV2VtZzBWbXhhYTAxR1VYaFhXR2hZWW1zMVZGbHNVbGRYUmxaeFZHczFUbFpzY0hwV2JUVlBWVEpLVjFkclpGcE5SbkJZVm1wR1dtVnRSa2RhUm1SWFRUSm9XVlpzWkRSa2JWWkhXa2hLV0dKRlNsUlVWM2hMVjFaYVdHVkhkR2xOVld3MFZrZDRZVmRIU2xsVmJFNWFZVEZ3YUZwWGVGWmxWMUpHWkVaa1YwMUlRa2xXVkVvd1RVWmFkRk5yWkdwU1ZHeFpXVmQwWVZVeGNFVlNiWFJZVW01Q1NGWnRlR3RXTWtwSlVXeGFWMkpHY0ZSVlZFcEtaVVpLZFZSc1dtbGhlbFpZVjFaU1EyUXhWWGhpUmxaVVlXeEtWbGxyV2xkT1JsbDVaVVU1V0ZJd1ZqWlpWVlpQVmxaYVYxZFlaRlpOYm1oSFdsWlZOVmRGTlZkWGJXeFlVbXR2TWxadE1UUlpWbFY1Vkc1T1dHSnJOVmRaYTFwM1l6RmFjMVp1WkZSV2JIQjVWbGQwYTFaSFNraFBWRkpXWWxob1ZGWlhNVXRTYkdSelZHeGthVmRHU1hwV2JURTBWbTFXUjFkdVNsQldiVkp3VlcxMGQxTkdXbGhOVkZKVlRWVTFlbFV5TlV0V1IwcElWV3hvVjJGck5YWlZhMXBoVm14a2MxZHRkRTVXYmtKYVZqSjBZVk14V1hoWGEyUllZVEpTVjFSV1dtRldNVkpYVjJ4a1UwMVdXakZWTWpGelZURmFTR1ZHVmxoV00xSllXa1JHVG1WR1pISmhSM1JUVFRGS1ZWZFhkR0ZUTVZsNFYyNVNhbVZzV2xoVVZsWmFUV3hhV0UxRVJsZGhla1pZVm14b2ExZEhSbkpYYkZKYVRXNU5NVlV3V25kU01WSnpXa2RzVkZKVmNFcFdiVEV3WVRBMVIxWnVUbWxOTW1oWVZqQmtVMkl4Vm5OV2JtUlhZa1phZWxsVlpEQmhWMHBIWTBoc1YySlVRVEZXVkVwR1pVWk9jMVJzY0doaE0wSjVWbXRXYTFJeFduTlVia3BWWWtkU2NGVnROVU5XVmxwVlVtMUdWbUpXV2toV1J6VlBWbTFGZWxGc1VsZGhNbEV3Vm14YVZtVkdXbk5hUmxaT1ZteHdTVlp0TVRCaE1rWlhVMjVLVDFac1dsaFphMlJUVmtaVmVXVkhSbXBpUmtwNVZrZDRVMVl5U2taWFdIQllZa1phV0ZacVJsWmxSbVIxVTIxd1UySkdjRlpXYlhoaFdWWlNSMVp1VW10VFJUVlVXV3hhWVZJeGEzZFhhM1JYVFZad1dsVlhjelZXTVZsNllVWkNWbFpGV2t0YVZWcFhWMWRHUjFWc1pFNWlSWEJWVm0weE5GVXhXWGhpUm1SVllrWndXRmxZY0hOV2JGcDBaRWRHVjAxWGVIbFdiRkpIVmxaYWNsWnFUbFpOYmxKb1ZtMTRZV014V25GVmJGcFhUVEpvVEZkclVrZFpWMDE0Vm01S2FsSnJOVmhWYWs1dlZteGFWVkpzWkZkaGVsWllWako0YTFaWFJYaGpSbWhhWVRGVmVGVnRlR0ZXTVd3MlZtMXNhVkpVUlRGWFYzUlhWREZhVjFkdVNrOVdiVkpYV1d4b1UxVkdXbkpYYlVaWVZqQmFSMXBGV210aFJURlpVV3BXV0ZkSVFrUlpla1pLWlVkT1JsZHRiRk5oZWxaWlYxZDBWMlF4VFhoWGJHaHNVakJhVlZscll6Vk9SbHBJWlVkR1ZVMVZiRFZXVjNoUFZqSktSMU5zVWxwaVdHaFlWbXBHWVdOck9WZGFSbVJvWld4YVdWWnJVa2RXYXpWWFZHNU9WR0pHV25CVmJHUnZWbFphYzFkdFJsWlNiSEJYVmpKNFQyRnJNVmRYYm5CWFVqTm9URlpxUm1GV1ZscHpXa1prVTFac2NGRldWbEpIV1ZaWmVGWnNiR2hTYkVwd1ZXMTRkMVJHV2xobFJrNXFUVlp3U0ZaSGVHRldNVnBIVjJ4b1YySllUWGhWYWtaaFpFZFdSazlXWkU1U1JWcEtWMnhXWVZZeFduUlRhMXBQVTBoQ1dWbFhkR0ZUUmxweFVtczVhbUpWTlVoV01uTXhWVEF3ZVdGR1NsZGlSMDE0V1hwR1JtVkdUbGxoUm1ScFlUTkNVbFp0ZUZOV01WSnpWbXhrVm1Fd05WWlZiWE14VmpGYVNFNVhSbHBXVkVaWVZXMXdVMVl5U2xsaFJtaFdUVzVvVEZac1pFdFNiVVpIVld4a1YySkdWalJXYlhoVFVUSk5lRk51VWxSaE1YQlJWbXhvUTFaR1duTlZiR1JXWWtad2VWZHJhSGRVYkZweVkwaHdWbUpIYUhaV2JURkdaV3hHYzFkc1ZsZFdhM0JWVjFjeE5GbFhUbGRTYmxaVllrZFNXRmxZY0ZkU2JGcFhXa1JTVjAxV2NFaFZNbmhyVmpKS1ZWWnNhRmRoTVZwSFZGWmFWMk5XU25SU2JFNU9WMFZLU0ZaVVNqUlpWMFpHVFZaa1dHSnNXbGhaVkVaTFUwWlZlV1ZJV214U2JWSjVWakl4YjFVeFduVlJhM2hYVm5wRk1GZFdXbUZXTVZwMVZHeFdhRTFFVmxoV1Z6RTBXVmRSZUZac2FHeFNWVFZZVkZaV2QxZFdiRlpXYlhSWFRWWnNOVnBWVmxOV2JVcEhZMFY0VjJKWWFFeFpNbk40VmpGV2MxcEdaRk5pU0VKTVZtMHhOR0l5VFhoU1dHaFZZbXMxVjFsc1VsZFVNVlp6WVVaT1ZFMVdXbFpWTVZKWFlWZEtSMk5JYkZkaVZFRXhWbFJLUm1WWFZrWmhSbVJUVFRKb1JWWnNVa3RUTVVsNFZHNU9hVkpzY0ZoWmEyaERWRlphV0UxVVFrOVNNSEI1VkZaV1lXRXhTbGxSYkU1VlZqTkNlbHBHV21GV01XUjBZMFUxVjFaR1dsaFhWM1JYWWpGa1NGTnVUbXBUUlZwaFdXdGFTMUpHYkhSbFNFNXFWbXMxZWxrd1pFZFViR1JHVTJ0d1dGWXpVbFJWVkVwSFpFWk9jMkZIZUZSU1ZYQnZWbGN3ZUdJeFdrZGhNMlJoVWxoQ2MxWnNVbGRUYkZwSVpFaGtWMUpyY0ZaV2JUVjNWMFpaZWxWdVNsVldSWEJQV2tSS1MxSnRTa2RYYld4cFYwZG9iMVp0TURGa01WbDNUbGhPWVZOR1NrOVdiVEZUWXpGYWMxcEVVbFJXYkd3MVZHeGtSMkZIU2xaalJtUmFUVWRvY2xZd1pFWmxWbFp6Vld4d2FFMXNTazFYVkVKclZXMVdWMk5GYUdwU01uaFlXV3RrTTAxV1duRlRhbEpwVFZVeE5WWnROVTloYkVwelUyeE9XbUpIYUhaWk1GcHpZekZ3UjFSdGRFNVdNMmQzVmtaYVlXRXlSbGRUV0dSUFZrVktZVmxVU205WFJtUlhXa1prVjJKRk5URldWM2gzWVVkR05sWnJNVmhXYkhCeVZXcEdhMUl4V25WVmJYUlRUVVp3V1Zkc1pEUlRNbEpYVjJ0YVdHRjZiRk5VVjNoaFpXeHJkMWR0T1ZkTlZtdzFWbGMxUTFadFJuSmlla0phVFZad2NsbDZSbk5PYkVwMFlVZHNWRkpWY0ZkV2JGcHFaVWRKZUZwSVVsUmlSbHB2VkZSS05GZFdiSEpXYkdST1RWWlpNbFZYTlU5Vk1VbDNZa1JPVldKR1dsUlpWVnBoVm14a2NWVnNXazVXYkhCWlZtdFNTMVV5VFhsVWExcG9VbTFTV0ZSWGVFdGxWbHBIV2tSQ1dsWlVWbnBXUjNoaFYyMVdjMWR0T1ZkaVZGWkVWRlphWVdSRk5WbGFSbWhwVW0xM2VsWkhkRzloTVdSSVUydG9WbUpGTlZsWlYzUmhUVEZWZUZkdFJtdFNNVnBIV1RCYVUxVXlSWGxQVkZaWFZrVmFXRmxxUmtabFZscHpXa2R3VTJKWWFGcFhWekV3VXpKT1IxVnNWbE5pVlZwUVdXdFZNVll4WkhKVmJFNW9Za1Z3TUZwRlVsZFdNa3BWVm14b1YwMXVUalJaZWtaaFpFVTFXRkpzVG14aE1XOHlWakowYW1WR1RYaFVhMlJVWW10YVUxbHNaRzlYUm5CWVRWUk9iRkp0VWxaV1J6RjNZVEF4VmsxVVRscGhNVnBVV1ZaVmQyVkhUa1pYYkdSWFlsVXdlRlpZY0VkU2JWWkhVMjVXVkdKVldrOVdhazVTVFZaa2MxWnRkR2xOYTFwNVZGVm9hMVJzV2paV2JVWlZWbGRTVkZVd1duTldWazV5WkVaT1UyRXhjRFJXTW5SWFpERmFSMU51VmxKaWJIQlpWbXRXZDJWc1ZsaE5WVnBzVW14S2VWWXllRTloVmtweVkwWmFWMVo2UmpOWmVrWlRWakZhZFZSc2FHbGhNMEo2VmxkNGEwNUdTbk5WYkZwaFVqTlNWVlJWVWtkWFZuQldWV3RPVjAxcmNFbFpWVkpQVmpBeGRXRkhSbUZTUlVZMFZURmtTMU5IVGtaT1ZrNVRZa2hDVEZadE1IaE9SbFY0Vkc1S1RsWlhVbGRaYlhoTFZsWnNWVkZ1WkZWTldFSlpXbFZvVDFReVNrbFJiR3hoVWxaYWFGWkhjM2hXYXpWWFdrWmtWMDB5YUZWV2JGSkhVekZaZVZScldtbFNiSEJ2VkZaYWQySXhXbFZSYlVaVFRXczFXRll5TlZOaFJrcDBWVzVDVjJGck5WTlVWM2hoVTBkV1IxcEdVazVXV0VKWlZsUkpNVk14YkZkVGJrcHFVbFJzVmxadE1WSk5SbHBXVjIxR1ZGWXdOVWRVYkZVeFlWWmFjMk5HY0ZkaE1sRjNWbXBHVm1WV1NsbGlSbHBvVFVSV1dGWnRNVFJrTVZwSFkwWmFWMVpGV2xWV2JYaExaV3hyZDFwSVRsZE5hMWt5Vm0xMGMxWXlTbFZTV0dSWFZrVmFTMXBWV2s5WFZuQkhWMjFvVG1KRmNGWldhMXBUVVRGTmQwNVlUbFppYTFwVVdXeFNjMVpHV25STlZrNVhUVlp3TUZrd1pFZFdhekZGVW10b1ZrMXVVbWhYVmxwUFUxWkdkV0pHVmxkTk1taFVWMnhhVmsxV1duSk9WbVJoVWpOb2IxcFhlRnBOVmxsNFYyMTBUbEpzUmpSVk1XaHZWbGRLY2xkdGFGWmlSa3BZVmtaYVUxWXhaSFJTYkdoVFlrVndXbFpHV2xOUk1WcEhWMjVXVW1KR2NGZFpiR2h2Wkd4YWNWSnJkR3BOVlRWNVYydGFiMVl4U2xaWFdIQllZVEZLUTFSc1dscGxSbVIxVTJzNVYySkZjRlZXYlhCTFlqRlplRlpZYkU5WFIxSnpXV3RqTlU1V1dsaE9WazVXVFd0d01GcFZWakJXYkZwR1YydDRWazF1YUZoV2FrWnJZMnM1VjFWc1pHbFdNVVkyVmpKMFYxWXhiRmRhUldSWVlURndjRlZ1Y0ZkV01WWjBZM3BHVWsxWGVEQlpNM0JYVlRGYWNsZHFRbUZTVm5Cb1ZrY3hSbVZzUmxWUmJHaHBVbTVDZVZaSGRHdFRNVnB5VGxaYVdHSkdXbTlaVkVaM1ZWWmFkR05GWkZkaVZscElWakowVjFVeVNuSk9WemxWVm14YWFGWXhXbEpsUmxweVpFWmtUbUV6UW1GV2JGcFRVekZrY2sxVlpHcFNXR2hYV1d0YWQxbFdjRVZTYTNScVZtdGFlVlF4VlRGVk1sWjBZek5rVjJKVVFqTlVWbHBIWkVaYWMxZHJPVlJUUlVwWFYxZDBiMUV4V2tkV2JsSnNVbXh3YzFWdGVFdFhWbkJXWVVkMFZtRjZSbGRVYkZKSFZteGFObFp1Y0ZoV2JIQk1XVEl4VDFKck5WZFdiR1JwVW0xM2VsWnNZM2hsYlZaSFZHdG9WR0V5ZUZaWmExWkxWa1paZDFkcmRGZFNiSEI0VlZjd05WWXdNVmRUYTJoV1lrZG9jbGxYYzNkbGJFWjFVbXhXVjAweWFFMVdWbEpIVlRKTmVGWnVTbUZTYkhCWVZtdGtORmxXV1hoaFNHUldUVlpzTkZZeWRHdGhWa3BHVGxkb1ZtRXhXbmxVVmxwelkxWktkR1JHVGxkaGVsVjNWa2Q0YTFJeFZYbFdia3BZWVRGYVdWbFVSbmRXUm14VlVWaG9WMDFYVWpGV1Z6RnZWa1pLVjJOSWNGZFdNMEpFV2tSR1lWWXhWbGxhUjBaVFRUQktVRlpYY0VkWlZscHpXa2hXYWxKVWJGWlVWbFozVjFaa2NWUnRkRmRXVkVaSVZqRm9kMWxXV2xkV2FsSmFaV3RhZWxSdGVFdGphemxYVkcxb1RsWnNhM2hXYlRCNFRVWlZlRlpZYUZkWFIxSlFWbXhrYjFaR1duVmpSbVJXVm01Q1dGWnRkSGRpUmxwMFZXeG9XbFpXV2pOWFZsVjRVMVpHY2xwR2NGZFdiSEJOVm0weGVtVkdUa2hTYTJoT1ZteHdjMWxVUW5kWFZscHhVMjV3YkZKVVZsaFZiWGhYWVZaS1dWRnNUbFZXTTJoTVdrZDRhMWRGTVVWU2JGcG9aV3hhV2xaclpEQmlNVnBJVTJ4c1VtRjZiRlpXYkZwTFpXeGFSMWRzVGxoU01EVkpWREZhVjFZd01VZGpSbVJYWVRGd1ZGVjZSbUZXTVdSWllrZHdUazFzU2xwWFZsSkhVekZXUjJKSVRtRlNWRlp6VlcwMVExSXhjRVpXVkZaWFVtdHdlVmt3V2xOV01rcEhVMnRPVlZaV1ZqUlZha3BMVWpGYWRHSkdUazVTYmtKUlZqRmplRTFHYkZoVFdHaFdWMGRTV1Zsc2FFTlVNV3haWTBaa1RsWnNXakJhVlZVMVZsVXhSVkp1YkZWaE1taHlWbTB4UzFaV1NuSmxSbkJzWVROQ1NWZHJXbUZWTWsxNFVtNU9hbEl6YUhCV01HUnZWR3hhY2xwRVFtbE5hMVkxVlcxMFlWUnNaRVpqUmxaYVlrWktlbFpWV25Oak1XdzJWV3MxVTJKR2EzbFdWbVF3WkRKS1NGTnNaRlJoYTBwWFZGYzFVMkZHV1hkWGEzUlhZbFZ3UmxaWGVGZFViRWw0VTJwV1YxSnRVVEJhUnpGWFZqRndTVlZ0YkZOaGVsWlpWbGQ0VjJOdFZrZFhiRlpTWWxWYVZsbHNXa2RPUm1SeVlVVTVhRkpyY0hsWk1GcFBWbFpaZWxSWWFGcGxhMXBYV2xWYWQxSldWbk5WYkU1WFVtdHJlRll4VWtOVk1WRjVVMnRvVTFkSGFGVlpWM1JMVjBaV2NWUnJUbXBpUm13MVdsVmtSMVV4V25KWGJGcFdUV3BHZWxacVNrdFRSVGxWVjJ4a1RsWnJjRVJYYTFKQ1RWWmtSMWR1VmxOaVJYQnZXVlJPUTJWc1duUmtSMFpxVFVSV1dGWXlOVXRXVjBwWlVXeENWVlpYVVRCVk1uaGFaVlV4V0U5WGFHbFdWbkJZVmxjd01WTXhXWGxUYTJScVVtdEtWMWxzYUc5a1ZuQkZVVmhvVjJKR1ducFdNakZ6VlRBd2VXRkdVbGRpVkVWM1ZrUkdSMk5yT1ZkWGJXeFRWakpvV2xkWGVHdGlNazVIVmxoa1YxWkZXbkZVVmxwSFRteHNjbFpyT1ZWaVZYQkpXbFZhZDFack1WaFZia3BXWld0YVRGWnRlR3RqYXpWWFYyMW9hRTFHVmpSV2JYaFRVakZSZUZkWWFGZGlhM0J3VlcxNFlWWXhVbFpXYkZwT1ZteFdORlp0Y3pWaFJURnlWMnhzVmsxdVVuWldWVnBoVW1zMVdHRkdjR2xTTVVWM1ZrY3hOR014V25OVmJsSnFVbFJzVDFWcVRtOVRNVnB4VTFob2FVMXJXakJWYlhoaFZUSktjbU5HYUZwaE1YQXpWbFZhVjJSSFZraE9WM2hUWWtad05WZFVRbUZXTVZsNFYyNU9WMWRJUWxkVVZscGhaR3hrVjFwRlpGUlNiRW94VlZkNFMxWXdNSGhUYkdoWFVteHdhRlY2UmtabFJtUnpZVWQ0VTJGNlZtOVhWM1JYWkRGSmVHSklTbGRpV0ZKVldXdFdkMUpzVmxoTlJFWlhWbXh3ZWxVeWREQldWMHBIVmxob1drMVdjRWhXTVZwM1VqRkdkR1ZHWkZkV00yTjRWbTF3UjFsWFNYaFViazVwVFRKU2NWVnNXbmRqUmxaelYyMUdWVTFXY0ZaVlYzUmhWREZhY2s1V1pGZFNla1YzV1ZSR1lXTXhXbkZYYkZwWFpXeGFUVlpzWkRSWlZtUklVbXRrVm1KSVFsaFphMXAzWWpGa1dHVkhSbFpOVm5CWVZrYzFVMVZHV25KT1ZtaFdZbGhvVjFwRVJtRlNWa1owWkVaa1RsWldXWHBYVkVKVFdWZEdjazFZVWxaaWEzQmhXV3RhWVdGR1VuTlhhemxYWWtaS2VsWkhlRk5oVmtwWlVXdGtWMVpGV25KWlZFWlhWakZhV1ZwR1RtbGlSbkJaVmxkd1QySXlUbk5XYmtwaFVtMVNXRlp0ZEdGTlZtdDNWbFJHVmsxWFVrZFZNV2gzVmpGWmVsRnNRbGRoYTNCSVZtcEdTMWRYUmtkaFIyaE9UVzFvTTFac1pIZFVNVlY1Vm14a1YxZElRbkJWYWs1RFZVWlNWbHBFVWxSaVJtdzFWRlpqTldGSFNsWlhiR1JXWWxSV1RGWnRjM2hXTVdSelZHMUdWMDB4U2paV1YzaFdaVVpPUjJORldtdFNWRlpVVkZWU1EwNUdXbkphUkZKYVZqRkdORlp0ZUdGVWJHUkhWMnhvV21FeGNFeFdWVnAzVjBVeFdHUkZPVmRpVmtwWFZsWmplRkl5UmxkVFdHaFlZa1p3WVZsVVJrdFdSbHBGVW0xR1YySkdjREZXYlhoWFZHc3hkV0ZGVmxkU2JWRXdXWHBHYTFZeFVuTmhSMFpUVjBaS1ZWWnRlRzlSTVU1SFYyeG9hbEpWTlhGVVZscEhUVEZTVjFkc1RsWmlSbkJKV2xWV01GWnNXa1pqUmxKV1lURndXRmw2Um1Ga1IxSkhWVzFzVTJFelFYcFdiRnByWlcxV1IxZHJaRmhpUm5CUVZteGtVMWRHVm5GVWJUbFdVbXhhTUZwRmFFOVZNa3BYVTJ0a1YwMXVhSFpXYlhONFkyc3hTV05HV2s1V2JIQXlWakZhYTFJeFRrZFZibFpTWWtWd1dGUlVSa3RXVmxwMFpVWk9WMDFWY0hwV1YzaHJWbGRGZDJOR1JsZGlSMUV3Vld4YWEyTnNXblJTYkdSWFRVWlpNRlpYTUhkTlZsbDRVMnhrV0dKdVFsZFpWRVozVkVaYWRHTjZSbGROVmxwNlZrZDRZVlJzU2xsUmF6bFhZa2RSTUZkV1pFOWtSazUxVTJ4Q1YxSnNjRlJYVm1Rd1pERnNWMWRZWkZkaWF6VndXV3RWTVdWV1dYaFZiR1JZVW10d2VsWXlOWE5XYlVwWllVVm9WMkZyV2t4V2JHUkhVMFUxVjFkc1RtaGxiRnBGVm10a01GWnRWa2RUYkdoVlYwZDRhRlZxVGxOalJscHpWMjVhVGxac1ZqUldiWE0xVm1zeFdWRnVjRmRpV0ZKb1ZsUktSbVZHWkhKa1JscG9UVlZ3UlZkWE1UUlVNV1JJVWxod1lWSXlhRmhXYTJSNlpVWmFWMXBJWkZSTlYxSjZWMnRXWVdGV1NqWldiRlphVmtWYWVWUldXbUZTTVdSeVQxWmthR1ZzV2xoV2FrbzBVekpHVjFOc2JGSmhNbWhZVm0xNGQxZEdjRmhqZWtKclRXdHdSMWxyV205aFZsbDVZVWhvV0Zac2NGaFZha3BQWXpGYWMyRkhkRk5pVmtwV1ZsY3hlazFXV1hoVmJrcG9VMFUxVlZsclZuZFNiRlpZVFVSR1YxSXdXbmxXYkZKSFZtMUtSMk5GYUZkaGExcFlXVEo0VDJSSFZraGxSbVJPVWtWSk1sWnNVa2RXTWtsNFlrWm9VMkV5YUZaWmJYUkxWVEZhY1ZSc1RsZFNiSEI2VmxkNGExVXlTa2RUYkd4YVlURmFURlpWV21GWFIxWkdWbXhvYUUxVmNEWldiRkpIVXpGYWMxcElUbGhpUm5CWVdXdGtlbVF4WkZoTldIQlBWbFJXV0ZWdE5VZFdSMHBKVVd4c1ZtSkhVVEJhUmxwV1pWZFNSMk5GT1ZkaE0wSlpWbGN4TkdFeFduUlNXR1JxVWxoU1YxbFVSa3RTUm14MFpVZDBWMDFyV2tkYVJXUTBWakpLV1dGSFJsaFdiRXBMVkd4YVUxSXhaSEppUmxacFZrWmFiMVpYTlhkU01VNUhZMFprVjJKck5WUlZiWGhoWld4WmVXVkhSbFZpUlhCNldUQm9VMVl5U2tkVGExSlhZV3RhVjFwVldtdGtWazV6V2tkc1UxWkdXbE5XTW5oaFZqRk9kRlpzWkdGU2JWSnZWV3hvUTJGR1VsWmhSVTVVVW14R05GWXllRTlXYXpGWFkwaHNXazFHY0haV2JGVjNaVmRXUmxWc1ZsZE5NbWcyVm1wR1lWUXhaRWRqUlZwclVtczFiMWxzYUc5VlZscHpWMjFHVjAxV1NubFVhMmhyWVZaS1dHVkdiRnBpUjFKMldURmFjMVl4V25KYVIzQnBVbXh3V1ZadE1YZFZNVnBYVjI1T1UyRnNTbGxaVkVwVFlVWmFjMWRyZEZkV01IQkhWbTE0WVZZeVNrZGlSRnBYVWpOQ1JGbDZSazlXTVhCSlZXMW9VMDB3U25aV2JYaFhXVmRXVjFkWVpGWmhNbEpXVkZaV2QyVnNXblJPVlRsWVVqQldORmt3V210WGJVVjRVMjV3Vm1WcldtaFZNR1JUVTBaS2MxZHNUbGROTW1oSVZtdGFWMkV5UlhoYVNFNWhVbFp3Y1ZWcldtRlhWbHAwVFZjNWJGWnRlSGhWVjNCRFZqRlpkMDFVVmxoaE1sRjNXVlphWVZZeVNqWlNiRnBPVm14d1VWWnNVa2RXYlZaSFZHNU9ZVkpyTlhCVmJUVkRWbXhhZEUxVVFtdE5WV3cwVm0wMVMxZEdXa2RYYkdoYVlURndhRnBXV25OamJHUnpWR3hTYVZKWVFrZFdWbU4zVFZaYVYxZFljRkpoYkhCWldWZDBkMVpHY0VaWGEzUnJWakJ3UjFrd1drdFViRnBaVVd0b1YySkdjR2hYVmxwV1pVWk9kVlJ0Ums1TmJXaFhWMWQwWVZsV1dYaGlSbFpVWVd4S1YxVnRlR0ZOVm14eVZtdDBWbEpzY0ZsYVZWWlhWMGRGZVZWWVpGZFNiRlkwVld4YVIyTldUbk5hUlRWWFZrWmFSbFpzVWtkV2F6VllWV3RvVTJGc2NGbFpiR2hEWXpGYWNWRllaR3hpUmxZMFZtMHhNRmRzV2xWU2JHeFdUV3BXVkZac1pFZGpiRTUwVDFaa2FXSnJTalpXUmxwaFZERmFkRkpyV2xWaVYyaFVXVzEwUzFOc1pISlZhM0JQVm14S1NGWnNhR3RXUmxwR1RsWldWMkpHVlhoV2ExcFRWbXh3UmxwR1VsTk5TRUpMVjFSQ1ZtVkdXWGhUYTJSWVlteEtXRlJXV2t0VVJteHhVMnQwVTAxclZqWlphMlF3VlRBeFdWRnVhRmRTYlZFd1YxWmtUMVl5VGtaYVIyaFRWMFpLZDFaWGVHOVZNVXBYWWtac2FsSXpVbFZaYTFVeFVteFdXRTFFUmxoU01IQldWbTE0YjFsV1NuTmpTR3hoVmpOb1dGcEdXa2RrUjBwR1RsZG9hVkpZUVhoV2FrWmhXVmRHY2sxV2FGVmhNbWhYV1ZSR1MyRkdVbGhPVms1WVlraENXVlJXWkhkaVJrcDBWV3hvVjFaNlZreFdSRVpoVmxaS2NsZHNXazVXYTNCVlZteFdZVmR0VVhoWGJHeGhVbXhhY0ZWdGRIZE5WbHBIVm14YWJGSXhTa2hXTWpWVFZHeGFjbE5zYUZWV2JWSTJXbFZhV21WWFVrZFViR2hvWld4YVNGWkdXbUZpTVZwSFYydGFWR0pGV2xkWlYzUmhWakZ3VjFkc1RtcFdhelY1VmpKek5WWXlSWGRqUjBaWFlrZE5lRmw2U2tabFJtUlpZVVprYVdKclNsWldiWGhXVFZaYVIxcElVbXBsYkZwVVZtMDFRMU5XVWxkV1ZFWldUVVJHUmxWc2FIZFdNREZYWTBoS1YxWkZjRWhaZWtwUFVqRmFkRkpzVGs1TmJXaFRWbTB4TUZsV1NuSk5WV1JXWW1zMVYxbHRjekZqUmxaelZXeGtWMkpHY0ZsVVZXaHZWbGRLUjJORmFGcE5SMmhNVm14YVlWZEdWbk5WYkhCWFlrWlpNRlp0ZUdGU01XUllVbXRrYWxJemFHOWFWM1JHWlVaWmVXUkdaR2xOVlRFelZGWmFhMkZzU25OVGJrcFZWbnBHVkZaRldsZGtSMDVJVGxkMFRsWXhTWGRXUmxwaFpERlNjMU5zVmxkV1JYQllWRmR3UmsxR1drVlNiVVpVVW0xME5sbFZXbGRoVm1SR1Uyc3hXRll6VWxkYVZWVXhZekZPZFZWdGVGTldSM2haVmtaV1lWWnRVWGhYYTJoT1YwZFNXVmxzV21GbFZsRjRWMnhrVmsxV2NFaFdNbk0xVjJ4WmVtRkVUbHBOYm1oVVZtMTRkMUl4VW5SaFJtUlhVbFpXTlZacldtRlZNVVY1VW01U1ZHSnJOVmxaYlhNeFZteFdjMVpVUmxKTlYzaFdWVzB3TlZReVNsWlhWRXBXVmpOb1JGWlVSa3RYVmtaMVkwWmtUbFp1UWxWV2JYQkxVakZKZVZScldsZGlSbkJaVldwT2IxVkdXblJqUlU1cVRVUldlbFpYTlU5V2JVcEpVV3M1Vm1KVVJYcFVWM2hYWkVVeFZWRnNWazVXYmtKS1YyeFdiMVF4V2xoVGEyUlVZWHBzYUZadGVIZGxiRmwzVjIxMFYxWnJXakJWYlhoUFZHeEtkVkZxVmxkaVJscG9XVlJHYzFkR1NuSmhSbEpvVFc1b1YxZFhlRzlpTVZKWFYyeFdVbUV6UWs5VVZsVXhWakZhU0dWRk9WVmlSV3d6VmpKMGMxZHRSWGxoUkU1WFVteHdhRlZzV21Ga1JURlhZVVprVTFkRlNYbFdNV1F3V1ZkT2RGWnNhRlpoTW1oWldXeG9RMVF4YkhKWGJtUnNVbTFTZVZZeU1EVldSVEZ5WTBWa1lWSldXbFJaVldSWFpFWldjbVJHV2xkU1ZuQk1WMnRTUjJNeFduTmpSV3hWWWxob2IxUlVTbTlXTVZwSVpVZEdXbFpzY0hsVVZsWnJWMGRLVlZKc2FGWmlXR2hvVmxWYVlWWldTblJrUm1ST1ZsWndObFp0TVRCa01WVjRVMnRhVkdKc1dsZGFWM1JMVlVaYVZWSnVaR3BoZW14WFZtMTRhMkZXV1hsaFJrcFhZbGhTY2xSVlZYZGxSbFp6WVVkd1UyVnNXbEZXYlRCNFRrWmFjMWRzWkZaaE1sSlhWVzEwZDFOR1ZuUmpSbVJZVWpCd1NWWlhNVWRXVjBwSFkwUk9XazFYVWt4Vk1HUlRVbXM1V0dGSGJGZE5WVll6Vm0xd1IyRXlVWGhXYmtwUFZsZFNjVlZ0ZUdGWFZscHlWbFJHV2xac2NIbFhhMUpEWVZkS1JrNVVRbHBoTVhBelYxWlZlRmRXUm5GU2JHUnBWa1phV1ZacVNucGtNbFpIVkc1V1lWSnVRbTlaVkVvd1RrWlplVTFVVW10TlYxSlpWVzEwYzFWdFNsbFJhemxWVm14YU1sUlhlRmRPYkVaeVQxZG9UbUpGY0VsWFZsSlBaREZhU0ZKdVRsaGlhMXBYVkZWYWQxUkdiSE5YYlhScVZtczFlbGRyWkRCV01rcHlVMjFHVjFaRmEzaFZWRVpyWkVaYWMyRkdWbWxpVmtwV1ZrWmFZVk13TlhOYVNFWlNZbTFTVlZadGVHRk5SbEY0V2tjNVdGSnJjRlpWYkdoclZqRmFXRlZVUWxkaGExcG9WV3BHVDJNeGNFZFJiR1JwVW01Q1YxWnRNVFJWTVVsNFUxaG9WV0pHY0ZkV01HUlRZVVpTVm1GRlRsUlNiRVl6VmxkNFQxWlZNVVZTYm5CYVlURktVRll3V210VFZrWnlWV3h3VjFadVFYcFdWRUpoVlRKU1NGWnJXbEJXVkZad1ZXMTRWMDVHV25KYVJFSldUV3R3ZVZSV1dtRlZSbHAwWVVab1YyRXhXbWhXVlZwWFkxWktkVlJyT1ZOaVJXOTNWa1phWVZNeVJYZE5WbXhTWVRKNFYxUldaRzlrYkZwSVpVVjBVMkpIVWpGVmJYaFhWMFpPUmxOVVNsZE5ia0pFV2tSR1QxWXhXblZWYkVKWFRXMW9XbFpYZUZOU2JWRjRWMnhhWVZKRlNsUlVWbHBMVjBaYVdHUkhSbFpTYkhBd1dWVmFkMVpXV2xoaFNGcFhWbXh3V0Zac1drZGpiSEJIVm14a1YwMHlhRWhXYTFwWFlUSkZlRlJZYUZSaWExcG9XbGQwWVZac2JGVlNhM1JyVm01Q1dGWXlOV3RYUmtweVkwWmFWbUpZYUROV2FrRjRWbXhhY1ZSc1pGTmlWa2w2Vmxkd1MxSXhXbkpOVmxaWVlrZFNXRlZzYUVOVlZscFlZMFZLYkZKVVZraFhhMmhMVm0xS1IyTkdRbGRpVkZaRVZtMTRZV015UmtsYVJsWnBWbGhDV0ZacVNURlZNVnBZVWxoc1ZtSkdTbUZXYkZwM1RURldjMXBGTld4V2JrSkhXa1ZhVTFVeVJYcFJXR3hYVFZad2FGbHFSbE5rUmxaeVdrWkthV0Y2VmxsWFYzUmhVekZhUjFkdVVtcFRSVFZZVm0xNFlXVnNXWGxrUkVKWFRVUkdWMWt3V205V2F6RllWVzVLVjFac2NGZGFSRVpMWkZaT2MyRkdVbFJTVlhCV1ZqRmtORmxYVVhsVWJHUlhZa1phVmxsWWNITmpSbHAwWlVaa1QxSnNjRVpWVjNoUFZqSkdObEp1YkZWV2JXaFVWbXBHYTFOV1JuSlBWbVJvWVRGd1dGZHNWbUZoTVZsNFZtNVNUMVpVVm05YVYzaGhUa1phY2xkc1RsZE5Wa3A2VmpKMGIyRXhTa2RYYkZwYVlrWktTRlpVUm5kU1ZrcDFXa1pTVTJGNlZtRlhWRUpoVVRKS1IxZHNXbGhpYlhoWldWUkdZV05zYkhGVGF6bFVVbXhLZUZadGN6RlZhekI0VTIxR1YxSnNXblpaYWtaT1pVWmtjbUZIZEZOaVZrcFVWa1phWVZsWFZsZFhibEpyVWxoU1dGVnFSbUZXTVZaelZXeGtWMUpzY0ZkVWJGcFRWbFphV0ZWcmFGWk5SMUpNVlRGa1QxSnJNVmRhUms1VFlraEJkMVp0Y0V0a01VMTRWMWhrVGxaWFVtaFVWRW8wVlZaWmQyRkZUbGhpUmtwWlZHeGpOV0V3TVZobFJFSlZWbXh3Y2xsVldscGtNRFZWVVd4a2FWWkZXakpYVmxaclZqRmtSMk5GYkdGU2JGcFBWRmMxYjFKV1drVlNiR1JxVFZVMVNGZHJhRWRWTWtwWVpVaENWMkpHU2xSVVZFWnJWakZrZEdORk9WZE5WWEJZVjFkMFYyRXhWa2RYYWxwWFlsZG9XRlJWV25kVVJteHpWMjVPYWxac1NubFVNV1JIWVZaYVdWRnJjRmhXTTFKMlZtcEdjMVl4WkZsYVIzQlRVbXh3V2xkWGRHdFZNVTVIWVROc2ExSkZTbFJWYlhoaFRVWlplV1ZGVGxaTlZXdzJWbFpTUjFZeFNuUlZhazVhWVd0d1NGWnRjekZXTVZwelUyeGtVMVpHV2xKV2JHUXdWbXN4V0ZOWWFGWmlSMmh4Vld4V2QxUXhXblJPVlU1T1VteFdORlpYY3pWV1YwcEhZMFZzWVZaWGFGUldiRnByVTFaR2RGSnNWbWhOVmxWNFZsUkNZVll4WkZoU2EyUlNZa2RTVDFadGVGcE5SbHB5VjIxMGEwMVdXbmxVTVZwcllXeE9SMU5zVWxwaVdFMTRXVEZhVTFkSFZrZGFSM1JPVmxSV1dGZFdWbTlrTVd4V1RWVnNVbUV5YUZaVVZWcExVa1prVjFkcmRGTmlSbkI0VmpKNFYxUnNTbkpqUkZaWVlrWndWMXBWWkZOU01XUnpZa2R3VTJFd2NGbFdWekUwVmpBMWMxZHJhR3hTYXpWaFZtcENZVmRHYkhKWGJHUllVbXh3UjFVeU1XOVdNa1Y0VjJwT1drMXVhRlJaTW5oM1VqRmtjazVYYUd4aVJsWTFWakZrTUdGdFZrZFZXR2hZVjBkb1dGbFhlR0ZXYkZwelZsUkdVazFXUmpSV2JUVlBWa1phYzFOdWFGWldla1l6V1Zaa1MxSnRTWHBpUm1oWFRURktlRlpIZUZaa01sWklWR3RrYVZKc1NsaGFWekUwVjBaYVdHVkhkR2xOVmxwNlYydFdWMVZzV2tkWGJHaFdZa2RvVkZadGVITk9iRTUwWkVkb2FHVnJTVEZXYkdNeFlURnNWMU5zYUZaaVJVcGhXVmQwU21ReFZuSlhiR1JyVW0xU2VWUXhXazlVYkZwWFlUTmtWMkV4Y0haYVJFcExZMnMxVjFkck5WaFNWbkJXVjFkNGIySXhVWGhqUm1oT1YwaENjMVZ0ZUV0TlZtdDNWMjFHVldKVmNFbGFWVkpEVm0xS1IxTnJlRmRTUlZwTFdsVmFZV05XV25OaFIyaE9WbGhDVmxZeFpEQldhekZZVkd4a2FWSkdjRmhaYkZaaFlqRnNjbGR1Wkd4aVJuQklWMnRvYTFWdFNsWk9WV1JhWVRGYWVsbFhjM2hrUmxaMFVteFdWMDB4U205V1J6RTBZVEpOZUZWdVNsUmlWM2h3VlRCV1NtVkdXbFZUV0doUFVtMTRXRll4YUd0aGJFcEhZMFpzV2xaRlJYaFpNVnByWTFaR1ZWWnRjRk5oTVc5M1YxUkNZV1F4WkVkVGJGWlhZbTVDVjFSV1dtRlZSbXhWVTJ4T1YwMXJOVWhaYTFwaFlWWlplbUZJYUZkU2JWRXdWV3BLVTFZeFVuTlhiRnBwWWtoQ2IxWkdXbXROUlRWWFZtNVNUMWRIVW1GV2JYaFhUVEZXZEU1V1pGaGlWbHA1V1Zod1IxZHRWbkpYYm5CWFRWWndVRnBHV2tka1IwNUlaVVprVGxKR1dYaFdiWFJUVXpKTmVGSlliRk5pYXpWd1ZXMHhORlpzYkhOaFJ6bFVUVlphVmxVeWVFOVVNa3BKVVd0b1dGZElRa2haVkVwTFZtczFSVkpzYUZkU1dFSjVWbXhXYTFJeFduTlVibFpUWWtkb1dGbHNaRzlWVm1SWVpFWmthazFWY0VoWk1GWnpWbGRLV0dGR2FHRldNMmhZVkd0YWEyTXhXbkpQVjJocFVucHJlbFpFUm05Uk1WWnpWMWh3Vm1KSVFtaFdhazVUWlZaU1ZsZHRkRmhXTURWSFZUSXhNRlJzU2tkWGJHUlhWa1ZhZGxsNlJsSmxSazV5WVVkMFUxSnJjRmRXYlhSWFpERldSMkpJU2xoaWJWSllWbTB4TTAxc1ZuUmxSVTVXVFVSR1NWcEljRXRXTVVwelYyeFNWMDFxUmxoWk1uTXhWakpHUjFadGJGaFNNbWhTVm14a01GbFdTblJXYms1V1YwZFNWMWx0ZEhkVlJscHpXa1JTVTJKR1NsZFhhMlF3VmtkS1ZtTkZjRnBXVmtwSVZtdGFXbVZzUm5GWGJHaG9ZVEZ3TmxkcldtRlVNbEpJVm10a2FsSnRVazlVVlZKRFRteGFWVkpzWkdoTlZrWTFWVzEwYjFaV1pFaGxSbWhYWVd0d1ZGWkZXbE5YUjFaR1pFZHNUbFl6VVRGV1IzaHJUVWRHYzFOWVpHcFRSMUpaVm10V2QyTnNXbFphUldSWFlrVTFNVmRyV205aFZsbDZZVVJHV0Zac1NraFpha0V4WXpKT1JWZHNaR2hsYkZwMlYxWlNTMlZ0VVhoWFdHaGhVMGRTV0Zsc1drZE5NVkp6VlcxR1YySkhVa3BWVnpGSFZqSkZlRmR1Y0ZWV1JWcFVXWHBHZDFOR1NuUmhSbVJYVW14V05WWnNaRFJWTVZsNFlrWm9VMkpyY0U5Vk1HUTBWbXhTVmxkcmRHdGlSM2hXVlZab2IxWXhXWGRqUld4aFZsWlZNVlpxUmt0WFIxSkZWR3hhYkdFeGNGRldWbU40VW0xV1NGSnJWbGhpUmtwWVZXMTBkMkZHWkhOYVJFSlRUVVJDTkZaWE5VOVdiVVY2VVc1T1YySkdTbGhWYlhoelZsWlNkRTlXVm1obGExbzFWa2Q0YjFReFpFaFRhMlJVWW10YVZsWnRlRlpOVmxWM1YyczVXRll3TlVkVWJGcFBWVEpLV1ZremJGZGhNbEV3V1ZSR1VtVldUbkpYYXpsWFZteHdXRlp0ZEZaTlZsWlhWbTVLWVZOSVFrOVdiWE14VmpGYVYyRkhkRnBXVkVaSldsVm9kMWxXV2xoaFNIQldUV3BHU0ZwR1dsTmtSVFZYWVVkc1UwMVZWak5XTW5oclRrZFJlRmRyWkZOaVIyaHlWVzB4TkdNeGJGVlRibkJyVFZac05GbFZhR3RWYlVwWFVtcE9WV0pHY0ZoV2ExcHJVMGRXUjFGc1dtaE5iRVl6VmtkMFlWVXhXbGRVYmtwUVZqSjRWRmx0ZEV0V01WbDRZVWhrVTAxV1draFZNV2hyWVZaS1IyTkdXbGRpUm5CTVYxWmFkMWRIVGpaU2JHaFRZa1Z2ZDFkc1ZsWk9WbFY0VTI1S1YyRnNjRmhWYTFaTFZrWnJlV042UmxkaVZYQkhWbTF6TVZVd01YTlRhM2hZVmpOU2RsbHFRWGhXTVZKellVZHdWRk5GU205V1JscHJUa1V4VjFaWWJFNVdSa3BaV1d0YWMwNXNXa2RWYXpsWFVteHdXVlpYZUZOWGJVVjRZMFJPWVZKV2NFeFpNVnBMWkVkS1IxVnNUbWhOV0VGNFZtMTBVMU15VFhoU2JsSlRWMGRvYjFWclduZFdWbHB5VjJ0MFdsWnVRbGxhUlZaclZHc3hWMU51Y0ZkV00xSXpXV3RhWVZaV1duSlhiSEJYVWxSV01sWnJaSHBsUjA1eVRsWnNWV0pIYUhCVmJYUjNaVVphUjFkc1drOVdhelZJVmtkNGMyRnNTbFZXYkZKV1lsUkZlbFJYZUdGVFIxWklaRVpXVG1FelFraFdSM2hYVmpGYWMxZHJXazlXYTFwWFdWUktVMDVzVWxkWGF6bFhZa1phV2xkclpFZFViRWw2WVVSYVdHSkdXblpaZWtaclZqRk9jVmRzV21saE1IQlhWa1pTUzA1R1NrZFZXR2hYWW1zMVZWWnRjekZOUm5CV1drUkNWMUpyY0hwWmJuQkhWMFphTmxKdWNGWldla1pIV2xWa1IxSldaSE5WYkdSVFlUTkNiMVl5ZUd0TlJrbDNUVWhvVm1Kck5WZFpWRTVEWXpGYWMxVnNaRk5pUjNoV1ZrY3dOVlpYUmpaU2JteFZZa2RvVUZZd1pFdFNNVTUxVW14V1YySkdWWGhXVkVKaFZERmtXRlJyV2s5V2F6VlVXV3hvYW1WV1duSmFSRkpvVFZaR05WVXlkR0ZVTVZwWFYyeGtWMkV4VlhoV1ZscFhZMnh3U1dORk5WZGlSVmt5VjFkMFYxUXhWa2RYYkdoc1VsZDRXRlJYTlVOVFJteFhXa1YwVjJGNlZrcFhhMXAzVmpKS1ZrMUlhRmhoTVhCWVdYcEdTbVF3T1ZkaVIwWlRUVzVvVUZaR1ZsTlZNREI0VjFoa1ZtRXpVbGRVVjNSaFUxWmFXR1JIT1ZaTlZtOHlXV3RXTkZadFNsbFJibkJhVFVad2NsWXdaRTlTTWs1SVpVWk9hV0V3Y0ZoV2JGcGhZakpKZUZWWWFGaGhNbWhXVmpCb1ExZFdXbkpXYm1SYVZteEtXRlpzVWtkVU1rcEhZMFJDV21FeFZURldWRUY0VmpGa1dXTkdaRk5pUm5CNVZqRmFhMUl5VG5KTlZteFdZa1phV1ZWcVJrdFZWbHAwWkVkMGJHSldXbnBXVjNocldWWktkVkZ1VGxwWFNFSjZWV3hhZDFKV1RuUmtSbEpPVmxoQ05GZFdWbE5VTVZwV1RWVmtWR0V6YUdGWmExcFhUa1phYzFkclpGZFdhM0I2V1RCa2IyRldaRWRTV0doWFlXdHNNMXBWV2xKbFZrNXpXa2R3VkZKV2NHaFhiR1F3WkRGV1YxWnVTbGRYUjFKeldXdGtVMWRHWkhKV2JVWlZZa1p3VmxadE5XOVdiRnAwWVVST1dGWnRVa3hXYlRGUFUxWkdjMkZIYUU1V1dFSjJWakZhVjFadFZrZFRhMmhXVjBkNGFGVnNhRk5XUm14WVRWYzFUbUpHYkRSWlZXaHJZVWRLVjFkc2FGcGhNWEIyVmpCYWExTkhWa2hTYkdSb1lUQlplbFpHV21GVmJWRjRWbTVPV0dKWWFHOWFWM1JLVFZaYWNWTllaR3hTYkVZMVZXMDFUMVV4WkVobFJteGFWa1ZhVEZWNlJuZFdNVnBWVW1zNWFWSjZhekpYVjNSaFpERlplRk51VW10U1JUVllWV3BPVTJOc1ZYbGpNMmhxWVhwV1YxWlhNVEJVYlVwWFUyc3hWMVo2UmpOWmFrRXhZekZ3U1ZWdGNGTmhlbFoyVjFab2QxWXhaRmRXV0doV1lrZFNWbFJXV25OT1JscDBZMFprVjFadFVrcFZWekZ2VjJ4YVJsZHFUbGROUm5CeVdrVmtUMUpyTlZkVWJFNU9Va1pHTkZadGRHRmlNbEY0VWxoc1ZHRXhjRkJXTUZaaFZsWnNjMkZGVGxWTlYzaDZWakowYTFReVNraFZiR2hYVmpOTk1WbFZXbUZXVmxweVYyeFdWMVpyY0ZWV2EyUTBVbTFXV0ZWcmFFOVdNRnBaVldwT2IxSkdaRmRWYTJScFlsWmFXRlpYZUhOaGJFcHlVMnhvVm1KVVJYcFVWVnBhWlZVeFNXRkdhR2hsYTFvMlYxZDBZVll4V2xoVGJHeFNZa1ZLVjFsVVNsTk9iRkpXVjIxMGFtSkdXbmxXTWpFMFlWWkplbGt6YkZoV2JGcHlXV3BHYTJNeFpGbGhSazVvWWtoQ1YxWnRkRmRrTVZGNFkwWmFWMVpGV2xWVmJURlRWMnhyZDFaVVJtaFNNSEJZVlRJMWQxWnJNVmRYYkU1aFVrVmFNbHBFU2twbGJVWkhVMjFzVTFaWVFsbFdhMXBoV1ZaTmVGTnVUbGRpUjFKWldXdFZNVlV4YkhKV2EzUlhWbTFTVmxaSGVHdFdSVEZXVGxWb1ZrMXFWbWhXTW5oaFpFZEdSazlYUmxOV2JrSkZWMWh3UWs1V1pFaFdhMmhwVWpKNFdGWnJXbFpsUmxsNVpVZEdhVTFWVmpOVVZsWmhZVEZLVjFOc1pGcGlSbkF6VmtSR1UxZEhUWHBhUjNocFVtdHdXbFpHV2xkaE1rWlhWMnhXVTJGclNsZFpiRkpIVFRGYVZsZHRSbFJTYlhRMldWVmFWMWRHVGtaVGJFWllWak5vYUZwRVNrOVdNWEJIVm14S2FHVnRlSGRXYlRFd1Yyc3hWMWRyWkdGVFIxSnZXVmh3VjFJeFVsZGhSazVXVFZad1Ixa3dXa05XYlVWNFkwVjRXazFHY0ZSYVJXUlBVakZPZEdORk5WTk5NbWhIVm1wS01GWXlUWGhYYkZwT1ZsWmFWRmxVU2xOV01YQllaRVYwV0ZKc2JEVmFSV2hyVkRGWmQxZFVTbGhoTVZvelZsZHplRlp0VGtsVmJHUk9WakpuZWxaclpIcE5WbHB5VGxac1UySkZOWEJXYTFaaFlqRmtWMXBFVW10TmEydzBWbGQ0VjFaSFJqWldhemxXWWtaS2VsWnRlSE5XYkhCRlVXeFdhVkp1UWtoV1IzaHZVakZhVmsxVmFGWmhNbWhoVm14YWQwMHhWbk5YYkU1WVZqQTFTRmt3WkRSaFJURlhWMWh3VjJGcmJEUmFSRVpUWkVaYWMxZHJPVlJTTTJoWlZtMXdTMVV4VW5OaVJtaHFVbFUxY0ZsclZURk5WbXh5V2tWa1YxWXdjRWRXYlhCVFZtc3hkV0ZFVGxkaVdHaE1XWHBHUzFaV1duTlZiV3hwVjBVMGVsWXhXbE5UTVZWNFZHdG9VMkV5ZUZOWmJHaERZekZhY2xaclpHeFdiSEF3V2xWa1IxWlZNVlpqU0hCWVlXczFjbFpIZUdGV01VNXpXa1p3YUUxc1JYZFdiR1EwV1ZkT2MxWnVWbXBTTUZwUFZUQldTMU5XV2tWUmJUbHFUVlpLTUZWdE5WTldWMFp6VjJ4c1YyRnJOVVJWZWtaM1ZteGFXV0ZIZEZOaVNFRjNWMWQwVms1V1ZYZE5WbVJYVjBkb1dGVnRNVzlOTVdSWFdrVmtWMDFyY0VoWlZWcFRWakZLYzJOSGFGZGlXRUpJVm0xemVGSXhWblZVYlVaVFZrZDRkMVpYTUhoTk1ERnpWbTVPVm1KSFVsbFpiRlpoWlZacmQxbDZWbGRXYkhCWFZHeFdUMVpWTVZkWGJuQldZVEZ3ZVZwV1ZURldNVVowWlVaa1YxWnVRVEZXYlhCRFZURk5lRlpZYkZSaE1sSndWVzE0WVZac1duSldWRVphVm14d2VWZHJXazloYlVwSFUyNXNWMVo2VmxCWlZWcGhWbGRLUjFkc2NGZFdNVVYzVmpGYVlWZHRVWGRPVm14U1lrWmFjRmx0ZEV0U1ZtUlhWV3RLVGxadFVraFdSelZUWVVaS2RWRnRPVnBXUlZveldsVmFXbVZWTVZsYVJsSk9ZVE5DV1ZkWGRHRmlNV1JJVTJ4c2FGSllVbGRaVkVaTFVrWnNkR1ZGT1ZoU01WcEhWa2Q0WVZVeVNrZFhWRUpYWWtad2NsbFVSazVsUms1MVVtMW9VMUpVVmxkV1JsWmhVekZTUjJKSVRsZFhSMmhZVm0xMFlWWnNWblJsU0dSb1VqQndXbFpXVWtkV01ERnhVV3BTVjFKRmNFeFdha3BQVTFaS2MyTkhlR2hOTUVwVFZteGtNRlp0VVhsV2JrNWhVbTFTYUZWc1duZFVNVnB6Vld4a2JGSnNXbGhaVldoclYyeFpkMk5HWkZwTlIyaEVWakJrUm1WR1RuUmhSbkJYVm14Wk1GWlhkR0ZTTWs1MFUydGtZVkpyTlhCVmJHaERWa1phY2xadE9XdE5WWEF3VmxkNFlWUnNXblJWYms1V1RVZFJNRll5ZUZka1YwNUhWRzF3VTJKRldUSlhWM1JYVXpKR1JrMVdhR0ZTUmxwWVZtNXdSazFHV1hsbFIwWlRZWHBHU2xrd1dtOVdNa3BHWTBoc1dGWnNTa05VVmxwTFYwWk9jbUZIYkZOaE1IQlpWbGR3UzJJeVZuTlhXR3hzVWpOU1ZsUlhkR0ZXTVZKelZXMUdWbUpWY0ZwV1YzaERWakpHY2xOcVRscGhhMXB5VmpCa1QxSnNjRWhoUjJ4VVVsVnZNRlpzVWtwa01sWkhXa2hPV0ZkSGFIRlZNRlV4VmxaYWMxWllaR3ROVmtZMFZtMDFUMVV4U25KT1dHeGFZVEpTZWxaSGMzaFNWbFp4Vkd4a1UxSllRalpXVm1ONFVtMVdSMkl6Y0dsU2JFcHdWbXBPYjFWV1pGZGFSRUphVmpBeE5GWlhlR0ZXYlVWNFkwVTVWMkpHU2xkVVYzaHJZMnh3U1ZwR2NGZE5SbkEyVm0xNGIyUXhXbGhUYTJoV1lUTlNWbFpzV25kTk1WcHpWMnRrV0ZadVFrbFZiVEZ6VmpGYVJsWllhRmRoYTFwMldrUkdSMk5yTVZkWGJFSlhZa1p3YUZaR1VrdGlNa1pIWWtab2FrMHlVazlWYlRGVFVqRnNWbFpxUWxoaGVrWjVXVEJvYTFack1WZFRia3BXVFc1b1IxcFZXazlrUlRGWFlVZG9UbUpGY0ZwV01WcFhWbTFXUms1WVRtcFNWMmh2Vld4U2MxUXhiSEpXYkdST1RWWndSbFZ0TVRCV1IwWTJWbXhrVlUxV1duWldha3BMVjFkR1NGSnNWbGROTVVvMVYyeGtORlV4V25OalJXUlVZWHBXV0Zsc2FHNWtNVnBZVFVob2FrMVdTbnBXTVdoclZERmtSMU5zV2xkaWJrSklXVlZhYzFac1pIVmFSM1JUWWtoQ1dsWXlkRlpsUjBaSVVtNUtWR0pzV2xkVVZtUlNaREZhUlZOc1RtdFNhelV4Vm0xNFlXRldaRWhoU0dSWVZucEZNRlZxUVhoU01rNUdWMjFvVkZKVVZubFdSbHB2VVRGYWMySklSbFJpV0ZKWldXdGtVMUl4VlhsalJUbFlZbFZXTlZaWE5YZFhiRmw2WVVod1YwMVdjRmhhUmxwSFpFZEtSazVYYUdsU1YzY3hWbXBLTkZZeFVuUldhMXBPVTBkNFYxWXdhRU5aVmxKVlVtdDBhRkp0ZUhwV1Z6VlBWREZhZEdWSWNGZFNiV2gyVmtkNFdtUXdOVlZSYlVaWFZqRkZkMWRXV210VE1WcHlUbFpXVkdKSGFHOVVWM2hMVjFaa1YxVnJaR2xOVlRWWVZrYzFVMVpYU2xobFJ6bFhZa2RTTmxwWGVGWmxSbHB5VDFaYVRsZEZTalpYVkVKWFlqRlplVk5zYUdoU1ZHeG9WbTV3UjFaR2JIRlNiRTVxVm1zMWVsVXljekZWTVZwSVpVWndWMVpGV2xSV2FrWlhVakZPV1dGR2FHbGhlbFphVm0xMFYyUXhUWGhWYkZaU1YwZG9WVlZ0ZUdGV2JGWjBaVWhrYUZac2NGaFpNR2hyVmpGS2MyTklTbGRTUlhCTVZtMXplRmRXVm5OaFIyeFhUVzFvZGxZeFpEUlpWbGw1VTI1T1ZtRXlhSEJVVkVwVFlVWlNWbHBFVW14V2JIQkpWR3hrUjJGR1dYZGpTSEJXVFdwV1VGWXlNVXRXVmxwelZHMUdVMVl4U2sxV1ZFSmhXVmRTVjFkdVVsTmhlbFpQVm14b1FtVldXbkpWYTNScVRWVmFNRlZ0ZUdGaVJrNUhWMnhhV2xZelVreFpNVnB6WXpKR1NFOVhjRTVXTTJkM1YxZDBhazFYUmtaTlZtaGhVa1phV0ZWdE1XOU5NVnBXVjIxR1UwMXJjRVpXVjNodllWWmFSbGR0YUZkU2JWRXdXWHBHWVZZeFZuVlZiWEJUVmtkNFZWWlhjRTlVYlZGNFYxaHNhMUpyTlZSWmJGcGhaV3hzY2xWdFJtaFNhMncxV1ZWa1IxWXlSbkpYYTJoVllsaG9WRlpzV2s5amF6VllaVVpPVjFKc2NFdFdiWEJIWWpKUmVGVnVVbE5pYkVwWFdXMXpNVlpXVWxkV1dHUnJUVmQ0V0ZZeU1EVldSbHB5VGxSQ1YxSjZSbnBaVlZwaFYwZE5lbU5HV2s1V2JIQlJWbXhTUjJReVRYbFVhMXBvVW0xU2NGWnFTbTlWUm1SeldUTm9WazFyYkRSV1Z6VkhWa2RLUm1ORk9WWmlSa3A2VmpGYVZtVkdWbk5hUmxwVFlUSjNNRlpxU1RGVU1XUkhWMnRhYWxKWVVsWldhMVpIVGtaVmQxZHNaRmRXYTNCNldUQmtjMVl4V25WUmFrNVhZVEZ3YUZsVVJsSmxWazV6VjJzMVdGSnJjRnBYVjNocllqSkdSMkpJVGxoaVIxSndXV3RhUzFOV2JIRlViWFJhVmxSR1NWcFZhSE5XTVVvMlZtMW9XbFp0VWt4V2JGcGhaRlpTYzJGR1pGTldSbHBXVmpGU1EyRXhUblJXYkZwUFZsWmFXVmxVVGtOV1JsSldWV3hrVDJKSFVsbFpNRlUxVmxVeGNtTkZhRnBXVmxwNlZtdGtTMVpyTlZsUmJIQlhZa1p3TlZaR1VrZFVNVnB6Vlc1T1ZXSlZXbkJWTUZaTFUyeGFkRTFJYUdsTlZrb3dWbTAxVTFadFNsVmlSbHBhVmpOU00xWlVSbE5XYkZwVlZteG9VMkY2VmxkV2JURTBVVEZWZDAxV1pHcFRTRUpZVkZaYVMxUkdWWGxqTTJSclRVUkdWMWxWV21GV01VcFhZMGRvV0ZZemFGaFhWbVJQVWpGV2MxcEhSbE5XUjNoM1ZtMTRVMUl3TVVkWFdHeE9WbnBzWVZacVFuZFhSbHAwVFVSR1YxWnJiRFZVTVZKUFYwZEdjbE51Y0ZwbGEzQllWVEZrUzFJeVNrZFViWGhwVWxoQmVsWnRkRk5VTWsxNFVtNVNVMWRIYUdoVVZFbzBWakZzYzJGSE9WcFdiSEI1Vm14b2EySkhTa2hWYkdoWFZucEZkMWxWVlhoU1ZscHlWMnh3YUUxc1NqWldiRlpoV1ZaT1NGSnJiRlZpUjJod1ZXcEdTMVZXWkZkWGJGcE9WbFJXZWxWdE5WTmhNVXBWWWtab1ZWWlhhRVJhUjNoYVpVWndTVnBHVGs1aE1YQTJWMVJDYjFJeFdraFRiRlpUWWxWYVdGbFhkR0ZOTVd3MlVtczVWMkpHU2xaVlYzaERWakZaZW1GRldsZGlSMDQwVjFaYWEyUkdXblZUYXpWVFVsWndWMWRYZUc5Uk1VNUhZa2hPV0dKdFVuRldiVEZUVFVac1ZsWlVSbFZpVlZreVZWZHdUMVl4U2taWGJGSmFZV3R3UjFwRVFYaFdNVnB6Vm0xc1dGSlZjRk5XYkdSM1VURnNXRk5ZYUdGVFJYQlhXVmh3VjJNeGJISmFSRTVPWWtaYWVsWlhkRTlYYkZsM1YyNXNWVlpzU2xoV2JHUkhZMjFPUjFwR1ZtaGhNSEEyVmxkMFlWWXlVa2RhU0VwUVZtMVNWRlJXVm5kT1ZscHhVMnBDVmsxck5YbFVWbWhMVlVaYVYxZHNiRnBpUjFFd1ZrUkdkMWRIVmtaWGF6VlhZbFpLTmxac1kzaGtNVkY0VjJ4V1YySnRhRmxXTUdoRFZFWmFTR1ZIUmxOaVIxSXhWVzE0VjJGV1NuSmpSV2hZWWtad1YxUlZaRmRXTVhCSFlrZHdVMVpHV25wWFYzUnJaVzFSZUZkWWFGcE5NbWhaV1d0ak5VNUdWbGhsUms1V1lsVldNMVl5TVc5WGJVcFpWRmhvVlZZemFISldiRnBQWTFaR2RHUkhiRmRXUmxwTFZtMHdkMDFXV1hoVmEyUlRWMGRvVlZsc1VrZFhWbHAxWTBWa1ZFMVdTbGxaZWs1dlYwWktjMk5HY0ZoaE1WVjRWbXBHUzJNeFduRlhiR1JUVFRCS1RWWnJVa3RUTVZweVRsWmtWMkpJUW5OWlZFWjNZVVprVjFwRVVsUk5hekUwVmxkNFlWWnRSWGRPV0VKWFlsUkZlbFJYZUZabFZURlpXa1pXYVZKWVFrbFdiWGhUVWpGYVdGTnVWbEpoTW1oaFdXdGFWMDVHVW5SbFNGcHNZa1pLZVZrd1drdFViRnBaVVdwQ1YyRXhjRlJWZWtaclkyc3hWbHBIYkZOU2JrSlpWMWQ0YTA1R1ZsZFhia3BZWWxWYWNWUldXa3RYVm10M1ZsUkdWV0pWY0VwVlYzUnpWakpLVlZGcVVsZE5ha1pZV1RKNFMxZFhUa2RXYkdST1RVVndVVll5ZEZOU01sRjRWMnhrWVZKdGVIQlZiVFZEWXpGc1ZWUnJUbXhXYkhCSVZsZDBNRlV5U2xkWGJuQmFZVEpvU0ZadGVHdFNiRTV6VW0xR1YySkdjRTFYYTFKSFlUSlNTRk5yYUU5V01taFVWakJXUzFOV1drVlJiRTVUVFZaR00xUldhRTlXUjBweVkwWmFWVlpzY0V4WFZscFRZMnhhVlZKdGRGTmhlbFpoVjFSQ1ZrNVdWWGhUV0hCb1UwaENXRlZ1Y0ZkTk1XdDVZek5vYW1GNlZsWldNbmh2VjBaSmVXRkdRbGRpV0VKRFdrUktWMUl4Vm5OYVJscG9UVEJLVUZaR1dtOVJNbFpIVjJ0a2FGTkhVbFpVVjNSaFRVWnNWbUZGVGxoU01IQlpXbFZvYzFkSFJuSmpSbWhWWWtad1NGcEdaRXRUUmtwellVWk9hRTF1WTNkV2FrWlRVMjFSZDAxVlpHbE5NbWh3VlcweE5GWldiSFJOVkZKYVZteHNNMWRyVWtOaE1rcEdUbGhvVm1KWVVYZFdWRXBMVWpGYWNWVnNaR2xYUlRRd1ZtMXdSMUp0VmxkVmJGWlhZa1p3VkZSWE5XOWxWbHAwWkVkR1ZtSldSalJXVnpWTFlrWktjazVXYUZwaE1Wb3pXa1ZhWVZkRk1WVlJiRTVPVmxSV05sWnNaREJaVmxsNVVsaG9XR0V6YUdoV2JURlRUbXhTVlZKck9WZGlSemsyVjJ0a1IxUnNXbGRqUlhCWFlXdHJlRmxVU2tabFJuQkdXa1pTYUdKSVFsWldSbFpXVFZaYVIxcElVbXBsYTFwWVZtMDFRMU5XY0VaYVJXUldUVlZzTmxaSGNGZFdNVXBHVTJ4U1dGWnRVa2hXYlhONFZsWmtjMWRzWkZOaVNFSjJWbTB4TUdFeFVuSk5WbVJXWW14S2NWVnFUa05VTVd4WlkwVmtWMkpHV2pCVVZtaHJWbFV4VjJORlpGZGlXRUpZVm14a1IyTnRUa2hTYlVaWFRUQTBNRlpITVRSaE1WcFhWbTVPYWxJeWVGaFpiR2h1VFd4YVZWSnNaRlZOVmxZMFdUQm9UMkZzU2xoaFJtaGFZa2RTZGxaRVJuZFhSVEZYVkcxc1RsWnJjRFJXVkVvMFV6RlNjMU5zVm1sU2JYaFhWRlphUzFkR1dsWlhhM0JzVW0xU01WWkhlRzlXTVVwWlVXdDRWMUpzU2tOYVZWcFBVakZhYzFac1RtbFRSVXAzVm0xNFlXUXlVWGhYYTJSWVlsaFNWbFJYZEhkV01WSlhZVVpPV0ZJd2NGbFpWV1J2VjIxS1IyTkdhR0ZTUlZwVFdsY3hTMUpzVW5KT1ZUVm9UVmhDUzFZeFpEQmlNVkY0WWtaa1YxZEhVbFJaYlhoM1ZsWmFkR1ZIUmxOU2JYaDZWakkxYTFkR1NsVmlSbXhWVm14Wk1GWlhjM2hXYlU1SlZXeGtVMDB5YUZWWFZsSkxVbTFXU0ZScldsZGlWMmh6V1ZST1ExVnNXbGhrUjBaclRXczFTRlpYZUhOaGJFcHlZMFpDVjJKVVZrUldiWGhyVjFkT1IxcEdWazVoTVc5M1ZtdGFiMk14V2xkWGJrNVVZVEpvWVZacVRrNWxSbHB6VjJ0MFdGWXdjRWRVTVZVeFlWWkplbGt6YkZkaE1YQjJXa1JHYTJOck5WWmFSMnhVVW10d1dsWnFRbGRUTVZKWFYyeFdVbUV6UWs5VVZsVXhWakZhU0dWRk9WcFdNRmt5VlcwMWIxWnJNVmRUYkVKWFVucEdURlp0TVV0U1ZscHpWbXhrYVZKWVFrNVdNV1F3V1ZkTmVWUnNaRmRpYkVwelZXMTBTMWRHVm5OVmEwNVBWbXhzTkZkVVRtOVZNREZ5VjJ4a1ZVMVdjSFpXVkVwTFYxZEdSMUpzV21oTldFSnZWMVJHWVdFeVRYaGpSVnBQVmpOb1ZGWnJaRFJYYkZwVlVtMDVhazFYVW5wV01uUmhWVEpLVlZac1dsWmhhMnN4VkZSR2EyTldTbkphUmxKVFlsWkpkMVpIZUd0U01XUkhVMjVLYVdWcmNGZGFWM1JMVlVaYVZWSnVaR3BoZWxaWVZtMHhSMVV3TUhoVGJUbFhWak5TY2xwWE1WZFdNVlpaV2taYWFWWldjSFpXYlhoVFVtc3hjMWRzWkZaaVIxSmhWbTE0ZDFOV1drZFZhMlJYVmpCd1dsVlhOVWRXVmxsNlZHcFNWMkpHY0V4YVJXUlBVbXM1VjFwR1RsZGlSM1EwVm0xMGEyUXhUWGhhU0ZKWFltdHdUMVpyV25kWFZscHlWMnQwV2xadGVIcFdNalZQWWtkS1JrNVdaRmRXTTFKb1dWUkJlRkpXU25WaFJtUlhZbGRvUlZac1ZtdFdNVnB6Vkd4V1YySkdTbGhXYWtaTFlqRmtWMWt6YUZSTlZUVkhWREZhYzJGc1NYZFhiR1JWVm5wR1ZGcFdXbHBrTWtaSldrWmthR1ZyU1RCWFZFSlhZakZhYzFkclpGaGlSVXBoVm01d1IyTldjRmRYYlhSWVVqQTFSMVJzVlRGVk1WcElaVVp3VjJKWWFGUldSRVpYVWpGa2NscEhhRTVOTUVwWFYxZDRiMUV4U1hoalJscFlZbXMxVUZsclduZFhiR3hXVmxSR2FGSXdjRmhWTW5CRFZqRktkR0ZFVGxkU00wNDBXVEp6TlZadFJrZFZiV3hYVWxad1QxWnRNVEJpTVZGNVUyNU9WV0pyY0ZsV2ExcExZekZzV1dORlpGZGlSbkJZV1ZWak5WWnNTbk5pUkU1VlZteEthRll3WkV0WFZrWjFWbXhXVjAweWFEWldSekUwVlRGYVYxWnVTazlXYXpWVVZtdFdWbVZXV25KWmVrWnJUVmRTZVZSc1ZtdGhiRXAwWVVaYVdtSkhhRVJXVmxwWFkyeGFjMWR0ZUdsU2EzQlpWakowVjAxSFJrZFRiRlpwVW0xNFdGWnRNVzlsYkZwRlVtdGFhMDFWY0ZaV2JYaFRWakZaZVdGR1JsZFNiRnB5VmtSS1UxWXhTblZXYkdocFYwVktlbFp0Y0V0Vk1sWlhWMWhrYUZOSFVsVlpiRnBoVmpGU2MxVnRSbGRTTUhCWldsVlZOVmRzV1hwVmJHaFZZa1p3Y2xsNlJuZFNiVTVHVGxaT2FXRXdjRmhXTVZwVFZESlJlRlZZYkZSaVJuQnhWVzV3YzFkV1duRlVhMDVzWWtkNFYxWXlOV3RXTVZwMVVWUktWbUpZYUROV1J6RkxVakpPU1dGR1pGTmlTRUpWVjFod1MxSXhXbkpOVm14V1lrVTFXVlZxUmt0VU1WcFhWV3RPVTAxck5YcFpNRlpoV1ZaS05tSklSbFpoYTBWM1ZGWmFVMVpzVW5GUmJGcHBWbFpaTUZacVNqQmpNVnB5VFZaa1YxZEhVbWhXYlhoYVpERmFjbHBHVGxSV01EVkpXa1ZhVTFVeFpFWlRWRXBYWVd0dk1GbFhjM2hUUms1WldrZHdVMVl6YUZoWFYzaFRZekpKZUZkWVpGZFhSMmhQVlcxNFlWTldjRVpXYWtKV1RXdHdSMWxyVWs5WGJVVjRWbFJHVjFKNlJraFdNR1JQVG14U2MxVnNaRmRXUmxwV1ZtcEplRTVIVFhoWGJHUlVZbXhLY2xWc1VuTmpSbHB6Vld0YVRsSnNjRWxhUlZwUFlXMUtWMUpxVWxwTlJscFlWbTB4UzFkSFJrZFJiVVpYVFRKb1dGZHNaRFJoTVZsNFZtNU9XR0pZVWs5VmEyUTBWMnhhY2xremFFNVNiVko2VmpGb2ExUnNXa2RYYkd4YVlURndURmt5ZUhOamJGcFZVVzE0VjJKRmNHRldNblJXVGxaVmVGTnNXbGhpYkZwWVZteGFkMVZHVmxWVGJHUnJVbXhhZVZscldsTmhWMHBYVTI1a1YxSnNTa05hVldSVFl6RlNkVk5zYUZkU2EzQjZWbTE0VTFJeVZrZGFSbFpWWW1zMVdWbHNWbUZsVm14eVZXeE9WMVpzYnpKVmJYaHZWMnhhYzFaWWFGWk5SbkJvVm14YVlXTnJOVmhsUjJ4VVVsVnZlbFp0Y0VkWlYwVjRWRzVLVDFadFVuQlZiVEZ2VjBaYWNsZHJkRlpTYkhCNFZWWlNSMkZyTVZoVmJIQmFUVVphYUZaRVJtRmtSMVpKWVVaYVRtRnJXakpXYTJRMFVtMVdjMk5GYUU5V2JFcHZWRmN4YjFaV1pGaGpSWFJUVFZkU1dGWlhlSE5XYlVwR1YyMDVWVlpzY0ROV1ZscGhWMGRTUjFSc1VtbFdWRlpJVjJ4V1lWVXhXblJUYkdScVVsUnNhRlpxVGxOV01YQkZVbXhPVjAxV1dqRldSekZ2WVVkV2NsTlVSbGRoYTFwVVZsUkdVbVZXVG5OWGF6VlhVbTVDVjFaR1ZtRlRNVVY0WTBab2FrMHlhRkJaYTJRelRXeFZlV1ZGVGxaTlJFWllXVEJvYjFZd01WaGhSRTVhWWxSR1dGVnRjekZXVm1SelZHMXNWMDB5YUc5V2JURXdZVEExU0ZSdVRsWmlSMmh4VlcxMGQxVkdVbFphUkZKVVlrWldOVlJXVWxOaFJURldUbFZvVjAxdVFsaFdNakZMVjBkV1JsUnNjRmRTV0VKVlZsUkNhMUl4VGxkU2JsSnFVak5vV0ZWc1ZtRk9WbHB4VVd4T1ZFMVdWalZWTW5ScllVVXdlbEZzVmxwV00yaG9XVEZhVm1ReFpISmFSM1JwVWpOamVWWnJaRFJoTWtaSFYxaGtUbFpHY0ZoV2JuQlhaV3hhUmxkcldteFNhelV3VkZaYVYxWXdNSGRUYTNoWFVteEtRMXBWWkZOU01WSnpZa2RzVTFaR1dsbFdWM2h2VVRKV2MxZFlhR0ZUUjFKWFZGZDBkMUl4VVhoWGJHUlhWbXh3UjFrd1pFZFhiVXBIVjIxb1drMUdjRk5hVlZwM1VteHdTR0pHVGxkU00yaElWbTB3ZDJWSFVYaGlSbVJZVjBkU1QxWnJXa3RXYkZKWFdrWk9WRTFZUWxoV01qVlBWakZhY2xkc2NGZFNNMUl6VmxkemVGWnRUa2xWYkdSVFlsZG5lbFpYTVhwbFJrcHlUVlprVjJKWGVGUlVWRUpMVlVaYVIxcEVVbXBoZWtaSVZsYzFVMVJzV2xWV2JrNWFWMGhDZWxWdGVGZFdNa1pKV2taV2FWWnNiM2RXYTFwdll6RmFWazFWYUZaaVIyaGhWbXBPYjJWc1VuUmxTRnBzWWxWYVIxUXhaRFJoUlRGWlVXcE9WMkZyV21oV1ZFcE9aVlpLV1ZwRk5WaFNWbkJZVm1wQ1ZrMVdUWGhXYkZaVFlUTlNjRlp0TVZOWFJscFlaRWQwYUZKVVJrWldiWEJEVmpGS2RHRklXbGRTUlZwTVZUQmtVMUpXVW5OaFIyaE9WbGhDVmxZeFdsZFdhekZXVGxoT1dHSkdXbFpaYTJoRFYwWldkR1ZHY0d4aVJuQkdWVzB4TUZaVk1YSldhbEphWVRGd2RsWnNXbXRUUjFaSVlVWmthRTFzU2xWWFdIQkhWVEpPVjFSdVNrOVdNMUpQVld0YVlWSXhXbGRYYlRsU1RWWktXRlZzYUd0Vk1rcHpWMnhrVlZaV2NGZFVWbHBoVTBkV1JtUkdaR2xXYTNCSVZtcEtOR0l4V25KTldFcFBWa1UxV0ZWclZURmxiRlpWVVZSV1YySlZjRWRaVlZwdllVZEZlR05JWkZoV00yaFhWRlZrVW1WSFNrZGFSbkJzWWtad2VWWnRlR3RPUms1SFZWaG9ZVk5IVW05V2JGSkhaVVpXZEdORk9WaFNiSEF3V1ZWV05GZHRSWGhqU0ZaaFZteHdXRnBHV210a1IwcEhXa1UxVTJKclJqWldha1pxWlVVd2QwNVdhRlZoTW1oV1dWUkdTMkZHVWxoT1ZrNVlZa1pLV1ZsNlRtOVVhekZZVld4d1drMUdXWGRaVmxwaFZsWmFjMWRzV2s1aGExb3lWbXhXWVZOdFZraFNXSEJoVW14YVdGWnRkSGRTVm1SWVpVWmFiRkl4U2toV1YzaHpZVVpLY2xOc2FGVldiVkYzVkZSR1dtVlhVa2RVYkdSb1pXeGFXVmRYZEc5U01WcEhXa1ZvYkZKclNtRlphMXBoVFRGcmVGZHNUbGRpUmxvd1ZHeGtORll4WkVoaFJWcFhWbXh3Y2xSVldtdFdhekZaVTJ4b2FXRjZWbGRXYlhoclZURlZlRlZzYUdwbGExcHhWbTEwZDFac1ZsaE5WV1JXVFZWd01GbDZUbTlXTVVvMlVXcFNWMDFxUmxoV2FrcExVakpHUjFadGJGZFNWbkJTVmpGa05GbFhVWGxVYms1aFVteGFWVmxyVm5kVU1WSldWV3hhVG1KR1ZqUldWM00xVmxVeFYyTkZaRlZXVmtwRVZteGFXbVZzUm5KVmJIQnBVbTVDUlZacVFtRmhNbEpJVW10b2FWSnNTbFJXYTFwaFRteGFXV05GWkZWTlZWWXpWR3RvYTJGV1NsaGhTRUpXWW01Q1NGWkdXbGRXVmtaeldrZHdhVkl4U2tkV1ZFb3dZVEpHVjFOc1ZsTmhNbmhZVm0xNFMxUkdXa1ZUYTJScVlrWndXbGRyV205aFJURldZMGRvVjFJemFGZFVWbVJUVWpGd1IySkhiRk5pYTBwWlZrWldVMVl3TVVkWGEyaE9VMGRvWVZacVFsZE9SbXhWVkc1T1YySkdjRWRVYkZwRFdWWlplbFZ1YkdGV00yaFVXWHBHVjJOck5WWlBWazVYVWxadk1GWnNXbXBrTWxaSFZXdGtWMWRIVWxSWmJYUjNWMVpXY2xadVpGUlNiWGg1Vm14b2IxWkdTbk5YYkZwV1RXNU5NVmxWWkVabFJscHhWR3hrVG1Kc1NsVldha3A2VFZaYWNrNVdiRlppUjJoWlZXcE9iMkZHV25SalJVcE9WakZLU0ZaWE5WTlViRmwzVjIwNVZWWnRVWGRVYkZwaFZqRldjazlXVms1aVJuQTFWMVpTVDJReFdsaFRhMlJVWVhwc1ZsbFVSbGRPUm10NFYydGthMUpVUmxkWk1GcFBWVEZLVm1ORVJsZFdSVzkzV1dwR1ZtVldUbGxpUms1cFVqTm9WMVpxUW1GVE1WWnpZa2hLVm1Kck5YSldiVEZUWld4c1ZsZHJPVnBXTUhCWFZqSjRkMVpzV2paU2JXaFhUVzVvWVZwVldrOWtWazV6WTBVMWFHRXhjRnBXTW5ocVpVWlJkMDVXWkdsTk0wSlRXV3RXUzJNeFduTldiVVpzVm14c00xWlhkREJWTWtwWFVtcFNXbUV5YUVoV1YzaHJVMFpXYzFGdFJsZGxhMVYzVjFod1IxVnRVWGhXYmtwUVZqSm9XRlpyV21GVGJGcDBUVWhvVDFKdGVGbFZiVFZUVmxaa1NWRnNiRmRoYXpWRVZtcEdkMVpzV2xWU2JGSlRZa1Z3VjFaV1kzaFNNVlY0VTJ4c1VtSnRhRmhVVnpWVFkyeGFTR042UmxOaGVsWlhWbTE0YTJGV1drWlhhM2hYVmpOU1ZGVlVTa3RqTVhCSlVteFNhVkl4U2xCV1YzQkRXVlpPVjFWWWFHaFRSMUp2VkZaV2MwMHhiSFZqUldSWVlsVndWbFZ0ZEc5WlZrcFhZMFJPVjAxSFVsTmFWbFUxVm0xU1IxUnRhR2xYUjJjd1ZtMTBZVll5UlhoVmJsSlhZa2RTY1ZVd1ZtRlhSbGwzV2tSU1dsWnNjSGxYYTJNMVlURktjMU51YkZkV00xSk1XVlJCZUZkV1JuVmhSbHBPWVd0WmVsWnJaRFJaVms1SVZtdHNWbUpHV205VVYzaExWa1phUjFkc1drOVdiVkpJVmtkNGMyRldTbFZXYlRsYVlUSm9SRnBFUmxwbFIwWkpXa1pLYUdWc1draFdSbHB2VVRKR1NGWnVVbFpoTTFKWFdWZDBkazFHY0VaWGF6VnJUVmhDU2xaSE1UUmhWa2w1VlZSR1YxWjZRWGhaZWtwSFpFWk9jMWRzYUZkU1ZuQldWa1pXVmsxV1drZGFTRkpzVTBVMVdGWnRkR0ZOUm14eVZsUkdWazFWY0ZkV2JYQmhWakZLUmxkdVNsZGlXRTE0VlcxemVGTlhTa2RWYkdSVFZsaENkbFp0TVhkU01XeFlWV3RrVm1Kc1duRlZhazVUWWpGYWMxVnNaRmRpUmxwNlZsZDBUMWRIU2xkWGJuQldUV3BXVEZac1dtRk9iRXB6VVd4d1YxSldjRFpXUnpFMFpEQTFjMUp1U2xCV2JWSlBWbXBPYm1Wc1dsVlNiR1JWVFZkU01GVXllR0ZoVmtwWVlVWmFXbUpZYUROWk1uaGhaRmRPUjFkdGRFNVdWRVY2Vm10a05GUXhiRmhUYTJoc1VteHdWMVp1Y0VkbGJGcElaVVYwVTJKRmNGcFpNRnBYVkd4WmVGTnNhRmRTTTFKWFdrUktWMVl4VW5OV2JFcHBWbFp3V1ZaR1dtRmtNREZIVjJ0b1QxZEhVbTlVVjNSaFZqRlNjMWRzWkZaTlZuQkhWVEl4UjFsV1dYcGhSWGhhVFc1b1ZGWXdWWGhXYXpsWVlVVTFWMDB5VGpWV2Fra3haREZGZUZWWWFGaFhSMmh3VlRCa1UxWldXbk5YYTFwclRWZFNlRlZXYUc5Vk1VbDNWbXBXV0dFeVVUQlphMXBoVm0xT1JWRnNhRmROTUVwUlZsaHdTMU14U1hsVGEyUm9VbXhhY0ZaclpEUlViRnBYVld0a1ZFMXJjRmhYYTFwclZtMUZkMDVYT1ZkaVJrcElWVzE0VjFZeFZuSlBWbHBUWWtkM01GWnRlRk5STVZwWFYydGFhbEpZVWxaV2JGcDNUVEZaZDFkdFJtdFNWRVpYVkRGa05HRldXbkpqUkU1WFlUSlJNRlpVUmt0amF6RldXa2RzVTFKdVFsaFhWM2h2VlRGUmVHSklUbGRXUlZweFdXdGtVMWRzYTNkWmVrWlZZa1Z3VmxadGVITldNREZZVlc1S1YwMXVhSEpWYlhONFYwVTFWMVZ0YUU1V00wNDBWakZhWVZadFZrZFhiR2hUWVd4d1UxbHJhRU5qUmxwMFpVWmFhMDFXY0VsVWJHaHJZVmRLVjFKcVVscE5SMmhJVmxkNFlWSnRUa1pQVmxwb1RWaENiMWRVUW1GVk1rMTRZMFZrV0dKWVVrOVdhazVxWlZaWmVVNVlaRmROVmtZMVZtMDFVMWRyTUhwUmJGcGFZbFJXUkZwV1duZFNWa3AxV2taT1YwMUdjRXBYVjNSV1RWZEtSMWRZY0ZaaWJGcFpXV3RrYjJWc1ZsVlRhemxUVFdzMVNsVlhNVzlXUmtwV1kwaGtXRll6VWxSWmVrcEtaVWRGZW1KRk9WZFhSa3AyVmxkd1IxbFdXbGRhU0VaVVlXdEtXVlpzVWtkbFZteHlWV3hPVjFaVVJsaFZNbmhUVjJ4YWMyTkVUbGRpUm5BelZHMTRVMk14Um5OVWJFNVhWMFZHTTFadGRHRldNVlY0V2toU1ZsZEhVbEJXYlRGdlZsWmFjbFp0Um1oU2JIQjVWbTEwTUdGc1duTlNhazVYVm5wV1RGWkhjM2hTVjBwR1YyeG9XRk5GU2xGV2JGWmhXVlpLYzFSdVZsUmlSbHBQVldwR1MxUkdaSE5hUkVKUFVtdHdTRlZ0ZUc5aE1VcDBaVVU1V2xaRldqTmFWM2hoVWpGYWRHUkdXbWhsYTFvMVZrZDRiMUl4VlhoWGExcFVZbGRvVjFsVVJuZGxWbEpYVjJ4T2ExSlVSbGhaTUdRMFZqSktXV0ZHY0ZkaE1rNHpXbFZhVW1WV1RuTmFSM0JVVWxoQ1dsWnRkRmRrTVZWNFZXeFdVbFpGV2xCWmExVXhWbXhhU0dONlZsZE5WWEJXVlZab2ExWXhTblJWYWs1V1ZrVndURlp0TVZOU01WWjBZVVUxYVZacmNEUldNV1EwV1Zaa2RGVllhR3BTVjFKdlZXeG9VMk5zV25OYVJGSlVZa1p3V1ZSc2FFOWhSVEZYWWtSU1YySkdTbEJXYTFwaFYwWndSVlJzYUdoaE0wSnZWbTEwWVZJeVVsaFRhMmhUWWtkb1ZGbFVTak5OUmxsNFZXdHdhMDFFUmtoWmFrNXZZV3hPUjFOc1VscGlXRTE0V1RGYVUxZEhWa2RYYXpWT1ZsUldXRll5Y0U5aE1XeFdUVlpzVW1GcldsaFpiRkpYVjBaWmVXTXpaR3hTYXpVeFYydGFkMkZIUlhsa1JFNVhUVzVDU0ZsdE1WZFdNVloxVm14b2FWWXphRnBXVjNoWFpESlNjMXBHVmxSWFIyaFlWRlpvUTJWc2EzZFdiVGxXVW0xU1NGVXlNVWRXTWtaeVlucENWVlpzY0U5YVJFWlRZekZTZEZKdGJGTk5NazQxVm14YWFtVkhVWGhWYmxKVVlrZFNiMVJVU205V2JGcDFZMFZrVTAxV1NubFdNalZyWVd4YWMxZHNjRmhoTVZWNFZsUkJlRmRIVWpaU2JHUk9WakpuZWxaWE1YcE5WbGw1Vkd0c1UySkdjSEJXTUZwTFZWWmFkR1JIZEU5U01EVklWbGQ0YjJGc1NsbFJhemxhWVRKUk1GUlZXbUZTTWtaSVpFWmFVMkV6UWtoWFYzUnZaREZhUjFkc1drOVdiRXBaV1d4b1RtVkdWbk5YYlVaWVZqQTFSMVF4WkRSaFZrcFpVV3BLVjJFeGNIWmFSRVphWlZaS2NscEhiRlJTYTNCYVYxZDRiMUV4VVhoWGJrWlNZa1p3VDFWdE1WTk5SbEpYVm0xR2FFMUVSa1pWYlhCRFZqRktObEpVUWxkU00yaE1WV3BLVDFORk9WZGhSMnhZVWxWd1NsWXhXbGRXYXpGWFYyeGtWMkpHV2xOWldIQlhWMFpXY1ZGVVJrNU5WbFkwVm0wd05XSkhTa2hQVkU1YVRVWmFjbFpWV2xwbGJFWnlUMVphYUdFd1dUQldSM2hoWVRKU1NGUnJaRmhpV0doWVdXeG9iMVl4WkZkV2JYQnNVbXhHTkZVeWRHRlZNa1p5VGxac1dtSkhhRVJXUlZwelYwZE5lbUZHWkZkTlNFSktWa1phVms1V1ZYZE5WbHBYWVd4S1dGVnJWbUZqYkZWNVRWWmtWMkY2UmxwVmJYaHZZVlpaZW1GSGFGaGlSMUYzVlcxemVGSXhWbk5oUjJ4VFZsaENVbFp0ZUd0T1JrNXpWMnRvYWxKVk5XOVpiRlozVW14c2NsVnNaRmhTTUhCSldWVldVMWR0Vm5KWGJuQlhUVVp3VkZwRlpGZFNiVlpIVTJzMWFWSldhM2xXYWtvd1ZURlJlVkp1VWxaaVJuQnhWV3RhWVdOc1VsaGpSbVJWVW01Q1dGbFZaREJoYlVwSVZXdGFWazF1VFhoWlZFRjRWMGRTTmxOc1drNWhhMGt3Vm10U1IxbFdTblJVYTJoUVZteGFUMVZxUmt0aFJscEhWbXhhYkZKcmNGaFZiVFZUVkd4YVZWWnVRbGRpUmtwSFZGVmFZVkpXU25Sa1JtaG9aV3RhU1ZkVVFsZFdNVmw0VjJ0a1dHSlZXbUZXYWs1VFpXeFNjMWRzVG10U1ZFWlhXa1ZrYjJGSFZuSlhhMlJYVFc1Q1VGbDZSbE5TTVdSeVlrWldhVlpHV2xaWFZsSkhZMnN4VjJKR2FHcE5NbWhWVlcxNFMxZHNiSEphUldSb1VqQndTRll4VWtkV01ERlhZMFpTV21GcmNFeFdiWE14Vm14YWMxTnNhRk5OVlhCMlZqRmFhMDFIVVhsVWJHUldZa2RTVjFsdGN6RmpSbHB6Vld4a1ZGWnNjRmhXVjNSclZteEtjMkpFVGxwaE1VcFlWbXhhV21Wc1JuUmhSbkJYWWtoQ05sWkhNVFJTTVZwWFZtNUtUMVl5YUZoV2JGcFdaVVphVlZKc1pHbE5Wa1l6VkZaV2IxWlhTbkpPVmtaWFRVZFJNRmxWV2xwa01WcHlaRWQ0YVZJeFNsbFdNblJXVGxkR1YxTnNiRlpoTVZwWldWUktUazFXYkZWU2F6bFRUVlUxZUZaSGVIZFVhekIzVTFoc1dHRXlVWGRVYTFVeFZqSkZlbU5HVm1oTk1VcDZWbTF3UWsxVk5YTldXR3hyVW01Q1VGWnFRbUZsVmxKWFZtMDVWMVp0VWtsYVZXUnZWMnhaZW1GR2FGVmlSbkJ5Vm1wR1YyUkZPVmhpUm1SWFVteHdTRlpzV21GaU1rVjRZa1pvVTJKcmNIRlZNRlpoVm14YWRHVkZkR3hpUjNoNlZteFNSMVpHU25OWGJGcFdZbGhvUkZacVFYaFRSMUkyVW14a1UySldTWHBXTVZwclVqRlplVk5yVmxoaVJYQllWVzEwZDFWR1pGZFhiWFJzWVhwQ05GWkhlR0ZXVjBwR1RsZG9XbUV5VVhwVVYzaFhWMFV4V1ZwR1ZtbFdXRUpaVjFaU1QySXhXbGRYYWxwVFlUSlNWbGxVUm5kTk1XdDRWMnhrV0ZadVFrZFViRnBQVkd4WmVsa3phRmRoYTFwMldrUkdTMk5yTlZkYVIzQlVVbFp3V0ZkWGVHOVZNVlpIVjI1S1lWSkdTbkZWYlhoTFYxWnJkMVp1WkZWaVZYQkpXbFZTUTFZeFNuUmhTRXBYVmxad1RGVnRNVXRUUlRWWFYyeE9hR1ZzV2taV01uaHFaVVpWZUZSc1pGVmliRXBaV1d4b1EyTkdXblJsU0Zwc1lrZFNXVnBGWkRCVk1ERnlWMjV3V2sxR2NGUlhWbFY0WTFaYWRFOVdXazVTYmtKTVYydFNSMk50VVhoV2JsWllZbGhTYjFSVVNtcGxSbGw0VldzNVZVMVZNVFZXYlhodlZsZEtkVkZzVmxwV1JWcDVWRlphYzFkSFRYcGhSbEpUWWtWd1lWZFhkR3RTTWtaSVUydGtXRlpGV2xoVVZscDNWa1pzY1ZOcmRGZGhlbFpYVm0xNFMxZEdTWGhUYlRsWVZtMVJkMXBFU2s5V01WWnpXa1phYVdGNlZuZFdiWGhUVmpGT1YxZHNaRlpoTWxKWFZXMTRjMDB4YkhKVmJHUlhWbXhzTmxWWE1XOVhiRnB6WTBod1ZXSllhRWhXYkZwWFkyczFXR0ZHWkU1TlJFVXlWbXhTUjFZeFVYaFdXR2hxVTBVMWNGVnJXbmRWTVd4ellVVk9WVTFYZUhwV01qVkxZa1pLYzFOc2JGVldiRnBvVmtSR1MyUldSblZoUm1SWFlsZG9lVlpyWkRSVGJWWklVMnRXVjJKSGFGbFZNRlpMVTBaYVNHVkhSbXROYXpWWVZtMDFVMkV4U2xWaVJtaFdZV3MxZGxwRVJtRlNNWEJKV2taU2FHVnJXalpYVjNSdlZURmFWMXBGYUZaaVJWcFhXVlJHWVdWc2JIUmxSbVJUVFZaS2VWWkhNVFJoVmxweVkwVjBWMVpGYkRSWFZtUkhaRVpPYzFwR2FHaGhlbFpvVjFaU1MxVXhUa2RpUm1oc1UwZFNXRlZ0TURWT1ZsSnpWbGhvYVZKc2JETlViRkpoVm1zeGNWWnVjRnBXZWtaUFdrUktUMUpzY0VkUmJHUk9UVVZ3VVZac1pIZFJiVlpHVGxaa1lWTkdTbkZWYlhoM1l6RmFkRTFVVWxkaVIzaFhWMVJPYjFaVk1WWmpSV1JXWWxoQ1VGWXdaRXRYVmtaeVpVWndWMDB3TkRCV2JYaHJVekZPUmsxV1dsQldhelZQVm14YVdrMUdXbkpWYTJSb1RWVTFNRlp0ZUdGVWJHUkdWMnhzV21KSFVUQlhWbHAzVjBkU1JsZHJOVk5pUlhCYVYxZDBiMU14VVhkTlZXaHNVbFphV0ZadWNFZGhSbHBGVW10MFUwMVdjSGhXTW5oWFlWZEtjbE5zVmxoV2JGcFhXbFZWTVdNeFpIVlZiV2hUWW10S2QxWnRNREZSTWxaSFYydGtXR0pZVWxSWldIQlhVMFpyZDJGR1RsWk5WMUpKVmxkek5WZHRTa2RXV0doYVpXdGFWRlp0ZUZka1JrcDBZVVpPYVdFd2J6QldiR04zWlVkSmVGVllhRmhoTWxKVVZqQmtVMVpzV25SbFJYUnFWbTFTZUZWdGRFOVdNVXB5VjJwR1drMUhVWGRXYTFwTFYxWkdkVlZzYUZkU1YzY3dWbTF3UzFWdFZsZFVia3BvVW1zMWNGWXdWa3RpTVZwelZXdDBhRTFzU2xoWk1GWlhWbGRLV1ZWck9WVldWMmgyV2tSR2ExWldVbkpQVmxKT1lrWndXbFpyWXpGa01WcElVbGhvYUdWclNsWldiRnBXWlVaYWMxZHNUbGRXYkVwNVZERmFUMVJzU25OaE0yeFhZVEpSTUZsVVJrcGxWa3B6V2tkd1ZGSnJjRmRXYWtKcllqRnNWMWR1U21GU2VteHlWVzB4VTFkR1dsaGtSWFJwVW14d01GcEZVbGRXTWtwSVlVaEtWMUpGY0V4V2JYaHJaRlpXYzFac1pHbFdhM0JKVm10YVlWWnJNVmRUYkdSWFlrZDRiMVZzVW5Oak1WcHhWR3MxYkdKR1ZqUldiWE0xVm1zeFdWRnViRlZpUmxwWVZtcEdhMU5XUm5OUmJVWlhUVEpvVFZkWGNFZFZNV1JZVkd0a1lWSXlhRlJaYkdodVpERmFjVk5ZYUd0TlZrcDZWakZvYTFZeFdrWlRiR3hhWWtaS1NGVnFSbmRTVmtaWllVZDBVMkpGYjNkWGJGWldUVlpWZUZOdVZsSmliSEJZVkZkd1IwMHhWbkZUYTJSVFlYcFdXRlp0ZUdGV01VcFdZMFpDVjJKWVVuSldSRXBMWXpGYWNscEdWbWhOUkZaNlYxZDRZVk14VG5OV1dHeE9WakJhYjFsc1ZuZFhSbGw1WTBVNVdHSlZWalZXVjNSdlYyeFplbUZFVGxkaE1YQXlXbFpWTVZkSFJrZFZiRTVvVFc1a05sWnFSbE5STWtsNFZXNUtUMWRGY0hOVmExcGhWVlpXZFdOR1pGVmlSbHBXVlRKek5XRXhXbk5UYTJSWFVqTm9VRmRXWkVkT2JGcHlWMnhrYVZJeVozcFdhMUpMVmpKTmVGUnVVbEJXYkZwWlZUQldTMWRXWkZkV2JVWnFUV3hLU0ZkcmFGTmhiRXBWVm14b1ZWWldjRmRhUkVaYVpWVXhTV0ZHVG1sV2ExbDZWa1phYjFVeFdsaFRiR3hvVWxSc1YxbFVSbmROTVd4eFVtMTBhMUl3TlVkWGEyUnZWVEZhUjFkc1pGZGlSbkJVVlZSR1UyTXhaSEpoUmxacFlsWktWMVpHVWt0T1JrVjRZa1pXVTJKVWJGQlphMXBoVm14V2RHTjZSbWxTTUhCWFZGWlNUMVl3TVZkalJsSlhVak5PTkZacVNrdFNNa1pIVlcxc1YxSldjRzlXTW5oclRVWnNXRk5ZYUZaWFIxSm9WV3BDWVdJeFZuTlZhMlJUWWtaV05WUldhR3RYYkZwelkwVmtWbUpIYUhwV01GcGhaRVpXZEZKdFJsZFdia0kyVm0xNFlWbFdXbGRTYmtwUVZtczFWRlp0ZUZwTmJGcFZVbXhrVm1KV1JqUlphazV6Vmxaa1NWRnNaRnBpVkVVd1ZqSjRVMVpXUm5WYVIzQk9Wak5SZWxZeWRGTlZNa1pIVTI1U2ExSkdXbGhaYTJST1RWWldObEZZYUd0U2JUazJWMnRrUjFVeFdYbGhSVkpYVW5wRmQxUnJWVEZXYXpsV1lVVTVWMVpGV2xSV1JtUjZUVlV4VjFkcldsZGhlbXhYVkZab1EyVldVbk5XYkdSWFRWZFNTbFZYZUVOWlZsbDZZVVY0V21GcldsUldNV1JQVWpGd1NHRkdUbWxYUjJRelZtMXdTbVZIVVhoVmJrNVlWMGRTV0ZaclZrdFhWbXh6Vld0a1UwMVlRa1pWVm1odllURktjMU5xUW1GV1ZsVjRWbFJHUzJSV1JuVlhiR1JPWVd0WmVsWlhjRXRTTVVweVRsWmtWMkpHY0ZoVmJGWjNWVVphZEdSSGRGVk5iRVkwVmxab2QyRldTbFpqUnpsVlZtMVNkVlJYZUdGV01WWnlXa1pXYVZac2IzZFdhMXB2WVRGa1IxZHVUbFJoZW14V1ZtMTRkMlZzV1hkWGF6bHJVbFJHV0Zrd1pEUmhSVEZaVVdwS1YyRXhTa1JaVkVaelYwWktjbGRyTlZkV2JIQldWMWQ0YjFFeVJrZFhia3BYWVRGd2MxWnRNVk5YUm1SeVYyNWthVkpyY0RCYVZWcGhWakpLUjFOclVsZFNSVnBNVlcxNFlWZFhUa2RWYkdSWFlURnNObFpxU25kVE1WSjBWbTVPVjJKc1duQlZiVEUwVkRGU1ZtRkZUbXhpUjFKV1ZWY3hNRlF4U1hkWGEyaGFWa1UxZWxacVJtRk9iVXBHWlVkR1YySkZjREpYYTFwaFZURktjMVZ1VW1wU01uaHZWRlJLYjFKc1duTlpNMmhhVm14R05GVXlkR3RXTWtaelkwWmFXbUpVVmtSV2ExcHpWbXhhV1dGRk9XbFNia0YzVjFaV1lXUXlSbGRYYmxaU1ltMW9XRlZ0ZUhkamJGWjBZM3BHVTAxck5VcFdWM2hQVjBaSmVGTnNRbGhXTTJoWFZGWmtUbVZHVm5OWGJGcHBWbFp3ZGxaWE1ERlJNbFpIVm01U1RsWjZiRlpVVmxwM1UwWldjMkZIZEZkV2JIQjZWVEkxUjFkck1VZFdWRVpWWWtad1NGcEdXa2RrUmtwMFlVWmtWMVp0T1RWV2JGSkxUVVprY2s1V2FGTmlhM0JQVm14a2IxWnNXWGRhUkZKb1VtMTRXVnBWV210VU1WcDBWV3hvVjFaNlFURlpWbHBoVmxaYWNsZHNXbGRpVjJoNVZqRmFhMUl5VG5SVWEyeFRZa1phV0ZsclZuZE9iR1JZWlVaYVRsWnJOVWhXYlhoWFZUSktSbE5zYUZWV1YxRjZWRlphWVZJeGNFbGFSbkJYVFVad1dWZFhkRk5aVmxaelYydGtWR0Y2YkdGV2JYaGhVakZTYzFkc1pGTk5Wa3A1VlRJeGIxUnNXWGxaTTJ4WFlrWndWRlZxUmxOa1JscDFWV3hXV0ZJeFNscFdiVEUwVXpGUmVGVnNaRmhpYXpWWlZXMXpNVTFHVWxkWGJtUnBVakJXTkZrd2FHRldNVXBHVTI1S1dGWnRVa2hWYlhONFZteGFjMVZ0YkZoU1ZYQjJWbTB4TUZZeFNuUldiR1JoVW0xU2FGVnROVU5qTVZaMFRWUlNWMkpHY0hwV1YzUlBWbFV4Vm1ORlpGZGlSMmd6Vm10VmVGWnJOVlpWYkZab1lUQndObFpVUm1GVU1sSklWbXRvYTFKc1NsUlphMk0wWlVaWmVGa3phR3BOVlZZelZGWldiMVpYU25OWGJHaGFZa2RvZGxaV1duZFdNVnB5WTBVNVYyRjZWbGhXTW5SdlZESkdWMWRzYUd4U1ZscGhWbXhrYjAweGJGVlNhemxUWWxVMVNsZHJXbmRVYkVsM1RVaG9XR0pIVVhkVVZWcExVakZhZFZWc2FHbFRSVXA2VjFaU1EyUXlWa2RYYTJSYVRUSm9XVmxZY0VkV01WSlhZVVpPVmsxV2NFaFZNakZ2VjJ4WmVtRkZhRlZXUlZwVVZtMTRkMUl5VGtobFJtUnBWMGRPTlZac1pEUlZNVmw0WWtab1UySnJOVlZaYlhSM1ZteHNjbGRyZEd4aVIzaFlWbXhvYjJGc1duSk9WbHBXVFc1b00xbFdXbUZXVmtwWlkwWmtVMUpWY0ZWV1ZFbDRWRzFSZVZOcldsWmlWVnBVVkZSR1MySXhXbkZSYlVacVRVUkdTRlpITlZkaFZrNUdZMGRvVlZaWFVUQldiWGhUVm14V2RWUnNVbWxTVjNjd1YxUkNhazVXWkhSU1dHeG9VbXRLWVZsVVJscGtNVnB5VjJ0a2FsWnVRa2RaTUZwVFZURmtSbE5xV2xkTmJsSllXV3BHV21WV1duTmhSbEpwWVRCd1ZGZFdaREJUTWs1WFlraFNiRkl3V25GVVZscEhUbXhzY2xack9WWlNiSEJaV2xWV2MxZHRSWGxVYWxKV1RXNW9SMXBXWkVkU1ZtUjBVbXhPVjAxdGFFNVdNVkpEWVRGUmVGUnJXbEJXYlhoeFZXeG9iMVV4VWxkV2JtUnJVbXhzTkZsVmFHdFZhekZ5VjI1c1ZWWnRhRlJXTUZwaFVteGtjazlXY0dsU2JIQllWa1pXWVdFeVVraFVhMlJVWWxoU1QxVnJWbUZUYkZweFVtMDVhazFYVWpCV2JUVkxWakZhUmxkc2JGcGlSMmhFVm10YWMxWldSbFZTYkdSWFRVaENTbGRYZEZaTlYwWklVbGhzYTFKR1dsaFVWbVJQVGtaYVNFMVdTbXROUkd4WFZtMTRVMWRHU2xWV2EzaFhWbXhLVEZaVVNrOWpNWEJKVkcxb1UwMUdjSGRXVjNCRFpERk9WMVZZYUdoU00xSnZWbTE0YzA1R1dYbGpSV1JhVm10d1YxUldVazlYYlVwWlZWaGtWMkV4Y0VoV01HUkhVakZLYzFwR1RsTldXRUY0Vm0xd1NtUXlWa2RUV0d4VlYwZDRWbFl3WkRSWFJsbDNWbXQwVkUxV1ZqTlpWVlUxWVZkS1NHUkVWbFZXYkhCeVZrZDRTbVZHVG5OalJscE9ZV3hhV1ZaVVNqUlVNVWw0Vkc1R1YySlZXbFJaYkZwTFYwWmFTR05GVG1wTlZUVlhWRlpXYjFsV1NYbGhSbWhWVm0xUk1GcEdXbGRPYkVaMFQxWldUbEpGV2twV2EyTXhWVEpHVjFScmFGWmlhMHBXVm10V1IwNUdjRWhsUlRscVlrZFNWbFp0TVc5aFIxWnlWMnR3VjJFeGNIWlpla1p6VjBaS2RWUnNaR2hpUm5CYVZtMHhORk15VW5OaVNFNVhWa1ZhVkZadGRHRlhiR1J5V2tWa2FGSXdWalpWVnpWdlZqRktjMk5HVWxwbGEzQk1WbTF6TVZadFJrZFhiR1JUVm01Q1UxWnRNWGRSTWsxM1RsWmtWbUpIYUhGVmFrSmhZakZhZEUxVVRrNWlSbHBZVmxkNFQxWlhTbFpYYkhCWVlUSk5lRlpyWkVkamF6VlhWV3h3YUUxc1NsQlhiR1EwVmpGa1YxWnVTbXRTTTJoWVZGUkdTMDFXV2xWU2JVWldZbFpHTTFReFdtRmhWa3BZWVVac1dtSkhVblpaTUZwV1pERmFWVkp0Y0U1V1ZFVXdWbXRrTUZReFVYZE5WV2hzVWxoQ1YxUlhjRVpOUm14VlVtczVVMDFYVW5oV2JYaDNZVlpaZW1GRlZsZFNiRnB5VmtSS1UxWXhaSFZWYlhoVFlUQndlbFp0ZUZkamF6RlhWbGhvVjJKWVVuRlVWM1IzVmpGc2NsWnNUbWhTYXpWS1ZWYzFTMVpyTVVkWGFrNWhVa1ZhZVZwRVJuTk9iRnAwWlVkb1RrMVZjRWRXYlhocVpVWnNWMXBJVWxkaWEzQlZXVzEwWVZac1duVmpSV1JhVm14S1dGWnNhRzloTVVweVkwWmFWMVo2UmtoWlZXUkxVbXhrV1dOR1pGTmlSbkI1Vm1wSmVGWXhXWGxUYTFaWVlrVTFXRlZ0ZUhkaU1XUlhXa1JTVkUxck5YcFdWelZQVm0xS2NrNVhPVmRpUmtwSVdsVmFWbVZHVm5Ka1JtaHBWbGhDV0ZaR1dsTlVNVnBXVFZWa1ZHRXpVbUZhVjNSTFpXeFdjbGR1WkZSV01EVkpXa1ZhVDFSc1NuVlJXR2hYVFZad2FGbFhjM2hYUms1MVUyMTRVMkpGY0doV1JsSkRVekZOZUZac1ZsSmlSbkJRVm0xNFlWTkdXa2hrUlRsb1ZteHdNRnBWV25OWlZscFlZVVJPV0Zac2NGZGFWbVJUVTBVMVdGSnNhRk5OTW1oR1ZqSjRZVmxYVVhoYVJtUlhZbXRhVkZsc2FFTmpSbHB5VjJ0MGExWnRVbmxXYlRBMVZrVXhSVkpzYUZwTlJuQllXVmR6ZUdSR1ZuVlZiR1JYVWxWd1RWZHJVa2RoTWxKSVUydGFWR0pYZUU5WldIQkdUV3hhYzFsNlJtcE5hMXBJVjJ0V1lWWkhSbkpqUjBaVlZrVnZNRnBHV25OV1ZrcDBUbGQ0VjJKRmNHRldNblJoWkRKS1NGSlljRkpoYTBwWVZXcE9iMVpHVmpaVGEyUlRZWHBzVjFsVldtOVdNVXBXWTBaQ1YxWXpVbGhWZWtwVFVqRldjMkZGTlZkV1JscDZWbGQ0VTJNeFpGZFhXR2hXWVRBMVlWWnRkSGRUUmxwelZXdGtXRkpzYkRaVlYzUXdXVlphYzFaWWFHRlNWbkJRV2tWa1QxSnJOVmRVYkU1T1lrVldORlp0ZEZkV01WRjRVbTVTVkdKc1NsVlpWRXB2VlZaYWNWUnJUbHBXYkhCNFZrY3hNRlJzU25KT1ZFWmFZVEpvVEZkV1ZYaFRSMVpIVjJ4V1YxWnJjRFpXVkVvMFUyMVdTRlJyYUZCV2JrSnZWRmN4YjFWV1pGaGtSbVJPVW14d1NGVnROVWRaVmtwWlVXeFdWbUpIYUVSYVYzaHJZMnhhZEU5V1pFNWlSbkJhVmxSSk1WRXhWblJTYmtwVVltdGFZVmxzYUc5aFJtdzJVbXhLYkdKVmNFZFdSM2hEVmpGWmVtRkZjRmhXTTFKeFdsVmFUMk14U2xsaVIyaFRVbTVDYjFaWGVHdGlNVkpIWVROa1lWSlViRlZWYkZKelYyeHJkMVpxVWxaaGVrWlhXVEJvVTFZd01WaGhSRTVXVmtWd1NGa3ljM2hYVmxaellVWmtVMVp1UWxGV01XUTBWakZhY2sxVlpHRlRSa3B4VlcxMGQyTnNVbFpWYTJSVVZteHNORmxWYUU5WFIwcFhWMjVzVjJKR1NraFdNR1JMVjFaR2MxVnNjRmRTVlZZMFZtMTRhMU14VGtoVGExcFBWakpvYjFSWE5WSk5WbHB4VW0xd2JGSnNTakJXVm1oclZVWmFWMWRzVmxkTlJsVjRWWHBHVjFaV1RuTlViWEJwVWpGS05sZFdWbUZrTWtWNFYyeHNVbFpGV21GV2ExWjNZMnhWZVdWSFJsTldhMXBXVm0xNFUxWXhXWGhUYlRsWVZteGFjbFY2Ums5V01WWjFWVzE0VTFkSGFGaFdSbFpYWTIxV2MxWllhRmRpVkd4VlZGZDBkMU5XV2xoa1NFNVhUV3R3TUZwVmFFTlhiRnB6VjJ0MFlWSkZXbmxhVmxVeFZqRndTR0pHVGxkU00wNDBWbXhhYTJReVRYaFViazVVVjBkNGMxVXdXa3RXVmxwelZsUkdhMkpJUWxsVVZscFBWa1phY2s1VVJsWldla1l6VmxSS1YyUkhValpUYkZwc1lUQndVVlpzVWtka01rMTVVMnRXV0dKRmNIQldNRlpMVlVaa1dHVkhSbXBpVmxwSVZsZDRiMVJzV2xkalJrSldZbFJXUkZwVldtRldNa1pJWkVaV2FWSlhkekJYVjNSVFZqRmtSMXBGYkZKaE1sSldXV3RhZDAweGEzaFhiR1JyVWpGS1IxUXhXbXRWTURCNVlVUk9WMkV4Y0hKYVJFWlBZMnN4V1ZSdGJGUlNhM0JYVm1wQ2ExVXhWbGRXYmtwWFltczFjMWxyVlRGV01WcElUVmhrYUUxV2JETlpNRlp6VmxVeFdGVnFUbGROYm1oaFdsZDRkMU5XV25OVmF6VlhWa1phUlZZeFdsZFpWa1Y0VjJ4YVRsWlhhR2hWYWtKaFkwWmFjMWR1WkU5aVIxSmFXVEJXTUZZeVNsWk9WV1JhWVRGYWVsbFhjM2hrUmxaMVVteHdhVkp1UW1oWGExSkhaREZKZVZKcldtdFNNMUpZVm1wT2IxTXhXbk5aZWtacVRXdFdORll4YUc5V01WcEdUbFpXVjJKSFVuSlVWRVpyWTFaT2NscEdhRk5pVmtwYVZqSjBWMDVHV2tkVGJGWldZV3MxV1ZaclZuTk9SbXcyVTJ4S2JGWnJOVnBaTUZwWFZqSldkR1ZGTVZkV2VrWXpXWHBLVDFZeFZuTlhiVVpUVmtaYWVsWnRNREZSTWxaSFYyNU9hRk5GTlZsWmExcDNVMVpzVm1GR1RsZFdNRlkwVlRKMFQxbFdTa1pYYWs1YVRWWndVRnBGWkU5U2F6VlhXa1pPVGsxdFpETldiWFJyVFVkRmVGWnVTazVXYkhCUlZtMHhiMVpXV1hkYVJGSlZUVmQ0V1ZwVmFHdGhiRXAwVld4d1drMUdXa3hXUkVaTFZsWktkVnBIUmxOU1dFSjVWbGh3UW1WSFVsaFNhMVpVWWtkb1dGVnNhRU5UVm1SWlkwVk9UMUl3TlVoWlZFNTNWVzFGZWxGc1RsVldWbkJYVkZaYVlWWnNaSEpQVmtwT1lUTkNXVmRYZEdGaU1rcEhWR3RzVW1KWGFGaFdhMVoyWkRGc2RHVklaRmhXTUhCSFZrY3hORll5U25KVGJVWlhZa2RTTTFWcVNrZGtSazV6Vm14YWFWWkdXbTlXVjNocllqRlNSMVZzWkZoaWJWSllWbXBCZUU1V1pISlpNMmhYWVhwR1Ixa3dVazlXTURGeFVtNXdWbFo2Umt0YVZscFRWMWRPUjFkdGJHbFhSMmd5Vm0xd1ExWXhUWGROV0U1b1RUTkNjRlZ1Y0ZkaU1WSlhXa2QwVDFac2NFaFpWV1F3VjBkS1YxZHViRnBOUjJoVVZteGtTMUl4VG5KbFJuQlhWbXhWZUZaVVFtRmhNVnBYVW01S1QxWnJOVlJXYkdoQ1pERmFjbGR0Y0d4U2JFb3dWbTEwWVZWR1duUmhSbXhYWVRGYVRGbFZXbGRqYkdSelYyczFWMkpXU2xwWFZFSlhaREpLUjFkc1ZsZGhhMHBYVkZkd1IwMHhXa2hsUlhSVVVtNUNSbFp0ZUZkVk1WcFZWbXRTV0ZaNlFqUldSekZYWXpGYWRWVnRhRk5OUm5CUVYxZDRiMkp0VmtkWFdHeFBWMFZ3VDFWcVFuZGxWbkJHVjJ4T1ZtSkdiRFZaVlZwTFZqSkZlRk5yVWxwaVdHaHlXa1ZWZUZac2NFaGpSVFZvWld0VmVGWnRNVFJpTVVWNFZHNU9WV0V5ZUZaWmJGSlhXVlpTV0dORlpGaFNiRXBYVjJ0YVQxZEdXbkpPVkVaWFlsaFNNMVpyV2t0amJVbzJVbXhvYUUxWVFubFdiVEY2VFVkUmVWTnJXbWxTVkZaVVZGZDRTMlJzV25SalJXUnFUV3R3ZWxaR2FHdGhSa3BWWWtVNVZtRnJSWGhVVlZwelkyMUdTR1JIYUZkV1JVbDZWa1phYjFsV1draFNXR2hvWld0YVlWWnFUazlPUmxWM1YyeE9XRll3Y0VsVmJURnZZVlpLYzJFemFGZGhhMXBvVmxSS1NtVldUbk5YYXpsWFZteHdWRlpxUW10Vk1rWkhZa1pvYTFOSFVuRldiWGhMVjBaYVdFNVZPV2hXYkhCV1ZtMTBjMVl4V25OVGEyaFhWbFp3WVZwRVNrdFNWbHB6Vm14a1RrMUZjSFpXTVZwaFdWZE5kMDVZVGxOaVJscFhXVmh3VjJJeFdYZGFSazVyVm14V05Wa3dWVFZXVlRGRlVtdG9XazFHU2xoV1JFWkxUbXhhY2sxV1pGZFNWWEJKVjFkd1IxWXhTWGhXYkd4aFVqQmFUMVl3Vmtwa01WcFlUVVJHVlUxcldubFVWbWhQVmpKS2RGVnNWbGRpUjFKMlZHMTRhMk5XVG5KUFYzUlRZa2hDTkZaV1kzaE5SbVJIVTJ4c1VsZEhhRmRVVmxwaFpHeGFWVk5zWkZoU2JGcDZXVlZhYTFZeFNYaFRhM2hYVmtWS1ZGVlVTa3RqTWtwSFdrZEdVMkpyU205V1JsWnZWVEZPYzFkcmFHcFNWVFZ2V1d4V2QxZFdjRlpWYXpsWVlsVmFlVlJzVlRWWGJVWnlVMnBPVm1GclJURldNR1JQVW1zMVYxUnJOVk5TVmxZMFZtMXdTbVZIVVhoWGJsSlhZa2RTY0ZWdGVHRmlNVloxWTBWa1ZsSnNXbmxXYlhSclZHc3hXRlZxUWxwTlJsbDNXVlZrUjA1c1NuTlhiSEJvVFdzME1GWnJVa2RUYlZaSFUyeHNhRkpzV2s5V2FrWkxWRVprYzFkc1dteFNNRFZZVjJ0b1UyRldTblZSYms1YVZrVktWMXBFUm1GU01YQkpWR3MxVGxaNmEzcFhWM0JQWkRGYWRGTnNiR2hUUlZwV1ZtdFdZVk5HVWxkWGF6bHJWakJ3U2xVeU1VZFViRWw2WVVaa1YxSnNXbFJaZWtaUFl6Rk9XV0ZIY0ZObGJYaG9WMVpTUzJJeFZrZGlTRXBYWVd0S1dGVnRkR0ZsUm1SeVZtNWtWMUpyY0ZwVlZ6VjNWMGRGZUZkdVdsZGhhM0JZVmpCYVQyUldSbk5UYldob1RVaENORll4WTNoT1JteFlWRmhvVmxkSVFuQlZiRlV4VlZaYWMxcEVVbFJXYlhoNVYxUk9iMVpIU2taV2FsWmFWbFpLYUZkV1drdFhSMFpHWlVad1RsSXhTbEZXVkVKV1RsWmtXRlJyV214U2EzQlBWbXhvUTAxR1duRlNiVGxyVFZWV05WVnROVXRVYkdSSFUyeHNWMkV4V21oV1JFWnpZekZhYzFkck5WTmlWa2wzVjFSQ1lWTXlSWGROVlZaVFlUSjRXRlJXWkc5bGJGbDVUVlprYW1KR2NGWlZiWGh2WVZaa1JsTnNWbGhXYkVwRFZGWmFZVmRHVG5KaFIyeFRWa1phZGxkV1VrdE5SVFZYVjFob1drMHlhRlpaYkZwSFRURlJlRlpzWkZkU2JWSkhWR3hXTUZac1drWmpSazVoVWtWYWVsUnRlRk5qTVU1MFpFWmtXRkpWVmpSV01WcFRVekpGZUZSdVRsaGhNVnBUVm10YVlWWldXbk5hUms1b1VtMTRWMWRyVmpCV1JscHpVMnBDWVZaV1dUQldiWE40VW0xRmVtTkdXazVXYkhBeVZsaHdTMU14VGtkV2JrcHBVbTFTY0Zsc2FHOWtNV1JYVjJ4a1ZHSldSalJaVkU1elZERmFkRlZ1UWxaaVJrcDVWRlphVjFkSFRrbFViRkpwVWxkM01WZHNWbTlWTVZwSFYyeGFUMWRHY0doV2JuQkhWa1pWZUZkck9XdFdhMW93V1RCYVQySkhTbGxaTTJ4WFYwaENSRlpFUmxabFIwNUpWRzFzVTFKdVFsUlhWM2h2VVRGUmVHSklUbGhpYTNCelZXMTRTMWRXVWxkV2JVWlZUVlZ3TVZWWE5XOVdNVnAwWVVoS1YxSXphRXRhVldSTFVsWmFjMkZHYUZSU1ZYQkpWbXRrTkZsWFVYbFViR1JYWW14S2NsVnNVbk5YUmxaeFZHMDVhMDFXY0VoWGEyaHJWa2RHTmxKdWNGcGhNbWhVVm14YWExTkdWbk5TYkZwb1RWWndObGRzWkRSVU1WcHpWVzVPVldKVldtOWFWM2hoVWpGYWRHVkhPV3ROVmtZMVZtMDFUMVpIU2xWaVJscFhUVWRvUkZZd1duTldiR1IxVkcxMFUySldTWGRYVkVKV1RWWlpkMDFWWkZkWFIxSllWRmR3UTA1R1ZuUk5Wa3ByVFVSR1dsWlhlRmRoVm1SSVlVWkNWMVl6VW1oYVJFcEtaVVp3U1ZWdGNGTldNVXAyVmxkNFUxWXhXbk5YYkdSV1lUQTFWbGxyV25kVFZscElUbGQwVjFKc2NGZFViRlpyVmxVeFYyTkZVbGRoTVhCSVdrVlZlRll5VGtkYVJUVk9ZbGRPTlZadGNFdE9SbEY1Vkc1T2FVMHllRmhaVjNoaFZURnNkRTFVVW1oU2JHd3pWakowZDJKR1NuUmtSRlpWVmxaS1JGZFdWWGhqTVU1eVkwWmFUbUpyU2tsV01WcGhXVlpPVjFWdVVrOVdNRnB3Vld4U1YxSldaSE5YYlVaclRWZFNXRlp0TlVkVk1rcFpVVzVDVjJFeGNFeGFSbHBhWlZVeFNXRkdUazVoZWtVeFZtdGFiMk14V1hoWGEyaFdZVE5TVjFSVldrdFNSbXgwWlVkMGExSlVWbGhYYTJRd1ZqSktXVlZVU2xkaVIwMTRWVlJLUjFack1WbFNiRnBwVmtaYVdsWlhkRlpOVmtwSFlrWmFXR0p0VWxSVmJUQTFUbFp3UmxkdVRtbFNNSEJZVlRJMWQxWXhTa1pYYmtwWFRXNU9NMXBWWkV0VFZsWnpWbXhrVTFkRlNsSldiVEV3V1ZaSmQwNVdaRlppUjFKWFdXeFNjMkl4YkhKaFJVNVhZa1p3ZWxaWGVHdFdWVEZ6VjJwQ1YxWjZRVEZXYkdSTFYxWkdjbVJHVmxkaVJsWXpWMnhhWVdFeFpGZGpSVnBQVm1zMVZGWnFUbXRPYkZweFVtMTBhMDFWYkRWVmJYaGhZVEZLYzFOc1RscFdla1pVVlhwR1YxWldTbkprUjJ4WFlrVlpNRlpzWkRCWlYwcEhVMjVXVW1KR2NGZFdiWGhMVjBaa1YxZHRSbFJTTUZwSlZERmFWMkZXWkVaVGJUbFlWbXh3VjFSV1dtdFNNV1J6Vm14T2FWSlZjRlZXVnpBeFVUSlJlRmRyVmxKaVdGSlpXVmh3VjFZeFVuTlhiVGxYVW14d1Ixa3dXa05YYkZsNllVUk9XazFXY0hKV01XUlBVakZPZEdWR1RtbGhNRzh3Vm14a05HRXlSWGhXYkdSWFYwZFNWVmxYZUhkaFJsWnpXa2M1VlZKdGR6SlZiVFZyVjBaS1ZWWnJiRlZOVmxsM1ZsUktSMlJHY0VWWGJHUk9ZbTFvVlZkWWNFdFRNVnB5VGxWc2FWSnNTbkJXTUZaTFZWWmtWMXBFVWxkaVZrWTBWbGQ0YjJGc1NsZGpSa0pXWWxSRmQxUnNXbUZqTVZaeVdrWmFVMkpJUWtwV2ExcHZaREZrUjFkdVRsUmlWVnBvVm0xNFZtVkdXbk5YYm1SVVVsUkdWMVJzV2s5Vk1WcFhZVE5vVjJFeGNGaFpWRVpQWkVaYWNscEhiRlJTVlhCMlYyeGplRlV4VFhoV2JGWlRZVE5TY0ZadGVFdGxiR1J5VjIxR2FWSXdjRWxhVldodlZteGFObEpxVGxoV2JWSklXWHBHYTJSV1JuTmhSMnhUVFZWd1VWWXllR3RsYXpGWVZHeGtWbUpHV2xOWldIQnpZekZzY2xwRVFrOVNiSEJKVkZWb2IxZEhTbGRYYTJSVlZtMW9WRll3V21GU2JVNUlVbTFHVjAweWFEVlhiRnBoWVRGa1NGUnJiRlZpVjJoWVZtdGFZVll4V25GU2JYUm9UVlphV0Zac2FHdFZNa3B6WTBaV1dsWkZjSFpXYTFwelkxWk9jbHBHYUZkaVJYQmhWbXhrTkZJeVJsZFRhMmhzVW01Q1dGbHJaRkprTVZaeFVteGtWMDFYVW5sV01uaERWa1pLY21ORk1WZFdla1l6V1cxemVGWXhWbk5hUmxwb1RXeEtkMVpYZUZOU01VcHpZa2hLWVZKR1NsZFZiWFJ6VFRGYWMyRklUbGRXTUhCV1ZXMTBNRlpXV25OalJFNVhZa1p3YUZac1dsZGphemxZWWtaa1YwMHdOSHBXYlhCS1pVZFJlVlJ1U2s1V2JWSndWVEJXWVZkV1duSldibVJXVW0xNGVsWnNVa2RoYkZwelUyNXNWMVl6VW5KWlZscGhWbFpLYzFac2NGZFNWRlp2Vm10amVGSXlVbGRWYmxKUFZteEtiMVJXWkhwa01WcEhWV3RLVDFacmNGaFZNbmhYVmpKR05tSkhPVnBXUlc5M1ZHMTRXbVZWTVZsYVJrNU9ZVEZ3U1ZkVVFtRmlNVnAwVTJ4c1VtSlZXbWhXYm5CSFZERlNWMWRzVGxoU1ZFWlhWREZrYjJGSFZuTlhXR1JYWWxob1ZGWnFSbXRqYXpGWlUyczFWMUpVVmxkV1JsWmhVekpXYzJKR1pGZFdSVnBWVlcxNFMxZHNiSEpXVkZaWFlYcEdSMVpzVWtkV2F6RlhWMnhDV2xaNlJreFpNbk0xVmxaYWMxTnRiRmRTVm5BelZtdGFVMUV5VFhsVmJrNVZZbXR3V1ZacldtRmlNV3h5V2tSU2JGSnNiRFJXVjNRd1YyeGFjbU5GYUZkTmFsWlVWbXhhV21Wc1JuVmpSbkJYVFRBd2VGWnRlR3RTTURWelUyNU9VbUpIVWxSV2JGcFhUVEZhY2xrelpHeFNhekUxVlcwMVMxUnNUa2hsUm1oWFlURmFhRlpXV2xkalZrWlpZVVU1VTJKV1NYZFhWRUpYVXpGU2NrMVZWbWxTYlhoWVZGWmFTMVJHV2toTlZtUnFWbXRhZUZaSGVGZFVhekYxWVVWU1dGWnNTa2haYlRGWFZqRldkVlZ0YkZOV1IzaDJWMWQwYjFFeVZsZFhhMmhzVWpOU1dWbHNXbUZXTVZGNFYyMDVWMVpzY0VoV01uaEhWakpGZUdOR1pGVldiSEJVVm0xNFYyUkZOVlpPVjJ4VFRUSmtNMVp0ZEdGaU1sRjRZa1prV0dFeVVsaFdhMVpMVjFaWmQyRkZUbFJTYlhoNlZteG9iMVV4V25Sa2VrcFhZbFJHU0ZsVlpFdFRSMUkyVTJ4a1YxWnNjRkZXYkZKSFpESk9jazVXWkdoU2JWSlpWVEJXUzJGR1pGZGFSRUpVVFdzMVdGZHJhRk5oYkVwMFZXMDVWMkpVVmtSV01WcGhVakpHU1ZwR1ZrNWhNWEExVmtaV2IyRXhXbGhUYmxaU1lsVmFWbFp0ZUZabFJuQkdWMjEwV0ZZd1drZFViR1J6VmpKS1dWVlVSbGRoYTFwMldrUkdhMk5yTVZsVWJXeFVVbFp3ZDFaWGNFdE9SbFpIVjI1S1dHSnJjRTlVVmxVeFZqRmFTR1ZGT1ZwV01IQkpXa1ZTVjFack1WZFRhM2hYVWtWd1RGWnFSa3RYVjBaSFlVZHNXRkpWY0UxV2EyUTBXVmROZDA1WVVsTmhiSEJZV1Zod2MxZEdWbkZVYkVwc1lrWndSbFZYZUU5WGJGbDNWMnhvV21FeFNtaFdiR1JMVjFkR1IxRnNaR2hOYkVveVYxUkdZVlV4V1hoalJXUnFVak5TVDFWcldsWmxWbVJZWkVkd2JGSnNSalZWYlRWTFZHeGtTR1ZHVmxWV1JXOHdXbFphYTJOV1RuTmFSVGxYWVRGd1dsZHJWbUZqTWtwSVUyeGFUbE5IVWxoVmJYaDNWa1pyZVdNemFHcGhla1phVlcweFIxVXlWbkpYYkVKWFlsaENSRmRXWkU1bFJuQkpVMjFHVTFaSGVIWlhWbWgzVm1zeGMySkdWbFZpYXpWWldWaHdSMlZXVWxaaFNFNVlVakJ3U0ZVeU5YZFhiRmw2WVVod1ZXSllhRWhXYkZwWFl6RkdjMXBGTlZOTk1VWTJWbTF3UjJJeVVYaFVia3BPVm14d2NGVnNXbUZVTVZaeFUyeE9WVkpzV2pCWk1HTXhZa2RLUjFKcVRsZFdNMUpvVmtSR1lWWldXblZoUmxwT1ZtdHdVVll4V210U01rNXpXa2hTVUZadGFIQlZha1pMVmxaa1YxcEVVbXBOUkZaNldXdFNZVll5UmpaV2JrSlhZa1pLV0ZwVldtRlRSVEZKWVVaa2FHVnNXbGxYVmxKUFl6RmFWMXBGYUZaaVJWcFhXVlJLVWsxR2EzZFhiRTVxWWtoQ1IxUnNaRFJXTVZwSFYyeGFWMUl6VW5KVVZXUkdaVVpPV1dKSGFGUlNNVXBvVmtaU1MwMUZNSGhVYWxwVFlsUldjMVZ0ZEdGbFZsVjVaVVU1VmsxVk5VZFViR2hYVjBkS1dXRkdRbFpXUlhCUVZXcEtUMU5XUm5SU2F6VnBZa1Z3YUZZeWVHdE9SbXhZVkZob1ZtSkdXbFZaVkU1RFkyeFNWMXBFUWs5V2JHdzBWbGQwYTFkSFNsWmpSbWhYVFdwV1NGWnNXbXRUVmtaMFVtMUdWMDB3TVRSV1YzaGhZekExYzFSdVNsQldiVkpVV1cxMFNtUXhXbkpYYlVaV1RWVXhOVlV5ZUdGVU1XUkhVMnhhVjJFeFdqTldWVnB6WXpGYWRWTnJOVmRpVmtwYVYxUkNZVmxXVW5SU1dIQmhaV3R3VjFSV1pGTmpiRlY1WlVkR1UxWnJXakJVYkZwM1ZHMUdjbEpZYUZkU2JIQnlWWHBLVTFJeFduTmhSa0pYVjBaS1ZWZFdZM2hoTURWSFYxaHNiRkpyTlZaVVYzUmhWakZTVjFadE9WZFdNSEJXVlcxNFExWXlSbkpUYWs1YVpXdGFjbFl4WkU5U2F6VldUbGRvYkdFeFZqVldiWGhoVlRGUmVGVlliRk5pYXpWWVZqQmtORmRXYkhOaFJVNVRUVmhDV0ZZeU5XdGhiRnAwVldwQ1drMUdWVEZaVldSTFUxWkdkVnBHWkZOU1ZuQjVWbFJLZW1WR1duSk9WbXhTWWtWS1ZWVnFUbTlVYkZwelZXdDBUbEl3Y0hwWk1GcHpZVlpLVm1OSE9WVldiVkoxVkZkNGEyTnNjRVZWYkZwVFlrZDNNRmRXVWs5a01XUkhWMnBhVTJGNmJGWldhazVPWlVaYWMxZHNaRmhXTUhCSFZHeGFhMVV3TVhSaFJGSlhZV3R2TUZaVVJtRmphelZYVjJzNVYxSnVRbTlXVjNCTFlqRldSMkpHYUd0VFJYQnpWVzE0UzJWR1ZYbGxTR1JvVFVSR1JsVnRkR0ZXYXpGWVlVaEtWMDFxUmtoWk1uaHJaRlpHYzFWc1pGZGhNV3cyVm1wS2QxTXhVblJXYms1WVlteEtjRlZxVGtOVU1WSlhWbTVhVGxac1dUSlZWM00xVm1zeFdWRnViRlZpUmtwb1YxWlZkMlZYUmtkU2JHUm9UVmhDTmxaSGVHRlZNazVYVkc1T2FsSXphRlJaYkdodlYyeGFkRTFJYUU1U2JWSjVWRlpvUzFSc1RrbFJiRnBWVm14d1RGWkZXbk5YUjFaSlZHczVhVkl4U1hkWGJGWmhVVEZaZDAxVlZsZGliV2hZVlcxNFlWWkdiSFJqZWtaWFRXdHdTbFZ0ZUdGaFZtUkdVMnhDV0ZadFVUQldha3BYWXpGU2MxZHNXbWhOU0VKNFZrWldhMDVHVG5OWGEyaHFVbFUxYjFsc1ZuZFhiR3hXWVVVNVdHSlZjRmxhVldoWFYyeGFSbGR1V2xWaVdHaDZWRzE0VjJOck5WZGFSazVPVFVSUmVGWnRkR0ZoTWxGNVVsaHNWR0pHY0U5V2JURnZWa1pzYzJGSE9XaFNiRnA0VlZaU1IyRnNXbk5UYWtaYVRVZG9URmxyV21Ga1IxSkZWbXhrVTJKRmNFMVdNVnBoV1ZaT1NGWnJiRk5pUjJoWlZUQldTMUpHV2toa1JscFBWbTFTU0ZaSGVGZFZiVXBKVVc1T1dsWkZiM2RVYTFwWFRteEtjazVYZEU1aVJuQklWMnRXWVZVeFVYaFRXSEJXWWtoQ2FGWnVjRWRXUm13MlVteEtiRkp1UWtoWk1GVXhWR3haZWxvelpGZGhNWEJVVlhwR1VtVkdaSEphUms1b1lrWndWMVp0TVRSVE1sSnpZa1pvYkZOSFVsaFdiWGgzVm14YWRHTjZWbWxTTUhCWVZUSTFZVll4U2paU2FrNVdUVzVPTkZadGN6RlRWMHBIWVVab1UwMVZjRkZXYkdRd1ZqSk5kMDFJYUdGU2JXaHhWV3hrVTJJeFduTlZia3BPVm14YVdWa3dhRTlXUjBwR1lrUlNWMDFxVmpOV01qRlhZMjFPUjFwR2FHaGhNMEpaVmtkNFlWSXhaRWhWYTJScFVqTm9jRlp0ZEhkT2JGcHlWV3RrYUUxWFVubFVWV2h2WVZaT1IxTnNXbGRoTVZvelZsVmFZV05zWkhKYVJUbFhZa1Z3V1Zac1kzZE9WMFpJVTJ0c1VtSkdjRmhaYTFwTFYwWmFSVk5zWkd0U2JGb3dWREZhVjJGV1pFWlRhM2hYVW14d1YxUlZaRmRXTVhCSFlrZEdVMVpHV2xWV1YzaHJUVEpXYzFkWWFHRlRSMUpVVkZkMFlWWXhiSEpXYkdSVllrVnNOVlpYZERSV2JVcFpVVzVXWVZZemFGTmFSRVpYWTJ4a2NrOVdaRmRTYkc4d1ZteFNSMVV4VVhoaVJtaFRZbXR3V1Zsc1VuTlhWbXh5V2taT1YxSnRlRmxhVldoUFZESktTR1I2U2xkaVdFMTRXVlphWVZaV1duVmhSbVJUWld0Sk1GWnRNWHBOVmxsNVVsaHdhVkpzV2xsVmFrWkxWV3hhV0dSSGRFOVNNRFZJVmxjMVMxbFdTbFZXYms1WFlrWktXRlpzV2xOamJIQkZVV3hvVjAxV2IzZFdiR014VkRGYVZrMVdhRlppVlZwV1ZtdFdZV1ZzY0VaWGJFNVhWbXMxZVZReFdtdFZNa1Y0WVROb1YyRXhjR2hXVkVwS1pWWktkVlJ0Y0ZOaVJuQlpWbTEwWVZsV1ZrZGpSbWhPVm1zMWNGUldXa3ROUm10M1ZtNWtWV0pHY0ZaV1YzQlhWakF4V0dGSVNsZFNNMmhNVlcweFMxSldVbk5oUm1ST1RVVndTbFl4V21GV2F6VldUbFprVTJKclduQlZiR2hEVlRGU1YxWnVaR3RTYkhCSldUQldNRll5UmpaV2JHaGFUVWRvU0ZkV1drcGxWMVpJVW0xR1YwMHlhRFZYYkZaaFZUSk9jMVp1U21wU00yaFVWbXRrTkZOc1duSlpNMmhQVW14R05GWXlkRzloYXpCNlVXeGFXbFl6VWpOVmFrWlRWMGROZW1GSGNGZGlTRUpYVm10amVGSXlSa2hTV0dSWVYwaENXRlZ0TVZOTk1WWlZVMnRrVjJGNlJsaFpWVnBUVmpBeGMxTnNUbGRpUmtwRVZXcEtUMk14Y0VaaVIzQlRUVEZLZDFaWGVGTmpNV1JYVjFob1ZtRjZiRmxaYkZaM1ZqRlNWbUZJVGxkV01IQklWVEo0VDFsV1duTldhbEpYWWtkU1NGVXdaRTlUUmtweldrWk9hVkpzV1RCV2JYUnFUVmRSZVZKWWJGTmhNWEJRVmpCV1lWWldXbkpXYlVaV1VteEtXVnBWYUU5VWF6RlhVMnhrVjFZelVqTlpWRUY0VjBkV1NXRkdXbWxXUlZvMlZtdGFhMUl4V1hoVWJsSk9WbXhhY0ZsdGRFdE5WbVJ6Vm14YVQxWnNjRmhYYTFwellWWktWV0pGT1ZwaE1sRjZWRlZhV21WR1pIUmtSbVJPWVRGWk1GZFdVazlqTVZwWFYydGFUMVpyV2xoWlZFWmhUVEZyZUZkdGRGaFdNRFZKVlcweGMxVXhXa2hsUm5CWFlUSk9ORnBFUmxOak1VNXlZVVp3YkdFeGNGcFdiWEJQVVRGYVIySkdhR3BOTW1oeFZtMTRkMVpzWkhKV2JtUlhVbXR3V2xWWE5YZFhSMFY0VjI1YVYyRnJjRmhXTUZwUFpGWkdjMU5zWkU1TlZYQm9Wako0YW1WR1ZYbFVXR2hXVjBkb2FGVnROVU5VTVZKWFdrUlNUbEpzY0VoV1YzUXdWbFV4VjJORmFGWmlXRUpZVm14YVlXTXhUblZYYkhCWFRUSm5lbFp0ZUdGWlZscFhWMjVLVUZZemFIQldiWFIzVFd4YWNsa3phR3ROVlRWNVZGWmFZVlF4VGtobFJteFhUVWRTVkZaRVJsZGpiRnAxVkdzMVRsWXhTbHBYVkVKWFlUSkdSMWRzVm1obGExcFhWbXBPUTJWc1ZYbGxSWEJzVWpCc05sbFZXbmRoVmxwR1YyeEdWMUpzV25KVmFrWnJVbXM1VjJKR1pHaE5NRXBWVjFaamVFNUZNVmRYV0d4c1VucHNWMVJXYUVOTlJsWnpZVWhPVjAxclducFdNbk40Vm14YVJsZHJlRnBpUm5CVVdYcEdkMUpzY0VoaVJrNVhVbXRyZUZadGNFZGlNa1Y0VlZoc1UySnJjRTlXYTFwTFZteHNkRTVWVGxOTldFSlhWakkxYTFZeFduTlhiRnBYVW5wR1NGWlVSa3BsUms1MVdrWmtUbUp0YUZWWFZtTjRWakZaZVZOclpHaFNiSEJ3VmpCYVMxVldXbGhrUjBaVFRVUkNORmRyYUU5WlZrbDNWMjVDVjJKR1NraFVWVnBoVWpKR1JsUnNVbWxTVkZaTFZtdGpkMDFXWkhSV2JrcFBWMFZ3WVZSVlpGTldSbFYzVjJ4T2ExSlViRmRhVlZwTFZHeGFXVkZxUWxkaE1sRXdXVlJHU21WV1RuSlhhemxVVWpOb1dsWnFRbXRWTVZaSFlrWm9hazB5YUZCVmJYaExUVlpyZDFadFJtbFNhM0F4VlZkNFlWWXhXbk5UYkVKWVZteHdURlV3V2xka1ZrWnpZVWRzVTJFelFqUldNbmhoV1ZkTmVGcEZaRmRpYkVweVZXeFNjMVpHVm5Sa1JuQnNZa1pzTlZwVlpEQlhiRmwzWTBaa1ZWWnRhRlJXYkZwclVteE9jbVJHV2s1U01taFJWMWN4TkdFeFdsZFVia3BoVWpOb2NGVXdWa3RXYkZwWFYyMXdUbFpzY0VkVVZsWnJWMGRLVmxkc1ZscGlWRVV3VlZSR1UyUkhVa2xVYkZKWFlYcFZkMWRzVm10TlJscEhVMjVPYVdWcldsbFdibkJIWld4V1dFMVZXbXhXYkZwNVdWVmtiMVpHU2xaalNHaFlZa1p3VkZWWE1VOWpNVnBaV2taa2FFMXNTbGxXVnpGNlRWWk9SMVZZYUZkaGJFcFhWRlphZDAxR2NFWlZiRTVYVmxSQ05WcFZWbE5YYkZsNllVaHdWMDFXY0ZSYVJXUlhVbTFPUjFOck5XbFNXRUpYVm0xNGEwNUdiRmRUV0doWVltczFWVmxyWkZOV2JHeHlWMjFHVjFac1NsZFdNakZIVjJ4YWNrNVVSbHBoTVZwTVZrUktSbVZYVmtaalJscE9ZV3RWZDFkV1VrZFVNVWw0V2toR1YySklRbkJXYWs1dlVrWmtWMVZyZEZaTlZUVkpWVzEwYzFWdFNsbFJiazVYWVRGYVNGcFdXbUZXVmtaeldrWk9UbFp1UWtsV2EyUXdZVEZXUjFkc2JHaFNiRXBZV1d4U1JtUXhVbk5YYkVwc1lsVndSMVpITVc5aFZrbDZZVWRHVjJFeVRqUlVhMXBQWXpGS1dXSkdXbWhOTUVwWlZsZDBWMUl3TlVkV2JsSnNVbFJXY2xSV1duZGxiR3QzVm1wQ2FWSnNjRmRXYkdoelZtc3hWMWR1V2xabGEzQk1WVEJhVjJOdFNrZGFSMnhwVjBkb00xWXhXbUZXTVVsNVZHNU9hbEpXY0doVmJuQnpZMVpXY1ZGVVFrNVdiRXBYVmtkd1ExWXhTbkpqUm1SWFRXNW9XRlp0YzNoU01rWTJVbXhrVTFadVFrMVdiWEJMVW0xV2RGUnJaRkppV0doWVZteG9RMDVXV25GVGFsSm9UVmQ0V1ZWdGRHOVdiVXBJWVVoT1ZtRXhXa3hWZWtaWFkyeHNObFp0YkdsVFJVbzJWbXRrTUZReFZrZFhiR2hzVWxkNFdGUlhOVU5UUm14WFdrVjBWMkY2VmtwWGExcDNWakpLVmsxSWFGaGhNWEJZV1hwR1NtUXdPVmRoUlRsWFRVWndXbFpYTVRCa01sSkhWMWhvV2sweWFGaFVWM1IzVFVaV2RHVkhPVlZOVlc4eVdXdFdORlp0U2xsUmJsWmhWbFp3Y2xacVJuZFNNV1J5VGxVMVdGSlZiekJXYkZwaFZURk5lRlZ1VWxkaWEzQllWakJvUTFac1duUmxSWFJVVW0xNGVWWnNVa2RWTVZwMVVXdHNZVkpXVlRGV1J6RkdaV3hHZFdOR1pGTmxiRmw2Vmxod1MxSXhTWGxVYTFwb1VteHdXRlZzVm5kVlZscFlaRVprVkUxck1UUlhhMmhUVkd4YWRWRnVUbGRpVkVWNlZGWmFjMVpXVG5Sa1IyeFRUVlp3V0ZaVVNuZFpWbXhYVTJ0YWFsTklRbFpXYkZwM1pWWndWMWR1V214V1ZHeFhXa1ZhVDJGSFNsaFZWRUpYWVd0YWFGbFVSbUZqYXpGSllVZHdWRkpXY0ZSV2JYUlhaREZSZUdOR2FHdFNiSEJ6V1d0YVMxZEdXbGhrUjNSb1ZtdHdWbFp0ZEdGWFIwVjVWVmhrVjFKRlJqUlpNakZQVTFaU2MxWnRiR2xoTUhCT1ZqRmFWMWxYVVhoVWEyUlhZa1phVTFsWWNITldSbFp6Vm01a2JHSkdiRFZVVldodlYwZEtWMWRzYUZwaE1VcFlXVlZWZUdSR1ZuVlViVVpYWWtad1RWZFVSbUZoTVZsNVVtdGFVRll5ZUZSV2FrNXZVbXhaZVdSR1pFOVNiRlkwVmpJMVUyRXhUa2RYYkZaWFlrWndURlJYZUd0alZrNXlUMWQwVTJKSVFqUldWbU40VFVaa1IxTnNiRkpYUjJoWFZGWmFZVlZHV2xWUldHaFVVbXR3ZVZsVlpITldSazVHVTJzNVYySllVbFJXYWtaTFVqRmFkVlJzWkdsWFJrcFdWMWQwWVZNeVZrZFdiazVXWWxoU1ZWbHJWbk5OTVZKeldYcFdXR0pXV25sWk1GcHJWMGRHY2xOcVNtRldWbkJRV1RKNGEyTXhaSE5hUjJ4VFltdEtTbFp0TVRSVk1VbDRWbGhvVm1FeVVsVlphMlJUWWpGU1dHTkdaRlJOVmxwNVYxaHdWMkZYU2toa1JGWlZWbXh3Y2xaSGVFcGxSazV6WTBaYVRtRnNXbGxXVkVvMFVtMVdSMVJzYkdGU2JrSllWbXBHUzA1c1pITmFSRUpQVW14d1YxUnNXbUZXVjBwR1RsWm9WMkZyV2t4V1JWcGhZMnh3U1ZwR1VtaGxiRWw2VjFkMFYySXhXbGhUYkdob1UwVmFWbFpxVG05WFJteDBaVVU1YWxacldqQlVNVnBoVlRKS1JtTkdhRmRpVkVWM1ZHdGFWbVZHWkhWVmJYUlVVbXh3VmxadGVHRlRNREZ6V2toR1ZHRjZiSEpWYlhoM1pVWldXRTFVUWxoU2EzQmFWVlpvYjFack1WZFhiRUphVm5wR1RGa3ljelZXVmxwelUyMW9hVmRIYUUxV2JGSkRWVEZGZVZOdVRtRlRSa3BRVm0weFUyTnNXblJOVkVKUFlrWndXVlJzVms5aFJscFZVbTVvVjFaNlFYaFdNRnBMVW0xT1NWTnNjR2hOYkVwVlZsZHdRazVXWkVoV2EyaHBVako0V0ZsVVJuWmxWbHBWVTJwQ1dHRjZWa2RVVmxwcllWWktkR0ZHYUZkaE1WVjRXVlZhYzFkSFVrWlhiWGhYWWtWd1lWZFVRbGRaVmxKeVRWVldVMkpHY0ZkWmJGSkdUVVphUlZKcmRGUlNiRm94VlRKNFYyRkhSWHBSYXpGWVZqTlNWMVJXVlRGak1WSjFWVzFvVTAxR2NGVldSbHBYVmpBd2VGZHJhR3RTYXpWVFZGZDBkMU5HYTNkaFJrNVlVbTFTU1ZwVlpFZFpWbHAwVlZoa1dtSllhRE5XTVdSTFVteFNkR1ZIYkZkaE1XdDRWakZrTUZVeFJYaGFTRXBPVjBaS2FGVXdXbmRXVm14VlVtNUtUbEpzU2xoV01qVlBWMFpLYzJOR1dsZFNla1pJV1ZWa1JtUXhXbkZXYkdSVFlsZG5lbFpYTVhwa01sRjNUVlprVjJKRk5YQldNR1J2VlZaYVdHUkhkRlpOYXpWNlZsYzFSMVpIUlhwVmJrSldZa1pLVjFSWGVGWmxWVEZZVDFad1YyRXlkekJXVjNodllURmFXRkpZYUZSaE1VcGhXVlJHZDAweGNFWlhiWFJZVmpCd1NGa3daRFJXTURCNFUycEdWMDF1YUhaWmVrWkdaVlpLZFZSdGJGTmlXR2hYVjFkNGIySXhUWGhXYkZaVVlrVTFWbFp0ZUdGbGJGbDVUbFYwYUZZd1ZqVmFWVlpoVjIxR2NtTklTbHBXZWtaTVZtcEdhMWRXY0VoU2JFNXBWakpvVGxZeWRHRldNazE0VTJ0a1YySnJXbE5aYkdSdlZrWlNXRTVYTlU1aVJuQkhWako0UzFSc1duSmpTSEJYVm5wV1RGWnRlR3RUUjBaSFVtMUdWMkpHY0UxWFZFWmhZVEZaZVZKcldsQldNbmhVVm1wT2IxSnNXWGxrUjBaVlRWWldORll5TlV0WFIwcElWV3hrV21FeGNETldWVnBoWXpGa2NrNVhkRTVXYmtJMlYxUkNWMDFIU2tkWGJGcFhWMGQ0VjFSV1dtRmtiRlkyVTJ0MFZGSnNXbmxaYTFwcllWZEtXV0ZJWkZoV2JIQllWV3BLVDJNeVRrWlhiVVpUWlcxNGVGWlhjRUpOUlRGWFZXeGFWV0ZyU2xsV2JGSkhVMFpaZVdWRlRsZGlWVlkwVlRKME1GWlhSbkpUYm5CV1RVWndWRnBGWkVkVFIwNUdUbGRzVTJKSVFYaFdiRkpMWkRGRmVWTllhRmRoTWxKWFdXdGFkMWRHYkZWVWJUbFhVbXh3TUZSV1VrTmhNVnB5VGxaa1YxWjZWbWhYVmxWNFkyczFWVkZzWkdsWFJVcEZWMVpTUjJFeFNuUlVhMVpUWWtaS1dGWnNVbGRsUm1SWVRWaHdUMVpVVmxoVmJUVkhZVlpLV1ZGc1ZsWmhNVnBNV2taYVdtVlZNVVZTYkdST1lrVndXVmRXVWs5a01WcDBVMjVLVkdKclNsWldhazVEVmtac2RHVkhkRk5XYXpVd1drVmtjMVV3TVVsUldHUlhZbFJCZUZsNlJtdGpNWEJHV2taU2FXRjZWbHBXVjNSV1RWWlNSMkpHV21GU1dGSnlWVzE0WVUxV1dYbE5XRTVYVFd0YU1GcEljRXRYUjBWNFYyNWFWbVZyY0ZCVk1GcFBaRlpXYzJORk5XaGlXR2hPVm14amVHUXlTWGROU0doV1lrWndWMWxZY0ZkVU1WWjBUVlJPVG1KR1dsbFVWbU0xVjBkS1ZsZHVjRmRpUjJoeVZteGFZVTVzU25Ka1JsWlhWbXhaTUZadGVHRldNVnBYVW01S1VGWnRVbFJXYTFaS1RXeGFjbFZyVGxaTlZrcDVWRlpvUzFReFdsaGhSbEpYWVRGYVRGWlZXbGRqYkhCSlkwZDRWMkpGY0ZoV2JHUXdaREpGZDAxVlZsTmhNWEJXVm14a2IyUnNXa2hsUlZwc1lraENTVlJzV2xOaFJURllZek5vV0ZZemFGZFVWbVJUVWpGYWRWVnRlRk5XUmxwVlZsZDRVMUpyTVhOWGEyaHFVbGhTV0Zsc1drZE9SbXh5VjJ4a1YwMXJjRmxaVldSdlZtMUdjbEpxVWxWaE1YQnlXVEo0ZDFKdFVraGlSbVJwVjBaRmVGWnRlR0ZWTVVsNFlrWmtXR0V5VW05YVYzUkxWbXhzYzJGRlRsSk5XRUpHVlcwMWEyRnNXbk5UYkZwV1RXcEdTRlpVUmt0U2JFNXhVbXhrVjJKSVFsbFdXSEJIVXpGSmVGUnVTbGhpUjFKdlZGZDRTMVpXV2tkV2JYUnBUVlV4TkZac2FITmhNVXBHVTJ4YVYySllhRXhXYWtaVFl6RmtjbFJzWkdsU1dFSTFWbXBLTkZVeFdYaFhhMXBZWWtaS1dGbHNhRzloUm13MlVtNWtVMDFyY0VoWlZWcHJZVmRGZDJORVNsZGhhMXB4V2xWYVVtVldTbGxoUjNCVFlsZG9XbGRYZUZOV01rbDRWbTVHVkdGc1NuTlZiVEUwVm14VmVXTkdUbWhOVld3eldUQlNRMVpWTVZoaFNFcGFWak5vY2xWdE1VOVNWbVIwVW14T1YwMXRhRnBXYTFwcVpVWldkRlp1VWxOaE1WcFlXV3hvYjJJeGJGVlJiSEJPVW14d1NGZHJhR3RXVjBZMlVtdGtWV0pHY0ZoV01GcGhVbXMxVjFKc1dtaE5iRVl6VmtaU1IxVXhXWGhXYmtwcVVqTm9iMXBYZUdGU01WcDBaVVpPVkUxV1JqVldiVFZUVjIxV2NsZHNWbHBpVkVVd1dsWmFhMk5XVG5OYVJUbFhZVEZ3V2xkclZtRmpNa3BJVTJ4a1ZHSnVRbGhWYTFaaFkyeFplV016Wkd4U01IQktWbGQ0VjFZeFNsbFJiRVpYWWxoU2FGVnFRVEZXTVZaeldrWmFhVlpIZUhaWFYzUnZVVEZhYzFkdVRsWmlSMUpXVkZkNFlVMUdXbGhOUkZaWFZqQndXbFZYZERCV1ZscHpWbGhrWVZac2NISldNVnAzVW1zMVYxUnNUbGROTWxFeVZtMXdSMkV5VVhoVFdHeFRZa1p3Y0ZWc1dtRlVNVlp4VTJ4T1ZWSnVRbGhYYTFVeFZHc3hWazVXWkZkU00yaFFWMVprUjA1c1JuRldiR1JPVm10d1JWWnJVa2RUYlZGNVZHdHNWV0pIYUhCVmJYUjNWMVprVjFadFJtdE5WVFZJVmpJMVUySkdTbFZpUm1oV1lXczFVMXBYZUdGVFIxWklaRVp3VjAxSVFraFdSbHB2VWpGc1YxTnFXbE5pUlVwWVdWUkdkMDB4YkRaU2JYUnJVbFJHVjFrd1ZURldNa3B5VTJ4a1YyRnJXbFJWYWtaVFpFWmFkVk5zWkdsV1JscFlWbGN4ZWsxV1NrZGpSbWhPVm1zMVZWWnRjekZOVmxwSVRWVmtWMDFzV25wVk1uQkxWbXN4ZFZWdFJsVmlSMUpNVm0xek1WZFdWbk5YYld4WVVqSm9VVlpzWkRCV2JWWkdUbGhPVm1KcldsVlphMXAzWTJ4U1YxcEVVbGRpUm5Bd1ZGWmpOVmRzV25KaVJFNVZWbXhLVkZZd1pFWmxWbFp5WlVad2FWSnVRalZYYkZwaFZqRmFWMU51VWxOaVIxSlVXV3hvVDAweFduSlpNMmhyVFZWYU1GWldhRzloYkU1R1YyeGFWMkV4V2pOWlZWcFhWbFpPZFdORk5VNVdWRlpZVmpKMFUxVXlSbk5UV0dST1ZrWndXRlp0TVU1TlZsWTJVbXQwYWxZd1drWldWM2hYWVZaYVJsZHNRbGhpUm5CWFdsVmtVMUl4VG5OV2JFcHBVMFZLZGxkWGVHOVZhekZIVjJ0a1ZtRXpVbFpaYkZwSFRURlJlRlp0T1ZaTmEzQmFXVlZrYjFkc1dqWlNXR1JWWWxob1ZGWXhaRTlUVmxKMFlVWmtWMUpzY0ZoV01XUXdZVEpKZUZwSVNrNVhSVFZZVmpCb1ExWnNiRlZUYkU1WFVtMTRWMVl5TlU5aGJFbDRVbXBXV0dFeFdYZFdWRXBIWkVad1JWVnNaRTVpYldoVlYxY3dlRll4V25KTlZscG9VbXhLV0ZWdGRIZFZiRnAwWTBWa1UwMUVWa2hXVjNocldWWktkVkZ1VGxkaVZGWkVWbTE0Vm1WVk1WbFViRlpPVm01Q1NGWnRNWGRWTVZwWVVtNUthbEpyTlZaV2FrNVBUa1paZDFkck9XdFNNRnBJVlZkNGExVXhXbk5YV0hCWFlURndhRlpVU2tabFZrNXlWMnM1VjJKRmNIWldSbU40VlRGV2MxZHNWbEpoTTFKeFZGWm9RMVl4YkZaV2F6bG9ZWHBHZVZsclVsZFdNVm8yVWxSQ1YxSldjRWRhVmxwVFpFVTFWMVZ0YkdsWFIxRXlWbXBLZDFNeFRYaGFSV2hVWVRKb2NWVnFUa05qUmxweVdrUkNUazFYVWxoV01qRjNZa1pKZDJORlpHRlNWbHBVV1ZWVmQyUXhUbk5TYlVaWFlrWndTVmRVU2pSaE1VcFhWRzVLVDFaVWJGUldhMVpoVGtaYWMxa3phR2xOVmtZMFZqSjBZV0ZGTUhwUmJHeFhZV3MxUkZaRlduTmpiRnBWVm14a1YySklRWGRXUmxwV1RWZEdTRkpZYkd0U1JuQllWV3RXWVdOc1dsaGpNMmhxVFdzMVIxWnRlRXRYUmtsNllVWkdXRlp0VGpSVWEyUlRVakZXV1ZwR1dtaE5TRUo2VjFab2QxWXlWa2RhUmxaVllsUnNWVmxyVm5kU2JGWllUVVJHVjFKVVJrbFdWekZ2VjIxV2NtTkZkR0ZXYkhCTVdURmFSMk50VmtkWGF6VlRWbTVCTVZadGNFTmlNbEY0VjFoc1ZHRXhjRkZXYkZwaFZsWlpkMXBHVGxwV2JYaFpWRlprZDFSc1duUlZibXhYVmpOU2FGbHJXa3RrVmtaMVlVWmFUbUZyVlhkV2EyTjRVekZhZEZKWWNHaFNiRnBZV1d0V2QxTkdXa2RWYTJSclRWVndXRmRyV25OaFJrcDFVVzVDVjJKR2NGZGFWVnBoVWpGa2MxUnNXbWxXYkhCSVZrZDBiMk14V1hoWGExcFlZVE5TVjFaclZURlZSbXgwWlVVMWEwMVdTakJVTVdSelZqQXhTVkZyY0ZkU1JWcHlXV3BLUm1WR1NsbGlSM1JUWld4YVZsZFdVa2RqYXpGSFkwWmFWMVpGV25KVmJYaExWMnhzY2xaVVJtaFdiSEJZVm0xd1QxWXdNVmhWYWs1YVRXcEdXRlZ0YzNoVFYwcEhWbXhvVTAxVmNGTldiR1IzVVRGc1dGUllhR0ZUUmtweFZUQldkMk14YkZsalJWcE9Za2Q0ZVZkcmFFOVdWVEZYWTBWc1lWWlhUVEZXTUZwaFVtMU9SMXBHVmxkU1ZWWTBWbFJDWVZZeVVraFNhMlJxVWpKb1dGWnNXblpOUmxwVlVteGtWazFWY0RCV1ZtaHJWR3hhVjFkc1RsZE5SMUpVVmtSR1YxWldUblZqUlRWT1ZsUldXRll4VWs5aU1WSnpVMjVTWVZKR2NGaFZibkJYWld4WmVXVkhSazlpUm5BeFZUSjRVMVJzU2xWV2JGWlhUV3BGTUZsNlFURmpNa2w2WTBkc1UxWkhlRlZXUmxaaFZqQTFSMWRyWkdGVFIxSnZWRmQwWVZZeFVsZGhSazVYVFZad1NGWXllRU5XTWtaeVYyNXdWV0pHY0ZSV01HUlBVMGRPUms5V1pHbGhNSEJJVm0xd1NtVkZNVWRWYms1VVlURndiMVJVU2pSV2JGSlhXa1pPV2xac1NubFdiR2h2VlRGYWMxTnNXbFpOYmsweFdXdGtSbVZHWkhGVWJHUlRVbFJXTmxaV1VrdFRNV1JIVkd4c2FsSnNTbGhVVjNoTFZHeGFWMVZyWkZSTmEzQllWMnRhVjFaSFJYcFJhemxhVjBoQ1dGUlZXbUZXTVZaeVdrWndWMDFHY0RWWFZtaDNVakZrUjFwRmJGSmliWGhXV1d0YVZtVkdXbk5hUlZwc1lraENTRlZYZUU5Vk1rcHlVMnBPVjJGclduWmFSRVpTWlZaT2NsZHJPVmRpUm5CMlZsZHdUMUV4VVhoWGJrWlRZbXMxVDFSV1drdE5WbXQzWVVVNWFGWnNjRlpXYlRWdlZqRktkRlZ1U2xkV2JIQlhXa1JHUzJOV1VuTldhelZPWW0xb1JWWXhXbE5TTWtsM1RsaE9VMkpIZUdoVmJGSlhZekZzY2xadVpHeFNiSEJJVm0weE1GVXdNWEpYYkdSVllrWndXRlp0ZUd0VFIxWklVbXh3VjAweWFFbFdSM1JoVlRKT2MxWnVUbFJoZWxaWVZtdFdWbVZXV1hoaFNHUldUVlpLTUZadE5VOWhSVEI1Vld4c1YySllhRXhXVkVaVFZteGFWVlpzWkZkaVZrcGhWakowVmsxWFJraFNXR1JZVjBoQ1YxUldXbUZWTVZKV1YyNWFhMDFyTlVkWGExcERWakF3ZDFOdGFGaFdiVkV3V1RJeFYxWXhjRWxUYkZwcFVqRktkMVp0ZUZOU01sWkhZa2hLWVZOSFVsZFZiWGgzVTFac05sUnRPVmRXVkVaWVZUSjBUMVpYUlhoV1dHaGhVbFp3VUZwRlpFOVNhelZXVGxkc1UySkdhM2RXYlhSVFVUSkZlRlZ1VWxkaE1sSnhWVEJXWVZVeFduSldWRVpXVm14d2VGVnROVXRpUmxwelUyeHdXazFIYUROWFZsVjRVMVpHY21GR1ZrNVdNVWw2Vm1wSmVGSXlUWGxTV0hCcFVtMW9iMVJXVm5kWFZtUllaVVphYkZJd05WbFZNblJ2WVd4S2NsTnNhRlpoYXpWUVZHdGFZVkpXU25OVWJFcG9aV3hhU0ZaSGVHOVZNVnBJVTJ4c1VtRjZiRlpXYWs1dlZqRndWbGRzU210TldFSkhWR3hrTkZVeVNuSlRhbEpYVm14d1ZGWkVSbGRTTVdSWllVZG9UazF1YUZkV2FrSnJUa1UxYzJFemJHdFNSVXBZVlcxMFlXVkdaSEpXYm1SV1lYcEdWMWt3YUZOV01VbDZVV3Q0VjJKWVRYaFdha3BQVTFaS2RGSnNUazVpYldodlZqSjRhMDVIVG5SV2EyUldZbXR3VjFsVVRrTmpNVlp6Vlc1T1ZGWnNjRWxVVmxKVFZsVXhWMk5GYkZwbGF6VXpWbXhrUjJOdFRrWmFSbFpYVFRBME1GZFVSbUZaVmxwWFZXNVNVMkpYYUc5VVZWcHpUbXhhY2xkdGRHdE5WVlkxVlcxNFlWUnNXblJoUmxaWFlXdHdWRlpIZUhOWFIwNUdWRzFzYVZKVVZqVldha1pUVmpKR1YxZHNWbGRoYTBwWVZtNXdSazFHV2tobFJYUlRZWHBHVmxZeWVGZGhSMFY2VVd4b1dHRXhTa2haZWtaaFZqRmtkVlZ0YUZOTlJuQlZWa1pXVTFKck1VZFhXR3hyVWpOU1ZWUlhkSGRYUm14VlZHNU9WMkpHY0VkV01qRnZWakpGZUdOSWJGVldWbkJVV2tWa1QxSnNUblJrUlRWWVVsVnZNRlp0ZEdGVk1VMTRZa1prVldFeWVGZFpWM1JMWVVaV2MxZHVTazVXYmtKWVZqSTFUMWRHU2xWV2JHeGhVbFpaTUZaVVJrdFdiR1J4VjJ4YVRsWnNjRkZXYkZKSFpESk9jazFWYkdsU2JXaFlWV3hXZDFWV1dsaGpSVTVyVFdzeE5GZHJhRTlXYlVwSVZXMDVWbUpVVmtSVk1WcGhaRVV4VlZWc1ZrNVdia0pLVjJ0V1UxUXhXbGhUYTJoV1lsZG9ZVmxVUmxkT1JtdDRWMjVrVkZKVVJsZFVNVnByVlRKS2NsTnFXbGRoYTJ3eldsVmFUMk5yTVZkYVIzQlRZa1p3V2xadGRGZFpWbEY0WTBab2ExSnRVbkJaYTFwTFUwWmFTR1JGZEdsU2EzQmFWbGQ0ZDFaV1dsZFRia3BXVFc1b1VGVnNXa2RrUlRWWFkwVTFhR0V4Y0ZwV2ExcFhZVEZWZUZwR1pGVmliRnBZV1ZST1ExVXhVbGRXYm1SclVteHdTVmt3VmpCV01rWTJWbXhvV2sxSGFFaFhWbHBLWlZkV1NGSnRSbGROTW1nMVYyeFdZVlV5VG5OV2JrcHFVak5vVkZaclpEUlRiRnB5V1ROb1QxSnNSalJXTW5SdllXc3dlbEZzV2xwV00xSXpWV3BHVTFkSFRYcGhSM0JYWWtoQ1YxWnJZM2hTTWtaSVVsaGtXRmRJUWxoVmJURlRUVEZXVlZOclpGZGhla1pZV1ZWYVUxWXhTWGhUYTNoWFZrVktWRlZVU2t0ak1YQkpWV3M1VjJKV1NubFdiVEI0VFVVMWMxZHNhRTlXVlRWdlZteFNSMlZHV2xoTlJFWllVbXR3UjFrd1dtOVpWa3B6WTBoc1lWWXphRkJaTVZwaFpFZE9SMVZzVG1oTlZ6azFWbXhTUzAxR1pISk9WVnBQVm14d1VGWnNXbUZXTVZsM1drUlNXbFp1UWxsVVZscFBZVlV4VjFOc1pGaGhNWEF6V1d0a1IwNXNTbFZUYkhCWFVsUldNbFl4V21GVE1VNUlVbXRzVTJKR1dsaFdiWFIzVlVaa2MxWnNXazVXYTNCWlZXeG9kMkZzU25WUmF6bGFZVEpSZWxSWGVHRlNNV1J6Vkd4U1RtRXhjRmhXUjNoaFlqRmFjMWRyWkZSaVJVcG9WbTB4YjJOc2JIUmxSVGxxWWtkU1ZsWlhjekZXTWtwWllVWndWMkpZYUZSV1JFWnpWMFpLZFZOc1RsaFNNMmhYVm1wQ2IxRXhTWGhWYkZaU1YwZG9XRlp0ZEhkTlJuQldWbFJXVmsxVmJEUlZNalZ6VmpGSmVsRnJlRlpsYTNCTVZXMXpNVlpXWkhOVmJXeFhUVzFvZGxac1pIZFNNVXAwVlZob1ZtSnJjRmRaVkVFeFkwWldkRTVWVGs1U2JHdzBXVlZvVDFkSFNsZFhibWhXVm5wV1dGWnRNVmRqYkU1ellVWmtUbUpzU1hwV1IzaHJVbTFXVjJORmFHeFNNMmhZVm14YWQwNVdXWGxrUm1Sb1RXdHNOVlpIZEc5V1YwWnpWMnM1VmxaRk5WUldNbmhUVjBkT05sSnRkR2xTTVVvMlZqSjBWazVYUm5SVGEyaGhVa1p3V0ZWdWNFWk5SbGw1WXpOa2JGSnRVbmhXYlhodllWWktWVlpxUmxoV1JVcFhWR3hWTVZZeFNuTmhSM1JUWWxob2VsZFhkRzlSTURGSFYxaG9ZVk5IVWxkWldIQkRUVEZTVjFWdFJsZE5hM0JhVmxkNFIxWXlSWGxWYkZKYVlXdGFWRlpzV2s5amJWSklZVVUxVTFJemFGaFdiWFJoWWpKRmVHSkdaRlJoTWxKWVZqQm9RMWRXYkhKWGEzUnNZa2Q0V1ZwVmFHdFZNVnB5VGxaYVYxSjZSa2haVldSR1pWZFNObE5zWkZObGExbDZWMWh3UzFNeFNuUlRhMXBYWVhwV1ZGUlhlRXRVVmxwVlVXMUdWRTFzU25wWmExcHJZVVpLVlZadVNsWmlXRkpNV2xkNFVtVkdiRFpTYkhCWFlrYzRlVlp0TURGVU1XUnlUVmhHVTJFeWFGWldiRnAzVFRGYWNWRlVWbGhXTUhCSVdUQmFhMkpIU2tkalJGWlhUVmRTTTFVeU1WZFNNazVKVld4V1dGTkZTbGhYVnpCNFRrZEplRmR1Vm1wU2JWSnlWbTF6ZUUweFdsaGpla1pvWWtWd1ZsbFljRWRXYkZwMFZWaGtWMDFYVWxoYVJWcFhaRlpXYzFadGJGTmhNMEpHVmpGYVUxSXlUWGRPV0U1VFlrWmFVMWxZY0ZkV1JsSlhWMnh3YkdKR2NFbGFWVnBQWVVkR05sSnJaRlZXYkZwMlZtMTRZVkpyTlZoU2JIQnBVbXhXTkZkVVFtRlZNV1JHVFZaYVQxWlVWazlXYWs1dVpERmFXR1ZHVGxOTlZrb3dWVEo0WVdGc1NqWmlSbXhYWVdzMVJGWlVSbE5YUjFKSlZHeE9WMVpGV2twV01uUlhUVVphUjFOdVNtcFNSWEJaVm0xNGQyUnNXa2hOVms1VFRWVmFNVlpIZUVOV01sWnpWMjA1VjJGclNtaFZla3BMVmpKS1IxWnNVbWxTTVVwUlZtMTRiMVV4U2xkWGJHaE9WakJhVmxSV1duTk5NVmw1VGxVNVYxWXdXbmxaTUdSSFdWWktSbEpZYUZwTlZuQlVWakZrUjFKck9WaGxSMmhPVm0xME0xWnRjRXRPUmxWNFZtNUtUbE5IYUhGVmJGcGhZVVpXY1ZOcVVtaFNiSEI1VjJ0Vk5WUXhXblJWYkdoWVlURndVRmxWVlhoU1ZscHlWMnhrVjJKWGFIbFdNVnBoVjIxV1NGUnJiRlppUmxwWVdsZDBZVlZHWkZWUmJGcFBWbFJXV0ZWdGVHOWhNVXAwWlVoT1dtSkdjRXhVVlZwaFUwZFdSMVJzU2s1aE1Wa3dWMWQwVTFsV1ZuTlhhMXBVWVhwc1YxbFhkR0ZYUmxKVlVteE9hazFXV2pCWk1GVXhWVEZhUmxkcmNGZGlSbkJVVmtSR2EyUkdUbk5YYXpsWVVsVndWMVp0TlhkU01WRjRWV3hXVTJKck5YSlZiWFIzVm14V2RHTjZSbWhXYkhCYVZWYzFZVll3TVZoVmFrNVhWak5PTkZreU1VdFNiRnB5VGxaT1RtSkZjRTVXYkdONFpESktkRlpzWkdGVFJrcFBWbXhvUTFReFZuTlZiRnBPWWtad1NGWlhkR3RYYkZweVkwVnNXbVZyTlROV01GcGhZekZPYzFGc2NGZGlTRUY2VmxkNGExSnRWblJVYTFwUFZtczFUMVpzV2xwTlJscHlXa2hrVkUxV2NIbFViRnByWVVVd2VXVkdaRmROUjFFd1ZsVmFVMWRIVmtsVWF6bFhZa1Z3WVZkVVFtRmtNVkY0VjI1V1VtSkdXbGRXYlRGdlYwWlZlV1ZGV214U2F6VXdWRlphVjJGSFJYcFJiV2hYVW14d1YxcFZXazlTTVZwMVZXMXdVMVpHV2xWV1Z6RXdWMjFXYzFkWWJHeFNhelZUV1Zod1IxWXhVbk5WYlVaWFlrZFNTVlpYTVc5V2JVVjVWV3hTV2sxR2NISldiRnBQWTIxT1NHVkdaR2xYUjA0MVZtcEtNR0V5VFhoYVNFNVlZVEpTV0ZsWGVHRlhWbHAxWTBWa1ZGSnRlRmhXYkZKSFZURmFkRlZzV2xoaE1Wb3pWbFJCZUdSWFJrVlJiRnBzWVRCd1VWWnNVa0psUms1SFUyNUthRkl5ZUZWVk1GWkxWREZhZEdSR1RsZE5WbXcwVmpKNFYxVnRTa2hWYldoYVlURndURlpxUm1GVFIxWkdUMVpvVTJKSVFqVldWRW8wV1ZaYVJrMVdXazlXVmtwV1dWZDBTMlZzVm5KWGJHUnJVbTFTZWxrd1dtdFZNVmw2VlZSS1YyRnJiM2RaVkVaWFpFWldXVnBHUWxkaVYyaFhWMWQ0YjFFeFZrZFhia3BoVWpOQ2MxVnRlRXRsVm1SeVZtMTBhRkl3V1RKWmExWnpWbXN4V0dGSWNGZFNSVnBMV2xWYVlWZFdjRWRoUjJ4VFRWVndUVlpyV2xOUmF6RlhWMnhrVldKR1dsUlphMVpMVjBaV2RHVklaR3hTYkhCSldrVmFUMVpYU2toUFZGSldWak5vVkZaWE1VdGpNVTUwVW14V1YxSlZiM2xXUmxwaFkyMVJlVkpyWkZWaVZWcHdWbXhvUTFkc1drVlNiWFJPVWpCV05GWXhhSGRoUms1R1RsWnNWbUV4V25sVVZscDNVbFpLZFZwR2FGTldSbHBLVmtSR1YwMUdXa2RUYmtwcVVrVndXVlp0ZUhka2JGcElUVlpPVTAxVldqRlZNbmhQWVVkV2NsZHNWbGRTYkZwVVdYcEdZVkl4V2xsaFJtaHBVbFJXVmxadE1UUlRNVnBYWTBWV1ZHSllVbFZVVjNoaFYxWmFTRTVZWkZkU2JIQlhWR3hvUzFkdFJYaGpTR3hoVm14d1VGWXdWVEZXYXpGWFUyczFVMVp0T1RSV2JGSktUVmROZVZSdVNrOVRSMUp3Vld4YVMxWXhiSE5YYm1SV1ZteGFlVll5Tld0aGJVcElWV3h3V2sxR2NETldSRVpMVmxaYWNWRnNXazVXTW1kNlZteFdZVmR0VmtoVWEyeFdZa1phV0ZSVVFrdGhSbVJ6V2tSU2EwMXNTa2hXVnpWVFlXeEtWV0pGT1ZwV1JWb3pXbFphV21WR1pITlViRkpvWld0YU5WWkdXbUZXTVdSeVRVaHNhRkl3V2xoWlYzUmhZVVp3Umxkc1NteFNiRnA2VlRJeFIxUnNXbFpqUmxwWFZtMU5lRlpVUm10amF6RkpXa2RzYkdFeGNHaFdSbFpyWWpGYVIxcElVbXhUUlhCeldXdFZNVTFHY0ZaWGJtUllVbXR3ZVZrd2FIZFdNREZIVTJ0NFdtVnJSalJaTWpGTFVteFdkR0ZHVWxOaE0wSnZWbXRhVTFFeVVuSk5WbVJvVFRKU2IxVnRjekZoUm14eVlVVk9XRlpzU25wWGEyaHJWMFphVlZKcVFsZFdlbFpRVjFaYVMxWXlSalpTYkhCT1VqRktWVmRZY0VKT1ZtUllWR3RvYUZKdGFGVlZiRlozVG14YVdXTkZUbFZOVmxZMFdUQm9UMkZXU25OWGJGWlhZVEZWZUZsVldsZGpWa3B5V2tVMVRsWnJXVEJXTW5SV1RsZEdTRkpxV2xkaVJuQlpXVzAxUTFOR1drVlNhM0JyVFZkU01WVnRlRmRVYkVsNFUydDRXR0pHY0ZkVVZscFBVakZrYzFac1NtbFdWbkJaVmtaV2EwMUZOWE5YYTJoc1VtczFWVmxZY0VkV01WRjRWMnhrVjAxcmNGcFZWM2hEVm0xRmVGWnFVbUZTUlZwVVZXMTRVMk5zVW5OV2JXeFRWbXhyZDFac1VrdE9SMUY0VjI1T1ZHSnJOVlZaYkZKSFYwWmFjVlJzVGxSU2JIQkdWVzEwTUZVeFNYZFhWRXBZWVRGYU0xWlhjM2hXYlU1SlZXeGtVMDB3U2sxV2FrcDZaVVphY2sxV1dtaFNiSEJ3VmpCV1MxVkdXbGhrUjBaVFRVUkNORmRyYUU5V2JVVjNZMFU1VjJKR1NsZFVWM2hoVmpKR1NHUkdjRmRoTTBKS1ZteGpNVkV4WkVkWGExcHFVbGhTYUZadGVIZGxiRkowWlVoa1ZGSXdjRWhaTUZwclZUSktSMkV6YUZkaGExcHhXbFZhU21WV1NuTlhhemxYVm14d1dsWnRjRXRWTVZaelYyeFdVbUV6VWxCWmEyaERVMFprY2xacVFtbFNNSEJZVlRKMGQxWnJNVmhVVkVaV1pXdGFURmt4V25abGJVNUhZVWRzV0ZKVmNGbFdNblJUVWpKUmVGUnJaRlppUjNob1ZXeFNjMVpHVm5OV2JtUnNZa1p3U0ZadGVFOVdNa1kyVVdwT1ZXSkdXbGhXVnpGTFYxWldjMUZzVmxkTk1VbDZWMVJHWVdFeFpFaFVhMXByVWpKb2IxcFhlRXBOVmxwVlUxaG9hVTFXUmpSV01uUmhZV3hPUmxOc2JGZGlWRVpVVlhwR1UxWnNXbFZTYlhCVFRWVlpNVll5ZEZaTlZsWnlUVWhzVm1Kc1dsbFdhazV2WTJ4YVJWTnNaRmhTYkhCNldXdGFTMkZIUlhkalIwWlhVbTFSTUZkV1ZYaFdNWEJIVm14T1YxSnNjSGRYVjNSdlVURmtjMWRzYUU1V01GcHZWV3hTUjJWc1dYaFZhMlJZVW10d1IxUnNXa05YYXpGSVZXeG9ZVkpXY0doV01GVTFWbTFTUjFSdGFHbFhSMmQ1Vm0xMFlXRXlVWGxTV0d4VFYwZG9jVlZzV21GVk1WcHlWMjFHV2xac1NsbFplazVyWWtaS2MxSnFUbGRXTTJob1ZrZDRTMlJIVmtkaVJtUlRZa1Z3VlZacVNYaFNNazUwVWxod1lWSnRhSEJWYlhSM1ZsWmtXR1JIUm1wTmF6VllXV3RTWVZVeVJqWldiVGxhWVRGd1YxcFZXbUZUUjFaSVpFWldhR1ZyV2toV1JscFRWakpHUmsxSVpGUmlSVnBvVm0xNFlWUkdVbFpYYlhSWFZteEtlVnBGVlRWV01ERkZWbXQwVjJKSFRqUlhWbHB6Vm1zeFdWUnNhR2hoTVhCYVYxZDBhMkl4VWtkaE0yUllZbXR3YzFWc1VuTlhiRlpZVFZoT2FGWnNiRFpYYTFKUFZtMVdjbE5zUWxkV1JWb3pXWHBLUzFJeFduTlZiR1JUVmtaYWRsWnNaSGRTTVVsM1RVaG9WbGRIYUdoVmJGSnpZakZzV1dOR1pGZGlSMUl4V1RCV2ExWlZNVlppUkU1WFRXcFdTRlpzVlhoVFJsWnlaRWRHVjJKR1ZqUldWRUpoV1ZaYVYxSnVVbE5pUjFKUFZXcE9VazFzV25KYVJGSldUVlUxZVZSV1dtRlZSbHB6VjJ4b1dtSkhhRVJXVlZwWFkyeGFXV0ZIZUdsU1ZGWllWbXRrTkZReGJGaFNhbHBXWVd4YVdGUldXa3RUUmxwSVpVVndiRkpyTlRGVmJYaFhWakZhY21OR1VsaGhNVXBJV2tSR1lWWXhTbk5XYkU1b1pXMTRlbGRYZEZkWGJWWnpWMWhzYTFKck5XOVVWM1JoVjBac1ZWUnVUbGRTYlZKSldsVmtSMWxXV2paU2JGSmFUVVp3Y2xacVJsZGpNV1IwWlVaa2FWZEhaRE5XYkdOM1pVZE5lRlZZYUZSaE1sSndWVEJvUTFaV1duTldWRVpYVW0xU01Ga3pjRmRWTVZwMFZXcENZVkpXY0ROWmEyUkxVMGROZWxwR1pGTmxhMGt3VmxSSmVGWXlUbkpQVm1Sb1VtMW9jRlpyVm1GVlJtUlhXa1JTYWsxRVZucFhhMmhUVkd4YVZXSkhPVnBYU0VKVVZHeGFWMlJGTVZWUmJHaHBVbTVDU0ZkV1VrOWpNVnBYVjI1T1ZHSnJXbWhXYkZwM1pXeFpkMWR0Um10U1ZFWllWVmQ0YTFVeVJYaGlNM0JYWVRGS1VGbDZSa2RrUmtwWllVZEdUazF1YUZwV2FrSnZVVEZSZUZadVNtRlNWRlp5VkZaYVMyVnNXbGhOUkVaVllYcEdSbFZ0ZEdGWGJHUkpVV3RTVjFKNlJsaGFSVnBUVjFkT1IxWnNaRmRoTTBFeFZtdGFWMWxYVVhoYVJXUlZZa1phV0ZsclZrdFhSbEpXVjJ4d1RsSnNiRFZhUlZwUFZqSkdObFpzWkZWaVJrcG9WMVprVjJOc1RuSlBWbVJvVFd4S01sZFhjRWRVTVZwelZteHNZVkl3V2s5WlZFNURWMnhhY2xsNlJtcE5hM0JJVjJ0V1lWWkdaRWhWYkd4V1lURmFNMWt5ZUhOamJIQkdaRWQwVTJKSVFYaFhWM1JyWWpGWmQwMVZWbE5oYTNCWFZGYzFVMWxXVW5OYVJXUlRZWHBHV2xWdE1VZFZNREI0VTIwNVYxWXpVbGhWYlhONFZqRndSMVpzVW1obGJGcFFWbTE0VTJNeFNuTlhiazVXWVRBMVdWbHJXbk5OTVZKV1ZXdE9XRkpzYkRaVlYzUXdWbFphVjJORVRsZGlSbkJZV2tWa1YxSXlUa2hoUjJ4WFZrVlZkMVp0ZEdGaE1sRjRWMjVLVDFac2NGQldiVEZ2Vm14YWNsWnJkRlZOV0VKWVdWVmtNR0ZYU2toa2VrcFdUVzVvY2xscldscGtNV1J6WWtaYWFWWkdXbEZYVmxaaFlURk9WMUp1VmxWaVJrcFBWV3hTVjFaV1dYbE5XSEJQVm14d1dGWnRlRmRWYlVZMlZtNUNWMkpHU2tSVWJYaGFaVVprYzFSc1NrNWhNMEpZVmtaYVUxbFdXbGRYYTJSWVlYcHNXRmxYZEdGU01WSldWMjEwV0ZZd05VZFZNakUwWVVkV2NsZHNaRmRpUm5CVVZtcEdVMk5yTVZsVGF6bFlVbXR3VjFacVFtOVJNVWw0WTBaa1dHSnJOWEZXYlhoM1RVWndSbGRyVGxaTlZXd3pWR3hTVDFadFZuSlhiRkpoVmpOb01scFdXazlqTWtaSFZtMXNhVmRIYURaV2JYQkRWakZPZEZWWWFHRlNWbHBWV1d4b1UyTkdWbkZSYm1ST1VteHdNRlJzYUU5aFJrcHpZa1JPVldKSFRqUldNR1JHWlZaV2MyRkdjRTVTTVVwTlYydFdhMU14U2xkU2JrcHNVbXR3VDFac2FFTk5SbHB4VW0xR1ZrMVZOWGxVVldodllXeEtXR0ZHWkZkTlIxSlVWbFphWVdOV1JsVlNiWEJYWWtWd05sWnNZM2ROVmxKelYyeFdWMkV5ZUZkWmJGSkhUVEZhVmxkcmNHdE5hM0JHVm0xNFYyRkZNWE5UYkdoWFVteGFhRnBFUm10U01WSnpWbXhXYUdWdGVGbFdWM2hyVFVVMVIxZHJWbE5pUlRWWVZGZDBZV1ZXVW5OV2JHUlhWbTFTUjFVeWVFZFpWbHB6VjJ0NFZWWldjSEpXYkZwVFkyMVNSazlXWkU1U1JscE1WbTE0YW1WR2JGaFNiR1JZWVd4d2NGVXdWbmRoUmxaMFRWWktUbEp0ZUhsV01qQXhZa1phYzFOcVJsZFNla1o2VmtkemVGSldXblZqUmxwc1lUQndVVlpzVWtka01rMTVVMnRrVjJKR1NsaFZiRkpYWWpGYVdHTkZaRk5OUkVJMFZsWm9iMWxXU2xWaVJ6bGFWMGhDV0ZadGVHdGtWMDVHV2taV1RsWlhkM3BXYWtreFVqRmFWazFWYUZaaE0xSm9WbTE0Vm1WR1ZYZFhiVVpYVm10YU1GVnRlR3RVYkVsNlZWUktWMkV5VVRCV1ZFWlBZMnN4VjFkc1FsZGlSbkJaVjFkNGIxRXhWa2RXYmtwWFYwZG9jbFJXV2tkT2JHeHlWbXM1VmxKc2NGbGFWVlp6VmpKS1ZWWnNRbHBXTTA0MFdYcEdZV1JGTlZoU2JHaFRUVEpvUlZZeFdsTlNNa3AwVm14a1lWSnRlSEZWYkZKWFZrWldjVkZZYUU1TlZuQkpXbFZhVDJGWFJqWlJhazVWVm14YVdGbFZaRmRqYkU1eVQxZEdWMlZyV2xCWGJHUTBWVEZhYzFadVZsUmhlbFpVV1cxMFMxZHNXbFZTYkU1WFRWWmFTRll4YUd0V01rWnpVMnhzV2xaRldreFdha1pUWXpGYVZWSnJPV2xUUlVWNVZsWmtlazFXV1hoVFdHeG9VMFp3VjFSV1dtRlZNWEJGVW01YWEwMXJOVVpXYlhoM1lrZEtWMU5yZUZkV2JFcElWWHBLUzFZeFZuVlNiRkpwVW01Q1VWWnRNREZSTWxaSFdraEtZVk5GTlZsWmJGcGhaV3hzVlZSdE9WZFdNRlkwVlRKME1GbFdXbGRXVkVaV1RVWndWRnBGWkZkU2F6bFhXa1pPVGsxRVVYbFdiWFJyWkRGTmVGTnVTazVYUlhCUFZqQldZVmRHV25KV1ZFWm9VbTE0V1ZwRlZtdFVhekZYVTJ4c1drMUdXbEJaVlZwaFZsWktjMkpHV2s1V01VcDVWbXhhWVZadFVYaFVia1pZWWtkb2NGVnFTbTlVVm1SVlVXMUdhazFYVWtsV2JYUnpWVzFLV1dGSVFsZGlXR2hvVkZkNFZtVlhVa2RqUlRsVFZrWmFXRlpIZUZkV01WcHpXa1ZvYkZJd1dtaFdibkJIVmtac2NWSnNUbGRpU0VKSVdUQmtOR0ZIVm5KV1dHeFlWbXhLVUZscVJuTldNVTV5WVVkb1ZGSldjRmRXYlhoaFV6RlJlR05HV2xkV1JWcFVWbXBDVjA1c2EzZFhibVJWWWxWd1NWcEljRXRXTVVwelkwWlNWbVZyY0VoV2JYTXhWakpHUjFkc1pGTmhNMEpTVmpKNFlXRXlWbkpOU0doVllrWndhRlZxUW1GamJHeHpWbFJHYTAxWFVuaFZNbkJEVjBaYVZWSnViRlZpUjJoRVZteGtTMWRXUm5SaFJuQlhVbFZXTkZacVFtRmhNV1JZVTJ0a1VtSkhVazlWYTFaSFRrWmFjbFZyWkZaTlZuQjVWR3hhWVZSc1dsZFhiV2hoVmpOU00xZFdXbk5qTVZwWllVVTVhVkl4U2paV2JHUTBXVlpSZUZOdVVtdGxhM0JYV1d4U1EwNUdXa2hsUlhSVVVteEtWbFZ0ZUc5aFZtUkdVMjFvV0dKSFVUQlZWRVpoVmpGT2MxWnRSbE5YUlVwVVZrWmFWMlF5VWtkWFdHaFdZVE5TVlZsWWNFZGxWbEp6WVVaT1YySkdjRWRXTWpGdlYyeFplbFZ1YkZWV2JIQnlWakZrVDFOV1RuSlBWbVJYVW14d1dGWXhXbE5VTWtWNFZtdGtWR0V5VW5GVk1GWkxWMVpaZDJGRlRsWlNiWGg1Vm14U1IxWXhXWGRYYTJ4YVRVWlZlRlpxUVhoWFIxRjZZMFprVTJWc1dYcFhXSEJMVXpGYWNrNVdiRk5pUmxwWVZXcEtiMVV4V25GUmJGcE9VakZHTkZsVVRuTlViRnBIVTI1Q1ZtRnJTak5hUkVaclkxWk9jVkZzYUZkTlZtOTNWbXhqTVZReFdsWk5WbWhXWWxWYVZsWnJWbUZsYkhCR1YyeE9WMVpyTlhsVU1WcHJWVEpGZUdFemFGZGhNWEJvVmxSS1NtVldTblZVYlhCVFlrWndXVlp0ZEdGWlZsWkhZMFpvVGxack5YQlVWbHBMVFVacmQxWnVaRlZpUm5CV1ZsZHdWMVl3TVZoaFNFcFhVak5vVEZWdE1VdFNWbEp6WVVaa1RrMUZjRXBXTVZwaFZqQXhSMWRzYUZWWFIzaG9WV3hvVTFaR2JGaE5WRkpzVW14c05GZHJhR3RYUjBZMlVtNXdXazFHV2xoV2FrcExWbFpLY2s5V2NGZGxhMVYzVjFSR1lWVnRWa2RXYmxaVVlYcFdXRlpyWkRSV01WcFhWMnhPVmsxV1JqVlZNbmhoWVd4T1JsZHNXbGRoTVZvelZtcEdVMVl4V2xWV2JGSlRZa1Z3WVZkV1ZtdFNNa1pJVWxoa1YyRnNjRmhWYTFaaFkyeFplV016YUdwaGVrWldWbTB4ZDFSck1VbFJhelZYWWtaS1JGVXljM2RsUmxKelYyeFdhVkpVVm05WFZtaDNVakZLYzFwSVJsVmlhelZXVkZaYWMwMHhVbGRWYkdSWVVqQldORlV5ZEd0WlZrcEdWMjV3VjAxR2NGUldiRnBMWTJzNVYxUnNUbWhOVjNRelZtMTBZVll4VlhoVWJrcE9WMFZ3VDFac1dtRlhSbHB5Vm01a2FGSnNjSGxXTWpWTFlrWmFjMU5xUWxWV2JIQm9Wa1JHUzJSSFVrVldiR1JYWld0YU5sWnJZM2hXTWsxNVUydG9UMVpzY0ZSWldIQlhVbFprYzFremFGWk5WMUpJVmtjMVYyRnNTWHBWYkZaV1lrZFJNRlJYZUZabFYxSkhZMFU1VTFaRlNUQlhWRUpoVmpKR1YxTnFXbE5pUlVwV1ZtcE9VMDB4YTNoWGJFNXJVakExU0ZZeWN6RlZNVnBHVjJwU1YxWXphRlJXVkVaclkyc3hXVlJzWkZoU01taFhWa1phWVZNeVRsZFZiRlpUWW1zMVdGWnRNVk5YYkd4eVZsUldWMDFWYkRSVk1uQkRWakZLYzFkc1VsWldla1pZVm0xemVGWnRSa2RWYkdoVFRXMW9iMVl4V21GaU1rVjVVMjVPVldKcmNGbFdhMXBoWWpGc2NscEVVbXhTYkd3MFZsZDBNRmRzV25KalJXaFhUV3BXVkZac1dscGxiRVoxWTBad1YwMHdNSGhXYlhoclVqQTFjMU51VGxKaVIxSlVWbXhhVjAweFduSlpNMlJzVW1zeE5WVnROVXRVYkU1SVpVWm9WMkV4V21oV1ZscFhZMVpHV1dGRk9WTmlWa2wzVjFSQ1YxTXhVbkpOVlZacFVtMTRXRlJXV2t0VVJscElUVlprVjFaclduaFdWM2hYVlRGYVZWWnJVbGhpUmxwWVZGVmFZVmRHVWxsaVIwWlRWMFpLVlZkV1kzaE9SMVp6VjJ0b1RsTkhhRlZaV0hCWFZqRlNWMWRzWkZkU2JIQklWVEl4UjFaV1dYcGhSV2hWWWtad2NsWXhaRTlTYXpWWVpVWmthV0V3Y0V0V2JYQkhWVEZOZUZWdVRsUmhNbWhXVmpCa05GWnNVbFpYYTNSVVRWWktWbFZXYUc5Vk1WcHpVMnhhVmsxdVRURlpWV1JMVjFaV1ZWTnNaRk5OTW1oVlZtMXdTMUl4U1hsVGExWlhZa1Z3V0ZWcVRtOVVSbHBWVVd4YVRsSXhXa2hYYTFwdlZERmFWV0pGT1ZaaGEwVjRXa1JHYTJOV1RuRlJiR2hYVFZadmQxWnNZekZWTVZwWVUydGtWR0V4U21GV2ExWmhaV3hTZEdWRlpGZFdhMXA1Vkd4YVQxUnNXbk5pUkZwWFlUSlJNRlpVU2tkamF6RldWMnMxVjFZeWFGaFdiWFJXVFZac1YySklUbGRXUlZweFZXMTRTMWRXVWxkV1ZFWlZZWHBHV1ZwVlVrTldiVXBIVTJ0b1YxSjZSa3hXYlRGUFUwVTVWMkZHWkU1TlJYQlZWbXRhYTAxRk5VZFRhMlJUWWtkb1VWWnNhRk5XUm14WVRWUlNiRkpzYkRSWGEyaHJWMGRHTmxKdWNGcE5SbHBZVm1wS1MxWldTbkpQVm5CWFpXdFZkMWRVUm1GVmJWWkhWbTVXVkdGNlZsaFdhMlEwVmpGYVYxZHNUbFpOVmtZMVZUSjRZV0ZzVGtaWGJGcFhZVEZhTTFacVJsTldNVnBWVm14U1UySkZjR0ZYVmxaclVqSkdTRkpZWkZkaGJIQllWV3RXWVdOc1dYbGpNMmhxWVhwR1ZsWnRlRXRXTURCNVlVVjRWMVpGU2xkVVZXUlNaVWRGZW1KRk5WZFNhM0IzVmxkd1EyUXlVWGhhU0VaVVlXdEtXVlpxUm1GTlJscFlUbFpPVjFZd2NFaFZNblJUVjJ4YVJsZHVjRlZpV0doSVZteGFSMk5yTlZkVWF6VlhZa2QzTWxadGRHdE9SbFY1VW01S1RsWldjRTlXYkdSdlZqRmFjbFpVUmxwV2JYaDZWbXhTUjJGc1NuTlRiR3hWVm14VmVGWkhjM2hYUjFaRlVXeGFhVkpyY0VsV2EyTjRVekZhZEZScmFGQldiV2hZVkZSQ1MxWkdXa2RhUkVKT1VteHdTVlZzYUhkV2JVWTJWbXhrVlZaRmNGUmFSbHBoVWpGa2NrOVhjR2hsYkVsNlYxZDBWMVV4V25SVGJHUnFVbFJzVjFsVVNsTmpiRkp6VjJ4T2FrMVlRa2RVYkdRMFZqSktjbE5yWkZkV00yaDJXVlJHYTJNeFpGbGFSVFZVVWpKb1YxZFdVa2RUTVZWNFkwWmFWMWRIYUZSV2JYTXhWbXhWZVdONlJsWk5WWEI2Vm0xd1YxWXdNWFZoUmxKWFRXNU9ORmt5Y3pGWFZsWnpXa1prVTJFelFtOVdhMXByVGtaTmVWUnJaRlppUjNoeFZXMDFRMkZHVWxkV2EzUlhWbXhhV1ZSV2FHdGhSa3B5VGxWa1dtRXlhR2hXTWpGSFkyczFWbVZHY0ZkU1ZXd3pWbGQwWVZZeVVrZGFTRXBQVm1zMVZGUlhlRVpsUmxweVdrUlNhRTFXU2pCV2JYaHJZV3hLVjFkc1VsZE5SMUpVVjFaYVlXTldSbGxhUjNoVFlrVndOVlpzWkRSVE1rcEhVMnhXVTJFeGNGZFVWbHBMVkVaYVNHVkZkRk5OVm5CYVdXdGFiMkZXU25KalIyaFhVbTFTTmxSV1pGTlNNV1J6Vm14YWFWTkZTbEJYVjNSWFpESlJlRmRyWkdoVFIxSlpXV3hWTVZJeGJEWlViazVXVW0xU1NWcFZaRzlXYkZwR1kwaEtXazF1YUhKVmJGcFBZekZrY2s1WGJGTk5NbWN3VmpGYVUxUXlTWGhWYmxKVFlteEtiMVV3Vm1GWFZteFZVbXQwVlZKdGVGbFplazV2VkRKS1JrNVVRbUZTVjFKSVdWVmtTMU5IVVhwalJtUlRaV3haZWxacVNucE5Wa3B5VFZac1UySklRazlVVjNoTFZVWmtjMXBFVW1waVZscFlWbFpvYjFadFJqWldhemxYWWtaS1dGWXhXbGRrUlRGWldrWldVMkpHV1RGWFZFNTNWREZhUjFkc1drOVdiRXBaV1d4b2IwMHhhM2hYYkU1WVZtNUNSMVF4WkRSaFZrcFhWMVJDVjJFeFNrUldWRXBIWkVaV1dWcEdRbGRpUm5CWVZtcENiMUV4VmtkalJtaE9WbFJzVDFSV1drZE9SbHBZWlVVNWFGWnJjREJhVldodlYyeGtTVkZzYUZkTmJtaG9WVzE0YTJSV1RuTldiV3hUWVROQk1WWnJXbE5SYXpWWFUyeGtWMkpIZUc5VmJYUkxWa1pTVmxkdFJtdFdiSEJIVjJ0b1lXRXdNVmhQVkU1YVRVWmFjbFpWV2s5VFJsWnpVbXhhYUUxV2NEVlhiRlpoWVRGa1dGUnJXbXRTTW1oUFZXdFdZVll4V2xkWk0yaHBUVmRTTUZadE5VOVdNV1JJVld4YVdsWkZXa3hWYWtaM1VsWkdXV0ZIY0ZkaVZrcGhWakowVms1V1dYaFRibFpTWW01Q1dGVnVjRWROTVZsNVl6Tm9hazFyTlVoV2JURnZWVEF3ZDFOdE9WZFdNMEpFV1hwQk1XTXhWblZWYlhCVVUwVktiMVpHWkRSa01WcFhWbXhvYWxORk5WVlphMVV4VWpGcmQyRkZPVnBXYTNCWldWVmFiMWxXV25SVmEzaGFUVVp3U0ZZd1pGTlNNa3BJWlVkc1ZGSlZiRE5XYlhCSFlUSlJlRlp1U2s1VFIxSlBWbXRhZDFkR2JITmhSazVXVm14d2VWZHJXazloVlRGWFUyeGFWazF1VVhkWlZWVjRVbGRLUjFkc1pGTmlWMmg1VmpGYVlWTXhTWGhYYkd4cVVtMW9jRlZ0ZEhkT2JHUlhXa1JTYTAxVmNGaFdSM2hYVmxkS1ZsZHRPVnBXUlc5NlZGZDRZVk5GTVZsYVIzQk9ZVE5DU0Zkc1ZtOVZNVnBJVTJ4b2FGTkZXbFpXYWs1dlZqRndWMWRzVG1waVIxSldWbTB4YzFVd01VbFJXR1JYWVRKTmVGZFdXbk5XTVU1WllVWmthV0pJUWxwV2JUVjNVakZPUjJOR2FHeFRSMUpZVm0weFUxWnNWbGhsU0U1VllsVndTRmxxVG05V01ERlhVMnQwVldKSFVrZGFWV1JQVWpGV2RHRkdUbE5XV0VJMFZqRmtOR0V3TlVaTlZXUlZWMGRTVmxsclZURmhSbXh5WVVWT2JGSnNjRWhaVldRd1ZsVXhjMWR1Y0ZaaVIyaDJWbXhWZUZJeFRuVlNiVVpUVWxWVmVGWnRlR0ZXTVdSWVZHdGFVRll6YUhCV2JGSlRUbXhhY2xWclpGWk5WbFkxVlRKMGEyRldUa1pYYlRsaFZqTm9hRmRXV21GamJGcDBVbTF3YVZKcmNEWldiR014VXpGU2NrMVZWbWxTVm5CWVZtMHhiMlJzV2xaWGEzQnJUVlp3TVZkcldsTlViRnBWVm1wV1YxSXpRa1JaZWtaUFZtc3hWbUZIUmxOTlJuQjNWMWQwWVdSdFZrZFhXR2hXWVhwc1YxUlhjekZUVmxWNFlVaE9WVTFWYkRWV1YzaDNWbFpaZW1GRmVGcGxhMXB5Vm14YVUyTnRVa1pQVm1ST1VrWmFURlp0ZUdGaGF6VlhWRmhvVkdKcldtaFVWRTVEVjFac2NsZHJkR3hpUjNoNlZteFNRMkpHV25KT1ZFSmFUVVpWTVZsVlpFdFNNVnB4Vkd4a1UySldTWHBXVnpGNlRWWkplVkpZY0dsU2JWSllWV3hhZDFWc1duUmtSM1JWWWxaYWVsZHJXbXRXYlVwSlVXNU9WMkpHU2xoV2JYaHJZMnhyZW1GR1ZtbFNXRUpJVmxjeGQxWXhXbGRYYkdoV1lUTlNhRlpzV25kbGJHdDNXa1pLYkZadVFrZGFSVnBQWVVkS1dGVlVRbGRoYTFwb1dWUkdZV05yTVVsaFIzQlVVbFp3VkZadGRGZGtNVkY0WTBab2ExSnNjSE5aYTFwTFYwWmFXR1JIZEdoV2EzQldWbTEwWVZkSFJYbFZXR1JYVWtWR05Ga3lNVTlUVmxKelZtMXNhV0V3Y0U1V01WcFhXVmRSZUZSclpGZGlSbHBUV1Zod2MxWkdWbk5XYm1Sc1lrWnNOVlJWYUc5WFIwcFhWMnhvV21FeFNtaFdSM2hMVG14YWMxWnNWbGRXYmtKdlZqRmFZVlF5VWxoVGEyeFVZbFZhVDFsclduSmxSbHBYVjIxMFRsSXdWalJWTVdoellVWk9TRlZ0UmxWV1JXOTNWRlJHVDA1c1NuUk9WM2hYWWtWdmQxWkVSbXRTTVZsM1RWVldWMkZzV2xoVVZWcExWVVphUlZOcmRGTk5hMVkyV1RCYWEyRlhTbGxoUnpsWFlrWktURmxVU2xKbFJsWlpZMGRzVTFaWVFuWldSbHByWW1zeGMxZFliRTVUUjJoWldXeFdZV1ZzVm5OaFNHUlhWbTFTU2xWWGVHOVhiRnBHVWxSR1YySkdjRE5WTUdSSFVtczFWazVYYUU1TlJXOHhWbTEwVTFJeFZYaFZibEpXVjBkb2NWVnNXbUZYUmxweVZsUkdhRkpzY0hsWGExSlRZV3hhZEZWdWJGZFdNMUl6VmtkemVGZFdSblZoUmxwT1ZqSm5lbFpyVWt0U01sSklWbXRzVldKR1NsaFdiWFJhWld4WmVXTkZkRlZpVmxwNlZqSTFVMkZXU1hwUmF6bFZWbXhhTWxSV1dsZE9iRVp5VDFaYVRsZEZTalZXUjNSdll6RlplRmRyWkZoaVYyaGhWbTV3UjFaR2EzZFhiWFJZVmpBMVNGa3dWVEZXTVZwSFYydGtWMVpGV25aWmFrWlhVakZPV1ZwRk9WaFNWRlpYVjFkMFlWTXlWbGRWYkZaU1ZrVktjMVp0ZEhkV2JGVjVZM3BHYUZJd2NFaFdiWEJoVmpBeGNWSnFUbFpXZWtaVFdrUkJlRmRXU25OVGJXeFhUVEpvVVZadE1YZFJNazE1Vm01T1ZXSkdjRmRaVkVKM1kxWlNWbHBFVWxOaVJuQklXVlZXVDFac1NYaFhiR1JXWWxSV1RGWXdXazlUVmtaMVUyeHdhRTFXVlhoV2FrSmhZVEZhVjFWdVRtcFNNbmhZVm10V1NrMVdXbkphUkZKV1RWWmFNRlp0ZUdGVWJGcHpWMjA1Vm1Gck5VUlpWVnBoWTJ4a2MxZHJOVmRpUlc5NFYxUkNhMDFIUmtkVGJGWlhZbTFvVjFSV1drdFRSbHBGVVZob2FrMXJjRVpXUjNoWFZqRmFjbU5GZUZoaE1VcElXWHBLVDFZeFRuVlZiV3hUVjBWS1ZWWlhkRmRUTWxKWFYxaG9XazB5YUZSVVYzaGhaV3hyZDFkc1pGaFNiSEJIVlRKNGQxWldXWHBoUlhoYVpXdGFjbFpzV2s5V1ZscDBZVVUxV0ZKVmNGZFdNVnBYWVRKTmVGcElUbUZTVm5CUVZqQlZNVlpzYkhOaFJVNVhVbTFTTUZwVmFHdFdSa3B6WTBSQ1drMUhVbnBXUnpGTFVtMU9TV05HV214aE1IQXlWbXRTUW1WR1dYbFRhMnhYWWtaYWIxbFVRbmRsUm1SWFYyMTBhRTFyTlhwWGExWnpZV3hKZWxWdVFsWmlSa3A2VmpGYVdtVkdWbkpQVm1ocFZsaENXRlpHVm05ak1WcFlVMnRrVkdKRk5XaFdiWGhYVGtaYWMxcEZaRlJTTURWSlZXMTRhMVV5U2tkV2FsSlhZVEpOZUZwRVNrWmxWa3B5VjJzNVdGSldjRlpXYlhSWFdWWldSMVZzYUd4VFJUVlBWRlphUzFZeFdsaGtTR1JvVFVSR1dWcFZhRzlXYlVwVlVtNXdWMUpzY0VkYVJFWkxZMVprYzFWck5WZFdSbGt4VmpGU1ExWnJOVlpPVm1SVFlrZG9jbFZ0TVRSak1XeHpWMnQwVGxKc2NFbGFWVnBQVldzeGNsWnFVbHBoTVVwb1ZsZDRZVkpzVG5KUFZscG9ZVEZ3V1ZaR1VrZFZNazE0Vm01U2FsSlVWbFJXYTFaaFUyeGFjMWRzVGxWTlYxSXdWVEo0WVZReFpFWlRiRnBYWW01Q1NGWkVSbE5XVmtwMVZHMTBVMkV6UWxkV1Z6RjZUVmRHVjFkc2JGSmliSEJZVkZaa1UwMHhXbGhqTTJocVlsVndSMVp0Y3pGVk1ERnpVMnN4VjFaNlJqTlpiVEZYVmpGd1NWVnJOVmRYUlVwUVZsZDRVMVpyTVhOWGEyUldZVEpTWVZadGRIZFRWbXcyVkc1a1dGSnNjSHBWTW5oRFYyeGFjMk5FVGxaaVIxSkhXbGN4VDFKck5WZFVhelZYVm14cmQxWnRkR3RrTVUxNFYyNUtUMVp0VW05VVZFbzBWakZaZDFwRVVsWlNiRXBaV2xWb1QxUXhXbk5UYkhCYVRVWndNMVpFUm1Ga1ZrWnpWbXhhVjJKWGFGbFdWRW8wVW0xV1IxUnNiR0ZTYmtKWVZtcEdTMDVzWkhOYVJFSlBVbXh3VjFSc1dtOVhSMHBXVjJzNVdtRXhjSHBVVkVaYVpERldjbVJGTlZOTlNFSktWbTB4TkZVeGJGWk5XRlpXWWtoQ2FGWnFUbTloUm14eFVtMTBhazFXV2pCYVJXUnpWakZhUmxkclpGZGhhMXAyV2tSR1UyTXhaSEpoUmxab1lrVndWMVp0TUhoVk1WbDRWV3hhVjFaRlNuTldiWGhoVm14YVNHVklaR2hXYkhCNlZtMXdZVll4U25SVWFsSldZV3R3UjFwVlpFOVNiRnB6VjJ4a1UxWllRbEZXYkdSM1VqRnNXRlZyWkdGVFJrcHhWV3hvVTJJeGJGVlViRTVYWWtkM01sVXlNVEJoUmtwellrUlNXbUV5YUdoV2EyUkdaVmRHUjFWc2NHaGhNMEpKVm1wR1lWVXhaRmRXYms1VFlsZDRWRmxyYUVOV01WcHpXa1JTV0dGNlZsaFdWelZQVlRGa1NHRkdWbHBoTW1oRVZtcEdWMlJIVmtaYVIzUk9WbFJXV0ZkV1ZtOWtNV3hXVFZWc1VtRXlhRlpVVm1SVFpHeGFTRTFWWkd0U2JGb3hWVEo0YjJGRk1WWmpSVkpYVWpOb2FGa3lNVmRXTVZaelZteE9hVkpWY0ZWV1Z6RTBWakF3ZUZkWWFGaGlXRkpXV1Zod1YxTkdiSEpoUldSWFVteHdSMVV5TVc5V01rVjRZMFY0V21WclduSldNR1JQVTBkT1JrNVdaRmRTVm04d1ZtMHhORlV4V1hoVldHaFlWMGRTVDFVd1pGTldiRmwzV2tSU1VrMVdSalJXYlRWUFZrWktWVkpzYkZwTlIxSXpXVlprUzFkV2IzcGpSbWhvVFZad2FGWkhlR3RWTVU1SFZHeHNhVkpzY0c5WlZFWjNaREZhV0dORlpGcFdNSEJZV1d0b1IxWlhSWGRPV0VKV1lXdEtNMXBFUm10alZrNXhVVzFvVGxaWGR6RlhWbFp2WVRGa2NrMUliR3RTUlRWVldsZDBZVk5HV25STlZtUlRZbFZhU0ZadGN6RldNV1JHVTJzeFYySlVSWGRXYWtwS1pVWldkVk50ZUZOV2EzQlVWbTAxZDFZeFVrZGpSbVJvVWpOU2NGbHJWVEZsUmxWNVpVZDBhRkl3Y0VsYVZXaHJWMFphUms1V1FsWk5ibWhIV2xaYVUyUldXbk5WYXpWWFlUSTRlVlpxU25kUk1sRjRVMWhrVUZaV1dsZFpXSEJ6WTBaYWRHUklaR3hTYkhCSlZGWm9hMkZYUmpaU2JuQmFZVEpvU0Zac1dtRlNNV1IwWVVad2FWSnVRalpXUjNoaFZUSlNTRlJyV2xCV01uaFlXV3hvVWsxV1duSlhiRTVWVFZkU2VsWXhhRzlXUjBwVllrWmFWMkZyTlVSWFZscDNWbXhhVlZKck9XbFNXRUYzVjFaV2ExSXhXWGROVm1ocVRUSm9XRlZxVGxOVlJsWllZM3BXVjJKVmNFZFpWVlV4VmpBd2QxTnVhRmhXZWtJMFZHdFZkMlZIVGtaWGJHaFhVbXh3ZGxkWGVGWk5WVEZIVjI1U1RsWjZiRzlVVmxaelRrWlplVTFJYUZoaVJuQXdXVlZrUjFkSFJuSlRXR1JXVFVaV05GWXdaRTlUUjA1SVlrZHNXRkl5VVRKV2Frb3dWakZrY2s1V2FGUmhNbWhWV1cxNFMxWnNiSE5YYm1Sb1VteEtXVnBWV25kaE1ERllWV3RhVmsxcVZsQldSekZMVTBad1JWZHNaRk5sYkZwRlYxZDBhMU14V1hoWGJsWllZa1pLYjFSV1pIcGxSbVJYVm14YWJGSXdOVmhaTUZadllURkpkMWRzVWxaaVJscFhXbFZhV21WR1ZuSmtSbFpvWld0YVdGWkVSbGRXTVZsNFYydGFWR0pWV2xoWlYzUkhUVEZTVmxkdGRGaFNNRFZIV1RCVk1WVXlTbkpUYkdSWFlrZE9ORlJyV210a1JrcDFWV3hXV0ZJeWFGZFdiWEJQVVRGWmVGVnVUbGRXUlZwWlZXMTRTMVpzVmxoamVrWnBVbXhzTmxaWGNHRldhekZYVjJ4a1lWWldjRXhWYWtaaFpGWlNkR0pHVG1oTldFSmFWbXhqZUdReVRYaFhhMlJYWWtkU1dGWnJWbUZXUmxwellVWk9WMkpIZHpKVk1qRXdWa1V4Vm1OSWFGaGhhelV6VmpCa1MxZFdSbk5hUjBaVFVsWnZlbFpVUW1GVk1XUlhZMFZhVUZack5WUldiR2hEVG14YWNsZHNaRlpOVm5CNVZGVm9hMVF4V2xkWGJFNWFZa2RvVkZaVldsTlhSMUpKV2tkd1YySldTbHBYVkVKWFRVZEdTRkpxV2xaaGJGcFhWRmR3UjJSc1drVlNiVVpUWWxVMVNsVlhlRzlXTWtwWFUydDRWMUpzV2xkVVZtUlBVakZLYzFadGJGTlhSVXBXVmxkNFUxVXdOVWRYV0doYVpXdGFWbFJWVWtkVFZscElUbFZPV2xaVVJqRldWM2gzV1ZaYU5sSnNVbUZTVm5CVVdYcEdWMk5zVW5SaFJUVlhUVEpPTlZac1dtRlZNVVY0Vlc1T1ZGZEhhRmhaVjNNeFZteHNjbGRyZEdwV2JFcFhWbXhvYjFaR1NuTlhiRnBYVWpOb00xbFdXbUZXVmxwMVdrWmtVMkpWTkRCV2EyUjZaREpXU0ZOcmJGWmlSVFZZVld4YWQxVkdaRmhsUm1SclRXdHNORmRyV205aGJFcHlZMFU1V2xaRk5YWlZiRnBYVmpKR1NHUkdWbGRoTVZsNlZsUktkMUV4WkVkWGExcFBWbGhvVmxsclpGTlZSbFY0VjJ4a2ExSnRVakJWYlhocllrZEtSMk5FVWxkaGEwcFVWWHBLUm1WV1RuSmhSbHBvVFd4S1VsWnFRbGRrTWtaSFYxaGtZVkpHU25CV2JURXpUV3hWZVU1Vk9WVk5hM0JLVlZkNFYxZEhSbkppTTJSWFRWWldORmt5ZUdGalZscHpWbTFvYUUwd1NsWldNVnBUVVcxV1IxTnNhRlJoTW1oeFZXMDFRMk14YkhKWGJGcHJUVlp3U1ZwVldrOVdhekZ5VjJ0b1dtRXhTbWhaVlZwS1pWZFdSazlXY0ZkTk1taE5WMWh3UjFVeVRuTmpSV1JoVWpKb1dGWnJXbFpsVmxwMFpVYzVhazFXUmpSV01uUnZZV3N3ZVdGR2JGZE5SMmhFVmxSR2QxZEhVa1ZSYkdSVFRVWnJlVll5ZEZka01WVjVWbTVLV0dKdGFGbFdhMVp5WlVac05sTnNTbXhXYkZwNVYydGFRMVl5Vm5OWGJUbFhZbFJXTTFacVNrNWxSMFY2WWtVMVdGSlVWblpYVjNScllUQTFWMkpJU21oU2JWSnZWVzB4VTFOR1ZuUk9WMFpYVWpCV05GbFljRWRYYkZwWFZtcFNXazFXY0ROVk1HUlRVMFpLYzFSc1RsZFdiRmt3Vm0xd1IxVXhUWGhWYmtwT1ZteHdVVlpzV21GWFJscHlWbXQwV2xac2NIaFZWbWhyVkd4S2RGVnNiRnBOUmxvelZrZDRTMlJXUm5OWGJHUlhaV3RWZDFacVNYaFNNbEpIVld4c2FGSnNXbGhVVkVKTFYwWmFTR1ZHV2s1V2JWSklWbGQ0VjFWdFJqWldiazVYVFVkU1ZGcEdXbFpsVjFKSFkwVTVVMVpGU1RCWFZFSnZVakZaZUZwRmFGWmlWMmhYV1ZkMFIwNUdVbFZTYkU1cVlrWmFlVlpITVhOVk1WcEdWMnRrVjJKWWFGUldSRVpTWlVaT2NsZHNVbWxoTTBKWFYxWmtNR1F4VWtkaVJtaHNVMFUxY1ZadGN6Rk5SbXQzVmxSV1ZXSlZWalpWVnpWaFZqRkplbUZHVWxabGEzQklWbXBLUzFJeVJrZFZiR1JUVmxoQ1VsWXhXbUZpTWtWNVUyNU9WV0pyY0ZsV2ExcExWVVpXYzFWc1pFNVNiSEJaVkZab2ExWlZNWEpYYWtKWVZrVTFlbFl3V2xwbGJFWnlUMVpXYVZKdVFYcFhhMVpoWVRGa1dGTnJXbEJXTW1odldsZDRXbVF4V25GU2JFNVVUVlpLZVZSVmFHOWhWa3AwWVVaa1dtSkhVblpXUkVaelYwZFdTVlJyT1ZOaVJXOTRWMVJDVjJFeVJrZFRibFpTWWtkNFdGUldXa3RYUmxwRlVtdGFiRll3TkRKV1IzaFRWakZhVlZac1ZsZE5ha1kyV2xWYVMxZEdTbGxqUjNCVFltdEtXVlpYZUZOV01ERkhWMnRvVGxkSFVsUlpXSEJYVjBacmQxWnRPVmRTTUhCYVZsZDRSMVp0Um5KVGFrNWFaV3RhVkZsNlJsZGtSVGxZWVVaa2FWZEhhR0ZXYlRFMFlqSkZlRnBJVWxkaWJFcHpWVEJXWVZac2JIUk9WVTVVVFZoQ1JsVnROV3RXUmtweVkwWndXbFpXVlhoWlZscGhWMGRXU1Zac1pGZFdia0pSVmxaU1MxVXhTWGxVYTFwb1VtMVNjRll3Vmt0bFJtUllUVWhvVDFKVVFqUlpNRlpoVjBaYVIxZHVRbHBoTW1oRVZqRmFVMk14Y0VWVmJXaHBWbGhDV2xkc1ZtOVNNVnBHVFZWYVQxWnNTbGxaYkdodlpXeGFjMWRyT1ZkV2JFb3dWVzE0VDFSc1dsZGlSRnBYWVRGS1NGbFVSbEpsVmtwMVUyczVWMkpHY0c5WGJHUXdXVlpXUjFadVJsSmlWVnB4Vm0xNFIwMHhaSEpXYm1ScFVteHdWbFp0ZEhOV01rcEhVMnRTV0Zac2NHRmFSRXBHWlcxT1IxWnRiRk5oTTBKTlZtdGFZVlpyTlZkWGJHUllZbXhLY1ZWc1VuTldSbFp6Vld0a1QySkdWalJXYlhNMVZtc3hXVkZ1YkZWaE1taDZWbXBHWVZJeFpIUmhSbkJYWld0YVZWZFVRbUZoTVdSWVZHdGthbEpVVmxoV2ExcGhVakZhVlZKdE9XbE5WbHBJVlRGb2ExUXhaRVpPVmxwYVlURndURnBXV2xOV1ZrWlZVVzE0VjJFelFsZFdWRXA2VFZkR1NGTnJaRmRoYkhCWVZGZHdSMDB4VmxoTlZrcHJUVVJHV2xWdGVFdGhWbGw2WVVaQ1YySllRa1JaZWtwU1pVWldXV05IYkZOV1ZGWjVWbGN3ZUUxRk5YTldXR3hxVW0xU2IxbHJWVEZUUmxWNVRVaG9XRkl3V25sWk1GcHZXVlpLYzJORVRsZE5WbkJRV2taYVIyTXlUa1pPVm1SVFRUSm5NVlp0Y0V0T1IwVjVWRmhzVm1KSGFGUlphMlEwVmpGYWRXTklUbFZTYkZvd1dUQm9UMkZWTVZkVGJHeGFUVWRSZDFsVlZYaFhWa1p5VjJ4YVYySkZjRmxXYWtwNlpVZE9jazFWYkdoU2JGcFBWVzEwZDFkR1drZFdiVVpxVFZkU1NGWlhlRmRXYlVwSlVXMDVXbFpGYjNkVVZFWmFaVmRXUjFSc1drNWhNMEpKVjFkMGIxSXhaSFJXYmtwWVlYcHNZVlpxVG05V01WSlhWMnhPYWsxWVFrZFViRlV4VlRGYVJsWllhRmhXYldneldWUkdUMk14VG5GWGJFNXBZVEZ3YUZaR1pIZFdNbFp6WTBWV1ZHSkZOVlJVVlZKelYyeGFXRTFZVGxWaVZYQkhXV3RTVTFkR1dYcFZia3BYWVd0YU0xbDZTa1psYlVwSVpVWlNVMkpyU2pSV2ExcHJUa1paZVZWdVRsVmlhM0JaVm10YVlXSXhWbk5WYTJSc1VtMVNlVmRyVWtOWGJGcHlZMFZrVm1KR1NraFdNRnBoVW0xT1JrOVdWbGRpUmxWNFZsZDRZVmxXV2xkU2JrNXFVbTFTVDFWclZrZE5NVnB4VW0xMGEwMVZOWGxVVmxacllXeEtjMWRzWkZwaVIyaDJWMVphYzFkRk1WWk9WM2hUWWtWd1dsZFVRbUZaVmxGNFYyeFdWMkpIZUZoVmJYaExVa1phU0UxV1pGaFNNRFF5VmtkNFUxWXhXWGxWV0hCWFRXNUNTRnBFUm10VFJscHlZa2R3VTAxR2NGaFdSbFpYWTIxV2MxWllhRmRoZW14WFZGWm9RMlZXVWxkV2JHUm9VbFJDTmxWWE1VZFdNa1Y0Vmxob1lWSldjRlJhUldSUFVteGtjazlXWkdsaE1IQkxWbXhTU21WRk1VZFdhMlJVVjBkU2NWVXdWVEZXYkd4eVYydDBhMkpIZUZoV01qVlBWMFpLYzJOR2NGaGhNWEF6V1d0a1MxZFhSa2xoUm1SVFpXeFplbFpVU1hoVmJWWklWR3RhYUZKck5WbFZha3B2VlVaa1dHVkdaR3BOYTNCNlZtMTBhMVpYUlhkalNFSmFWa1UxUTFSWGVITk9iRTUwWkVad1YwMUlRbGRYVjNSVFZqRmFSazFWV2s5V2JFcFpXV3hvYjJWV2NGZFhhemxYVm1zMWVWUXhaSE5XTWtWNFYxUkNWMkZyYkRSYVJFWlBZMnMxVjFwSGJGTlNia0oyVjJ4a05GbFdWa2RYYmtwaFVrVktUMVJXV2tkTk1WcFlUVlZrYUZKc2NEQmFTSEJMVmpGS05sSlVRbGRTUlZwb1ZUQmtSMU5XU25OV2JHUnBWbXR3YjFZeWRGTlJhekZXVGxoU1ZHRXlhRTlXYkZKellqRnNXV05GU2s1V2JIQklWako0VDJKSFNraFBWRTVhVFVaYWNsWlZXbHBsYkVaMFVteHdWMDB5YURWWGJGcGhZVEpPYzFadVRtRlNNbmhZVm10V1lVNUdaRmhrUjNSclRWWmFTRll5ZEc5aGF6QjVZVVphVlZac2NFeFZWRVpUWTJ4YVZWSnRkRk5oZWxWM1YxUkNWazFXVW5SVGEyUlhZV3hLV0ZWclZrdGpiRnBJVFZaa1UwMXJOVXBWYlhoTFZqRktWVlpzU2xkaVdFSklXVEl4VjFZeFZuTmlSM0JUVWxSV1VsWnRjRUpsUlRWelYyeG9UMWRGTlc5V2JYUnpUa1paZVdORlpGZFNWRVpIVkd4YVUxZEhTbGxVV0dSaFZteHdhRlpzV21Ga1JrcDBZVWRzVjJFelFYcFdiWEJIWWpKUmVGcElTazVXYkhCUVZteGFZVlpXV1hkYVJ6bFdWbXhhZUZWV1VrZGhhekZYVTI1d1YxWjZWa3hXUjNONFVsWldjVlpzV21sU2EzQk5WbXRqZUZJeVRYaFhiR3hxVW0xb2NGWXdWa3RTUm1SeVZXdEtiRkl3TlZoVmJUVlRZVlpLVlZac2FGVldWMUV3VkZSR1lWSldVblZVYkVwcFZsWlpNRll5Y0U5ak1WcFlVMnhvYkZKclNtRldhazV2VFRGcmVXVkdUbXBOV0VKSVdUQmtORll4V2tobFJuQlhZVEZ3VkZacVJsZFNNV1J5V2taa1YxSldjRmRXYlhoaFV6SlNWMVZzYUd4VFJUVnlWVzE0UzFkc2EzZGFSV1JYVFZWd2VsWnNhR3RXTURGWVlVUk9WbUZyY0V4V2JYTjRWbXhhYzJOSGVHbFNia0oyVmpGYWEwNUhUWGRPV0U1VlYwaENjRlV3YUVOalZsWnpXa1JTVkdKSGR6SlZNakV3VmtVeFZtTklhRnBXVmtwUVZteFZlRkl4VG5Ka1JsWlhZa2hDTmxaSE1UUlVNbEpJVld0YVQxWnRVbFJXYkdoRFRXeGFjVkp0T1d0TlZuQjVWRlpXWVZReFdsZFhiRkpYVFVkU1ZGWkVSbk5YUjFaSlZHczFUbFpyY0RaV2JHTjRVakpHVjFOc1ZsZGliV2hZVkZaYVMxUkdaRmRYYlVaVVVqQmFTbFZ0ZUc5aFJURnpVMnQ0V0dKSFVqWlVWbVJQVWpGS2MxWnRiRk5YUlVwV1ZsZDRVMVV3TlVkWFdHaGFaV3RhVmxSVlVrZFRWbHBJVGxWT1dsWlVSakZXVjNoM1dWWmFObEpzVWxwbGExcFRXbFZhZDFJeVRrWk9WVFZYVFRKa00xWnRkR0ZWTVUxNFZWaG9XR0V5VWxSWlYzaGhWbXhhZEdWRmRHdGlSM2haV2xWb2ExWXhXbk5qUmxwWFlsaE5NVmxyWkV0V01VNTFWMnhrVTJWcldYcFdWRXA2WlVaYWNrNVZiR2xTYldoWlZXcEdTMVZHV2xoa1JtUnFUVVJDTkZkcldtOWhiRXBZVlcwNVYySkhhSFpWYkZwWFZqRndSVkZzYUZkV1JWbzFWa2Q0YjFFeFdsaFRiR3hTWWxkb1lWWnJWa1psUmxsM1YyMTBXRll3Y0VoVlYzaHJWR3hLUmxKcVVsZGhNVXBJVmxSR1lXTnJOVmRYYXpWWFZteHdiMWRzWkRCa01XeFhZa2hPVjFkSGFGQlphMlJUWld4YVdHVkhSbFZOVlhBd1draHdTMVp0U2xWUmFsSlhVak5vVEZVd1dsTldWa3B6WVVkc1dGSlZjRzlXTW5oclRVVTFSMWRzWkZSaVIzaFdXVlJPUTFaR1ZuTlhiVVpPVFZad1JsWkhOVTlWYlVwV1ZtcFNXR0ZyTlhwV2FrWmhVbTFPU0ZKc2NGZGxhMVl6VmtkMFlWVXhaRWhVYTJoUVZqSm9jRlV3Vmt0U01WcFZVMWhvYTAxV1NqQldiVFZMWVd4T1JtTkdiRnBpUjJoRVYxWmFkMUpXUmxWU2F6bHBVakZLVjFac1pIcE5WMFpJVTJ4YVQxTklRbGhWYlRGdlRURlplV016YUdwaGVteFlWbTE0VjFZeFNsZGpSa1pYWWxoQ1JGZFdaRTlXTVZKelYyeGFXRkl4U205V1JtUjZaVVUxYzFkdVVrNVhSVFZ2V1Zod1EwNUdWWGxqUm1SWFVsUkdSMVJzV2xOWFIwcFpWRmhrWVZac2NISldiRnBMWTJzMVYxUnJOVmRYUlVrd1ZtMTBZVll4VlhoV2JsSldWMGRvY1ZWdGVHRlZNVnB5Vm0xR1ZsSnVRbGxhVlZaclZHc3hXRlZ1YkZkV2VrVjNXVlZhWVdSSFVrVldiRnBPVmpKb05sWnFTWGhXTWxKSFZtNVdVbUpIYUZoWmExWjNWMFprYzFkdFJtcE5iRXBJVlRJMVUyRldTbFZpUmxKV1lsUkZNRlJ0ZUZabFJscHlUMWRzYVZaV1dUQldNbkJQWXpGYVdGTnNhR3hTYTBwaFZtcE9iMDB4YTNsbFJrNXFUVmhDU0Zrd1pEUldNVnBJWlVad1YyRXhjRlJXYWtaWFVqRmtjbHBHWkZkU1ZuQlhWbTE0WVZNeVVsZFZiR2hzVTBVMWNsVnRlRXRYYkd0M1drVmtWMDFWY0hwV2JHaHJWakF4V0dGRVRsWmhhM0JNVm0xemVGWnNXbk5qUjNocFVtNUNkbFl4V210T1IwMTNUbGhPVldKR2NGWlphMXAzWVVaU1dHTXphRTlpUm5CWlZHeG9UMkZHV25KaVJGSlhUVzVDU0ZaclZYaFNhelZYVld4b2FWZEZNVE5YYkZwaFlURmFWMU51U2s5V2F6VlBWbXhvUTA1R1duSlhiR1JXVFZaYU1GWldhRzloYkVwelYyeE9WMkV4V21oV1ZWcDNWMGRXUmxwRk5VNVdNVW8xVm14amVFMUhSa2RYYmxKclVrWmFWMVJXWkc5bGJGbDVUVlprYTFKc1dqRlZWM2h2VmpKS1JtTkdhRmhpUm5Cb1dYcEtVMUl4VG5WVmJXeFRWa2Q0VlZaWE1IaE9SVEI0Vm1wYVUyRjZWbkpVVjNoaFVqRndWbFpzVGxaaVIxSkpXVlZWZUZZeVJYbGhSa0phWWxob1VGa3llR3RXVmxaMFpFVTFVMUl6YUVoV2JGSkhWVEZKZUZwSVVsZGlhM0J4VlRCV2QxWnNXblJsUlhSVFVtMTRWMVl5TlU5VU1rcEhZMFphVmxZelRURldWRVpMVmpGa1dXTkdaRk5pVmtsNlZtcEplRlZ0VVhkT1ZtUlhZa2RvY0ZZd1pHOVZWbVJYV2tSU2FtSldXbGhYYTJoUFZtMUtWV0pIT1ZwaE1taEVWVEZhVm1WSFJrbGFSbFpPWVRGd1dGWlhlRk5XTVZwSFYyeG9WbUpGU21GWlYzUjNWVVpyZDFwRlpGUldiVkl3V1RCa2MxWXlSWGhpTTJ4WFZrVnZkMVl5Y3pGVFJsWlpXa1pDVjFac2NGWldiWFJYV1Zac1YyTkdhR3RUUjFKeFdXdGFTMWRHV2xoa1JUbG9VbXR3TUZwSWNFdFdNa3BIVTJ0U1YxSkZXa3hWYlhoaFkxWlNjMVpzWkU1TlJYQnZWakowVTFGck1WZFhiR1JoVTBaS2MxVnNVbk5pTVd4eVdrUkNUMVpzYkRWYVZWcFBZVlV4Y2xkdWNGcE5SbHAyVm10YWExTldSbk5SYkhCWFlsWkdNMVpHVm1Gak1rNVhWVzVLYTFJeWFFOVZNRnBMVW14YWMxa3phRnBXYlhoWVZqSjBhMkZzVGtaVGJGcFZWbXh3VEZWcVJuZFdNVnBWVm14U1UySkZiM2RYYTFaV1RWZEdWMWRzVmxOV1JYQllWVzB4VDA1R1dsVlRhM1JYWVhwV1dsVnRlRXRXTVVwVlZteEdXRlp0VGpSWlZFRXhWakZXZFZadGNGTldXRUo2VjFab2QxWXlWa2RYV0doV1lrZFNWbGxzV21GbGJGcHpZVWM1V0ZKc2NEQldWM00xVjJzeFIxZFlaRmRpUjFKUFdsWmFkMUp0VWtkVWJXaHBWakpSTWxadGRGTlNNVlY0VlZoc1UyRXhjRTlWTUdRMFYxWmFjbFp1WkZWTlZuQjVWMnRTVTJGdFNraFZiR3hWVm14d1RGWkVSa3RrUjFaRlVXeGthVkpyY0VsV2JGWmhVMjFSZVZScmFGQldiV2h3VlcxMGQxSldaRmRhU0hCUFZtMVNTRlpYZUZkV1YwWTJWbTA1V2xaRlNqTmFWbHBhWlVaa2MxUnNUbWxXYkhCWlYxZDBiMUV4Vm5OYVJXUllZa1Z3V0ZaclZrdFRSbXQ1WlVkMFZGWXdOVWRWTW5NMVZURmFSbGRxVWxkaVZFSTBXa1JHVTJSR1RuTmFSazVvWWtWd1YxWnRlR3RWTVU1SFlrWm9hbVZyV2xoV2JYaGhWbXhXV0dONlJsZE5WWEJYVmpGU1IxWXhTalpTYWs1V1ZqTk9ORlp0Y3pGWFZsWnpXa1prVTFkRlNsSldNVnByVGtkUmVWUllhRlpYUjFKb1ZXeFNjMkl4VWxkYVJGSnNVbXh3U0ZaWGREQldiRWw0VjJ4a1ZrMVdTbGhXYTFwaFYwWndSVlJzYUdoaE0wSlJWMnRXWVZsWFRsZFNibEpyVW0xb1ZGWXdWa2RPUmxwVlVteGthVTFXYkRWV1YzaHZWbFprU0dWR2FGcGlWRVV3V1dwR1lXTldSblJTYlhocFVqTm9XVmRXVm05aE1rWlhVMnhzVm1FeFdsaFdibkJIWVVaYVNHVkZkRlJTTVVwR1ZqSjRiMVl5U2taalJrWllWak5vVjFSV1pFOVdNVTV6Vm14a2FWWldjRlZXUmxadlVUSldWMWRyVmxKaVdGSlZWRmQwZDFJeFVuTlhiR1JvVW10c05WcFZaRWRXTWtaeVYyeG9WVlpGV25KV01XUlBVMVpTZEdGSGFHeGlSbFkxVm14U1IySXlSWGhpUm1SVVYwZFNXRmxYZUV0V2JGcDFZMFZrVkUxWGRETldiRkpYVkRGYWNsZHVhRnBoTVZvelZsUkJlRmRGT1ZWVmJHaFhaV3RKTUZaclVrSmxSazVIVTI1T2FGSnJTbGxWYlhoM1ZFWmFXRTFZWkdwaVZscDZXVlJPYzFSc1dsaFZia3BWVm0xU2NsUnNXbmRXYlVaR1ZHeG9hR1ZyV2paV2FrcDNVakZrZEZadVNtcFNiVkpoV1ZkMFMwMHhWbkZSVkZaVFZteHdlVlF4V2s5Vk1rVjRZVE5vVjJGclduWmFSRXBHWlZaS2NsZHJOVmRXTW1oYVZtcENiMUV4VVhoalJtaE9Wa1ZLVUZWdE1WTmxWbHBZVFVSV2FGSXdXVEpWYlhSaFZqRktkR0ZJV2xkU1JWcE1WVEJrVTFKV1pITmhSbVJUVjBWS2IxWXllR3RsYlZaSFYyeGtWV0pzU25CVmJGSnpWMFpTVjFac1dtdE5WbkJKVkd4b1QxUnJNVmhQVkU1YVRVWmFjbFpWV2t0U2JHUjBVbXhrYUdFeGNGaFhiR1EwWVRKU1NGUnJXbFJoZWxadldsZDBWbVZXV2xobFJrNVZUVlpLZWxZeWRHRlhSMHB5VGxaYVdsWkZXa3haTW5oelZsWkdWVkZ0ZUZkaGVsVjNWMnhXVms1WFNraFNXSEJTWW14d1dGUlhOVk5qYkZwWVl6Tm9VMkY2VmxkV2JYaExZVlprU0dGSE9WaFdNMmhvV1hwQk1WWXhjRWRpUjJ4T1RXeEtkMWRYZEZabFJUQjRWMjVTYkZOSFVsVlVWM2hoVjFad1JsbDZSbHBXYlZKSldsVldUMWRzV2taWGJscFZZbGhvV0ZZeFpFZFNNazVIV2tVMVUxSnNiekJXYlhScVRWZFJlRkpZYkZOaWEzQlBWbXhrYjFaV1dYZGFSemxXVW01Q1dWcEZhRTlVTVVwelUyNXNXR0V4V21oV1JFWmhWbGRLUjJKR1pFNVdhM0JOVmpGYVlWTnRVWGxUYTFaVllrZG9jRlpyVm1GaFJtUnpWbXhhYkZKck5VaFhhMXBYVlcxR05tSklRbGRpUmtwSFZGZDRWbVZHV25OVGJYUk9WbnByZWxkVVFsZGpNVnAwVTJ4V2FWSjZiRmhVVlZwWFRrWlNWbGRzWkZSU01Va3lWbTB4TUZSc1dYcGhSbkJYWWtad2NWUnNXazVsUmxKeVdrWlNhV0pJUW1oV2JUQjRZakZSZUdORldsaGhNRFZ4VkZWU2MxZFdVbk5hUldSWVVtdHdlVmt3YUZOV01ERllWR3BTVjJGcmNFeGFSVnBMWXpKR1JrOVdUbXhpV0doT1ZteGplR1F5U25SV2EyUmhVbTFTYUZWdGVIZFVNVkpYWVVWT2JGSnNXbGhXVjNRd1ZsZEtWMWR1YkZkaVIyZ3pWbXhhWVdNeFRuSmhSbkJvVFZaV05GWlhlR0ZrTVU1SVZXdGFVRlpVVm05VVZFSkxUbXhhY2xsNlJtdE5WVEUxVlcxMGEyRnNTbGhoUm1SWFlURmFURlpWV2xkamJGcHlaRWR3VGxZeFNYZFdSbHBoWkRKS1IxZHVVbXRsYTFwaFZtdFZNVkpHV2xaYVJtUlhZa1Z3TVZVeWVHOVZNVXBaVVcxb1dHSkdXbGRhVlZVeFl6RndSMkpIUmxOV1JscFZWa1pXYTJWdFVYaFhXR2hXWVROU1dWbFljRU5OTVZKellVVmtWazFYVWtsV1Z6RkhWMjFLUjFkdWNGVldSVnBVVm0xNGQxSXhUblJsUm1SWFVsWldOVlp0ZUdGaU1sRjRZa1pvVkdKR2NGbFpiWE14Vm14U1ZsZHJkR3RXYmtKR1ZXMDFhMVV4V1hkWFZFcFdUVzVTTTFaVVJrdFNiRTUxVm14YVRtSnNTakpXYkZKTFUyMVdWMU51VG1sU2JGcFpWVzEwZDFVeFpGaGtSazVxVFVSQ05GZHJXbXRaVmtweVkwaENWVlpYYUVSVk1uaGhWMFV4UlZadGFGTmlWa3BJVmtaYVUxRXhXbk5UV0hCYVpXdGFZVmxzYUc5Tk1WbDRWMnhrYTFKdFVqQlZiWGhyWWtkS1IyTkVWbGRYU0VKRVZrUkdWbVZIVGtsVGF6bFhZbGRvVlZkWGVHOWlNVlpIVld4b2JGTkZOVTlVVmxwTFRVWnJkMVpVUm1sU2EzQldWbXhTUzFadFNraGhTRnBZVm14d2FGVnFSa3RYVjA1SFlVZG9UbFpZUWpWV01WcGhXVmRSZUZkc1pHaE5NMEp3VlcwMVExZEdVbGRXYm1Sc1ZteHdTVnBGV2s5V2JVcFhVbXBTV2sxR2NIWldNR1JMVmxaS2NrOVdjR2xTYkZrd1YydFNSMVJ0VmtkV2JsWnFVakJhVDFVd1ZrdFRWbHBGVVd4T1ZVMVhlRmhXTW5SdllrWk9SMU5zV2xwV00xSXpWa1ZhYzFkSFRqWlNiWEJYWWtoQ1YxWldaSHBOVjBaSVVsaG9WMWRIVWxoVVZscExWRVphZEdNemFGZGhlbXhZVm0xNGQySkhSalpXYldoWFlsaFNhRmw2UVRGV01WWjFWR3hhYVZkR1NuZFdiWGhUVWpGS2MxWnNaR2hUUlRWV1dXdFdjMDB4YkhKVmJFNVlVbXhzTlZwVlZrOVdWVEZYVjI1d1ZtRXhjRmhaTVZwSFpFZEdSMVJyTldsaVYwNDFWbTEwVjFsV1ZuSk5WbVJxVTBVMWNWVnRNVzlWUmxweFZHdE9hbFp0ZURCVVZsSlRWR3N4V1ZGclpGZFNla0Y0V1ZWVmVGZEdjRFpUYkhCWVUwVktSVlpyVWtkVE1VcDBWR3RzVTJKR1dtOVpWRTVEVTBaa2NsVnJaR3ROYXpWWVZsZDRjMkZzU25KVGJHaFdZa1p3TTFwV1dtRlNWa1owWkVaV2FWWnJXWHBXUmxwVFdWWlZlRmRyV2xSaVJWcFlXVlJHVm1WR2EzaFhiWFJyVWpBMVIxUnNaRFJWTVZwR1YxaGtWMVpGV2xSVmFrWnpWakZPY21GR2NFNU5NRXBYVmxkNFZrMVdSWGhpUmxaVFlsUnNVRmxyV25kTlJteFdXa1ZrVjAxVmJEUlZNbkJEVmpGS2MxZHNVbGROYWtaWVdUSnplRll4V25OalJUVk9ZbGRvVVZadE1YZFNNVnAwVlZob1ZtSnJXbFZaYTFaM1ZERlNWMXBFVWs1U2JIQjZWbGR6TlZaWFNsWmpSbVJYVFdwV1RGWXdaRVpsUms1elZHeFdWMVpzV1RCV1ZFSmhXVmRTUmsxV2FGTmlWMmh2VkZSQ1MwNUdXbGxqUldSV1RXeGFlbGxxVG5OV1YwcHpVMnhvV2xZelVreFpNbmhhWkRGYWRWcEZOVmRoZWxaWVZtdGtORlF4YkZoU2FscFhZVEZ3VjFsc1VrZGtiRmw1WXpOb2FtRjZSa3BaTUZwWFZqRlplRk5zUWxoaE1VcElXWHBLVDFZeFRuTldiRlpvWld4YWRsZFdVa2RXTURCNFYxaG9XR0pGTlhGWldIQlhWMFpyZDJGRlpGaFNNSEJhVmxjeFIxZHNXWHBWYTNoaFVsWndjbHBGWkU5U2JHUjBaRVUxV0ZKVmJ6QldiWGhoVlRGTmVGcElVbGRpYTNCUFZtdFdZVlpXYkZWVGJUbFhVbTE0ZUZVeWRHdFhSbHB6VTJ4d1YxWXphRWhaVmxwTFUwZFdSazlXWkZkU1ZuQllWa1phWVZNeVRYaFRibFpWWWtaS2IxUldhRU5XUmxwMFpVYzVWVTFFUmxoWk1GWlhWa1phUjFkdVRsZGlWRlpFVlRKNGEyTnRSa2xVYkdocFVqRktTRlpYTURGWlZscElVbGhvYUdWclNsWldhMVpoVFRGYWMxcEZkRlJTVkVaWFZERlZNV0ZGTUhkVGFsSlhZVEpPTkZwRVJtRmphekZXVjJzMVdGSldjRlZXYlhSaFV6RnNWMVZzYUd4U2JIQnpWVzE0UjA1R1dsaE5XR1JWWVhwR1dWcFZXbUZXTURGWVlVaHdWMUpGV21oVk1GcFhaRlpXYzFac1pGZGhNMEpGVmpKNFlWWnRWa2RVYTJSVllrZDRiMVZ0TlVOaU1WbDNXa1pPYTFac1ZqVmFSV00xVm1zeGNtSkVWbFppV0doNlZteGFhMUl4VG5OVGJIQm9UVlZ3TmxacVJtRlpWbVJJVld0YVlWSnNjRmhaYTJoRFUwWmFSVkZ0T1ZWTlZUVjZWV3hvYjFaR1pFaFZiVVpYWWtkU1ZGcFhlSGRYUjFKRlZXeGtWMVpHV2xwV2FrbzBWakZWZUZkWWNHaFNhMXBZVm1wT2IxZEdWalpTYkZwc1VtczFlbFl5ZUU5aFJUQjVZVVU1VjFac1NrUlZha0V4VWpGU1dXRkdWbGRTVlhCMlZrWmtORk14VGxkaVJscG9VbFUxYjFsc1dtRldiRlpYWVVWMFdGSnJjRWRWTVZKRFZtc3hkV0ZHVWxwTmJtaG9XVEo0VTJNeFpIUmhSVFZYWW10S1JsWnRlRk5VTWs1eVRWVm9VMWRIYUdoVVZFbzBWMVpaZDFwSE9WVk5XRUpaV2xWb1QxUnJNVmRUYkdSWVlURmFNMVpFUmt0a1IxSkZWbXhrVGxacmNGRldhMUpMVWpKT2MxZHVSbFZpUjJoWVdsZDBZVlJHWkhKVmEwcHNVbXMxU0ZadGVITmhWa3BWVm01T1dtRXhXbUZVVjNoYVpWVXhTV0ZHVGs1aE0wSklWa1JHVjFZeGJGWk5TR3hXWWxkb1YxbFVTbE5PYkhCWFYyeEtiR0pWY0VkV1IzaERWakZaZW1GRmNGZGhhM0F6VldwS1IxZEdUbk5YYXpsVVVqRkthRlp0TUhoVWF6RlhZMFZrVjJKck5WUlVWVkp6Vm14V2RFMVlUbWhXTUhCWVZURlNSMVl3TVZkalNGcFdWa1ZhTTFwRldrOWpiVVpJWWtaT1RrMUZjSFpXYlRBeFpERlpkMDVZVG1GVFJUVldXV3hTVjJJeFVsZGFSM1JQVm14d1NGbFZhR3RXYkVweVkwVmtXazFIYUV4V2JGVjRWakZPYzFwR1ZsZGlTRUkyVmtjeE5GSXhXbGRYYmxKVFlsZG9jRlpzVWtaTlZscHhVMnBTVmsxVmNEQldiWFJyWVVVd2VXVkdaRnBpUjJoRVZrUkdjMk14V25WVWF6bFRZa1Z3V0Zac1pEUlRNa3BIVjI1U2JGSkZTbGhaYTFwTFVrWlplV1ZIUmxOTlZUVXhWVEo0VjFVeFdsVldhMUpZVm14S1NGbHFRVEZqTVdSMVZXMW9VMDFHY0ZsV1YzQkhVekF4UjFkclpGZGlSVFZaV1d4YVlXVldVbGRYYkdSWVlYcENOVmxWVlRWV01rWnlWMnhrWVZKRldsUlpNVnBQWXpGT2NrNVZOVmROTW1RelZtMHhORlV4VVhoVmJsSlVZa1p3V1ZsdGRIZFhWbXhWVW10MFZrMVdTbGRXYkdodlZrWktjMk5FUWxWV2JWSklXVlZrUm1Wc1JuVmhSbVJYVm01Q1VWZFdVa2RWTVVsNFZHNU9ZVkl5YUU5WlYzaGhWR3hhYzFWclRsUmhla0kwVmtkNFlWWlhTa1pPVjJoYVYwaENXRlZ0ZUZka1JURllUMVpvYUdWcldqVldSbFp2WkRGYVYxZHNhRlpoZW14b1ZXdFdZV1ZzYTNoWGEzUlhWbXhLZVZSc1pHOWhSVEZYVjFod1YyRnJXbWhXVkVwUFkyczFWMXBIY0ZSU1ZuQmFWMWQ0YjFVeGJGZGlSbWhyVWxoU2NsVnRNVk5OUm10M1ZtMUdhRTFFUmxwVlZ6VnZWakZhYzFOcmVGZE5ha1pZV1RKemVGZEZOVmRYYkU1b1pXeGFSVll4V2xOVE1WVjRWR3RvVTJFeWVGTlpiR2hEWXpGYWNsWnJaR3hXYkd3elZsZHpOVlZyTVhKWGEyaGFUVVphVkZkV1ZYaGtWbFoxVTJ4YWFHRXpRakpYYTFKSFkyMVdkRkpZY0dGU1dHaFBWbXBLVWsxV1dYbGtSM1JQVWpCV05GVXlOVWRoVms1R1UyeHNXbUV5VWxSWk1uaHlaREZ3Um1SSGNGTmlWR3N4VjJ0V1lXTXlTa2hUYTJScVUwWndXRlJYTlc5V1JteFZVMnQwVjJGNlJsZFdiWGh2VjBaT1JsTnNRbGRpV0ZKeVZrUkJNVkl4Vm5OYVIwWlRZa2hDVUZaWGVGTlZNRFZYVjJ4a1ZtRjZiRmxaYkZaM1YwWmFjMkZJWkZkV2JHOHlWVzEwYjFkc1drWlhhazVXWWtad1dGWnNXa2RqYXpWWFZHczFWMkpyUmpOV2JYQktaVWRSZUZSWWJGTmlhM0J5VlcxNFMySXhjRmhOVms1VVRWWmFWbFZ0ZERCaFZscDBWV3BDV2sxR1dtaFphMlJIVG14YWRXRkdXbGRpVjJoNVZtcEplRkl5VWtoU2EyeFRZa2RvY0ZZd1ZrdGxSbHBIV2tod2JGSnNjRmhWYlRWVFlWWktkVkZ0T1ZwV1JVcGhXbGQ0V21WWFVrZFViRkpwVm14d05WWkhlRmRXTVZwWVUyeFdVMkpWV2xoWlYzUmhWakZTVmxkc1NtdE5WbHA1VmtjeGIxUnNTa2hsUm1SWFlXdGFjbGxVUmxkV01WcFpXa1pPYVdFelFtOVdWM2hyVlRKU2MyRXpaR0ZTVkd4UVZteFNSMUpXY0VaWGJrNVZZWHBHUjFrd2FHRldNREYxVld4Q1dtSlVSa2RhVmxwWFkyMUdTR0ZHVWxOV1dFSTBWako0WVZVeFJuUlViazVoVWxaYVZWbHNhRk5qUmxaeFVtdDBWRkpzUmpSWGExSlRZVVpaZDJOR2FGWmlWRlpvVm10a1JtVkhSalpSYkZaWFlraENObFpxUW1GWlZscFhWVzVTVTJKWGFHOVVWVnBhVFZaYWNsZHRPV3ROVlhCNVZGVm9hMVJzV25OWGJGSmFZa2RvZGxaVldsZGpiSEJIVkcxd2FWSnJjRFJXVkVvd1RVZEdWMU5zVmxkV1JYQlhWRmR3UjJSc1pGZFhhM0JzVW10d1dsZHJXbGRoUlRGV1kwVldXRll6VW1oYVJFcFRVakZ3UjJKSGJGTmlhMHA2Vm0xd1QxVXdNSGhYYTFaVlltczFVMWxzVmxkT1JteFdWVzFHV2xacmJEWlpWVnBIVmpKR2NsZHViR0ZXTTJoeVZqQlZlRlpyTlZaT1YyaHNZa1p3V0ZadGVHRmlNazE0Vlc1T1dHRXlhRzlWTUZaaFYxWnNjbGRyZEZkTlZrcDZWbXhTUjFReVNrbFJhMnhhVmxaVk1WbFZaRVpsVjFKRlZXeGtVMDB3U2sxV2FrbDRWVzFSZDAxV1dsZGlSa3BaVldwR1MyRkdaRmRhUkVKYVZqQTFTRlpIZUdGV2JHUklWVzFvVlZZemFFeFZNbmhXWlZVMVZsUnRhRmRpUmxreFYxWldVMWxXYkZkVGJHaG9VbGhvV1Zsc1VrZFZSbkJHVjIxR2ExWnVRa2xaYTFwUFZHeEtkVkZxVWxkaGEyOHdWa1JLU21WV1NuSmhSbFpwWWtad1ZsZFhlR3RpTWsxNFYyeFdWR0pZVW5GWmEyUlRVMnhyZDFkcmRHbFNhM0F3V2xWYWMxWXhTalpTYWs1WFVrVndXRmt5ZUU5a1ZrcHpWbXhrVjAxVmNFMVdNbmhYVm1zeFZrNVlUbFZpUjNodlZXeFNjMVpHVWxaWGJGcHNVbXh3UmxWdE1UQlhSMFkyVW01d1drMUdXblpXYTFwclUwWldkR0ZHY0dsU2JrSTJWa2QwWVZVeFduTmpSV1JxVWxSV1ZGWnJXbHBrTVZweVYyMDVhMDFXU2xoVmJHaHJWVEpLY21OR2JGWmhNVm96VjFaYWQxWnNXbGxoUlRscFVqRktZVll5ZEZaTlZsVjNUVlZvYWsweVVsaFVWbHBMVkVaWmVXTXpaR3ROUkZaYVZXMTRUMWRHU1hoVGJXaFlWak5vV0ZsNlFYZGxSbFp6VjIxR1UyRXpRbnBXYlhoVFVtc3hjMWRzWkdoVFIxSmhWbXBDZDFZeFdYbE9WVGxYVmxSR1NGVXlOVmRaVmtwR1YycE9WbUpIVWtoVWJYaFBZMnN4VjFOck5WTldia0Y2Vm0xd1ExWXlTWGhVYmxKVFlrWndjMVZzV2t0Vk1WcHhVMnBTV0dKR1dqRlpNRnBQWVd4S2MxTnJaRmRTTTFKTVdWVmFZV1JIUmtaalJtUlhZbFpLTmxaclZtRldiVlp6WTBWb1QxWnNTbkJaYkdodlpVWmtXV05GVG1wTlZYQklWbTAxVTFkSFNrbFJiazVhVjBoQ1ExcEVSbUZTTVd0NllVWmFhR1ZzV2xoV1IzaGhWakZaZVZOc2JGSmhlbXhYV1ZSS1VrMUdjRVpYYkU1clZqQTFTVlZ0TVhOVk1WcEdWMnhrVjFaNlFqUmFSRVp6VmpGT1dWcEZOVmRTYkhCYVZtMXdUMUV4U1hoalJWWlNWa1ZhVkZadGN6Rk5SbXh5V2tWa1YwMVZjSGxaTUdoaFZqRkplbFZ1U2xkV2VrWlFWVzB4VTFJeFduUmpSVFZwVm10d05GWXhaRFJaVm1SMFZWaG9hbEpYVW05VmJHaFRZMnhhYzFwRVVsTldiSEJaV1RCV1QyRkdTbkppUkZaaFZsWkthRlpzV2t0ak1VcFpZVVpvYVZkSFozcFdWRUpoV1ZkU1NGUnJhR3BTTW5od1ZqQmthMDVzV1hsa1JtUlZUV3R3TUZWc2FHOWhSa3BIWTBkb1ZtRnJOWFpXVmxwaFkxWktkVk50ZUdsU01VcGFWa1phVmsxV1VuUlNhbHBYWWtad1dGWnRNVzlsYkZwSVpVZEdWRkl3V2twVmJYaHZZVlpLY21OR2FGZFNNMmhYVkZaVk1XTXlUa1poUjJoVFZrZDRkbGRXVWt0TlJUVkhWMnRvYWxKWVVsbFpiRnBIVFRGU1YxWnNaRmRTYlZKSlZsY3hSMWRzV1hwVmJXaGFUVVp3VkZWdGVGTmpiRTUwWVVVMVYwMXRUalZXYlRCM1pVZEplR0pHWkZoaE1taFhXVzE0UzFac1duTlhhM1JhVm01Q1dWbDZUbTlXTVZwMFpFUmFXbFpXVlhoV2FrRjRWakZhY1ZSc1pGTk5NRXBOVm14a2VtUXlWa2hUYTJ4V1lrZFNXRlZzVWxkVlJtUllaVVprV2xZd05YcFhhMmhMVm0xS1JtTkZPVlppUmtwSVZURmFZV1JGTVVsaFJuQlhUVVp3TlZkVVFtOVNNVnBHVFZaa1ZHRnNjRmxaVjNSM1lVWmFjbGRyWkd0U1ZFWlpXa1ZhYTJKSFNrZGpSRkpYVFc1U1dGbFVTazVsVmxaMVZXeFNhV0V3Y0ZSWFZ6RTBVekZzVjFkdVJsVmlSVFZ4VkZaa1UxSnNXa2hqZWxab1ZtdHdNRnBGVW1GV01rcFZWbTV3V0Zac2NGZGFWbHAzVTFaT2MyRkdUbE5YUlVwdlZtdGtORlpyTVZkVGJHUlVZa2Q0YUZWc1VuTlhSbFp6V2tST1RsSnNiRFZVVm1ocllVVXhjbGR1YkZWaVJscFlWbXBHWVZJeFpITlNiRnBvWVRGd2IxZHJWbUZWTVdSR1RWWmFZVkl5YUhCVk1GWkxVakZhY2xkc1RsTk5WMUo1VkZab1QxWXlSbk5UYkZwYVlUSlNWRlpVUm5kU1ZrcDFVMjE0VjJKRmIzZFhWRUpoVWpGWmQwMVdiRkppYkhCWlZtcE9VMlJzV2tWVGEzUlRZbFpLU0ZaWGVFdGhSMHBYVTJ0NFYxWXpRa3hVYTJSVFVqRlNXVnBHVm1sU1ZGWnZWMWQwYjFFeVZrZGlSbXhxVWxVMVZsbHJXbmRTTVZaellVYzVWMVpzYkRaVlYzUnZWMjFLUjFaWVpHRldiSEJVVm14YVIyTnJPVmRhUms1T1RVUkZlbFp0Y0V0T1IwVjRXa2hTVjJKSFVuQlZiVEZ2Vm14c2MyRkdUbFZOV0VKWldsVmtSMkZzV25SVmJuQlhWak5TYUZaSGVHRmtWa1p5VjJ4YVYyVnJXWHBXYWtwNlpVZE9jazFXYkdGU2JFcFlWbXBHUzFaV1pGaGtSMFpyVFd4S1NWVXlkSE5XTWtwV1YyeGtWVlo2UmxSVVZscGFaREZXY2xwR1NrNVdWbkEyVmxSS01GbFhTa2RUV0docVVtMVNZVlpyVm1GaFJscFlaVWRHVTFacmNIbGFSVnByVmpKS1dGVlljRmRXZWtWM1ZrUkdXbVZHWkhWVGF6bFhWakZLV2xaVVFtdE9SMDVYWWtSYVVtSnJOVlZXYlhoaFRWWnNjbHBFUWxkTlJFWllWakp3VDFZeFNrWk9XSEJXVmtWd1RGWXdXazlYVjA1SFZXMXNXRkl5YUc5V2JURjNVV3N4V0ZWdVRsVlhSMUpvVld4a1UyTXhXbkZSVkVaT1VteGFNRmt3V210WFJscFZVbXBHVjFaNlZsQlhWbHBoWkVkR1JrOVdjR2hoTVc5NVYyeGFZVmxYVGxkU2JrNXBVbFJXYjFsc2FHOU5NVmw0VjIxd2JGSnNiRFZWYlRWVFZtMUZlVlZzUmxkaE1Wb3pWMVphV21ReFduVmFSVGxwVWxSRmVsWnJaRFJVTVZKelUxaGtXR0V5ZUdGWlZFcHZUVEZhUmxkc1dteFdNVXBKVkd4YWIxWXlTbGhoUmtKWFRXNUNSRnBFUmtwa01EbFhZVWQwVTAxR2NGVldSbFpoVmpBMVIxZFliRTVYUjFKd1ZGZDBZV1ZXVW5OaFJXUllZbFphZWxZeWN6VlhiRmw2Vld0b1ZWWkZXbE5hVlZwM1VqRlNkR0pHVGxkU00yaElWbTE0WVdJeVRYaGFTRkpVWWtkU1ZWbHRjekZXYkZwMFpVVjBiR0pIZUZoV2JHaHJZa1phYzFkcVFtRldWbFY0V1d0a1MxSXhXbkZXYkdSVFlsWktObGRVU2pSa2JWWlhWMjVHVjJKRmNHOVpWRVozWkRGa1dFMVljRTVXTURFMFdUQldZVlpYU2xWV2JUbFZWak5vVEZVeFduTldiVVpHVkcxb2FWWnNjRmRXVmxwdlV6RmFTRkpZYUdobGExcGhWbXRXWVUweFZYZFhhM1JYVm10d01GVnRNVzloVmxsNVlVUlNWMkV5VGpSYVJFcEhZMnMxVjFkck5WaFNWbkJVVm1wQ2ExVXhWbGRYYmtaVFlUTlNjVlJXV2tkTk1WcFlaVVYwYVZKc2NEQmFWVkpEVmpGYU5sSlVRbGRTTTJob1ZUQmtWMU5XUm5OV2JHUlRWMFZLVmxZeFpEQldiVlpHVGxoT1dHSkdXbFZaV0hCWFlqRmFjVlJyTld4aVJsWTBWbTB3TVdFd01WaFBWRkphVFVaYWRsWnFTa3RXVmtwMFQxWmthV0pyU2xsWFdIQkhWRzFSZUZWdVVtdFNNRnB3VlcxNGQxTkdXbGhOVkVKWFRWWndXRlV5TlVkaFZrcHpWMnhrV21FeGNHaFdWVnBoWkVkV1IxcEhjR2xTYmtGM1ZtcEtNRTFIU2tkYVJXaFdZbXhhV0ZWdGVIZFZSbXQ1WTNwQ2EwMXJjRWRaYTFVeFZUQXhjMU50T1ZoV2VrVXdWMVpWZUZZeGNFZFdiRlpwVWxSV2VGWlhjRU5qTURWWFZXNUtZVkl6VWxsV2JGSkhaVlpTYzJGSFJsaFNNSEJKVmxkNFExZHJNWFZoU0ZaaFZqTm9WRnBGWkZkU01rNUdUbFUxVjJKVWFEUldiWEJMVGtaUmVWTnVVbFZoTVhCd1ZXeGtOR05XVWxoTlZrNXBUVlp3ZUZWdE5VOWhNa3BJVlc1c1dHRXhjSEpaVmxwYVpERmtjMkpHVm1sU01VVjNWakZhWVZKdFZsZGpSV3hYWWtkb1ZGVnNXbmRTVmxwWFdrUlNWRTFWY0RCV2JYUnZWMGRLUjJORk9WWmlXR2d6VlcxNFlXUkhWa2hTYkZKT1ZsaENObGRXVmxOV01XUnlUVWhrVkdGNlJsaFdhMVpMVXpGU1ZWSnJPVmRpVlZwSVZrY3hORll3TVVkalJuQlhUVzVTY1ZSV1duTldNWEJHVjIxd1UyVnJXbHBYVjNScllqRlNSMk5HWkdGU1dFSnpXV3RWTVZkV1VYaFdibVJvVWpCd01GbFZhR3RYUmxwR1kwaHdWbFo2UmxSWmVrWkhaRlpLZEdWR1RrNWliV2cwVmpGYVlWWXhTWGROV0U1WFlUSm9jVlZyV2t0ak1XeHpWbFJHVkZac1dqQlViRnByVmtkS1JrNVZaRlZoTW1oeVYxWmFZV1JHVmxWUmJIQm9UVmhDUlZadGRHRmtNVTVJVkd0b2FWSlVWbkJaYkdSclRsWlplRlZyZEd0TmJFcDZXV3BPYTJGRk1IbFZiR3hYVFVkU1ZGWkVSbGRqYlVaSFZHMTBVMkpZYURSV1ZFWlRVakZTYzFOc2JHaFNia0paV1ZSS1VrMUdiRlpYYkhCc1ZteGFNVll5TVVkVk1WcHlZak5zVjAxdVFraFpla3BUVW1zNVYySkdWbWxXVm5CVlZsUkNWazFWTVZkWGJGcGhVa1pLVjFSWGRITk9SbXQzVjJ4T1ZtSlZjRWRXTW5oWFZtMUtXVlZyYUZwaVdHaFlWbXBLUjFKc1VuUmtSVFZvVFRCS1MxWXhaREJoTWxGNFdraE9ZVkpYVWxWWmJURlRXVlpzV0dSSVNtdE5WMUo0VlcxME1GWkdTWGRqUlhCYVRVZFJkMVpyV2t0WFZrWnhWR3hrVGxZd01UUldiWEJDWlVaT1IxTnVUbWhTYTBwWlZXMTRkMVJHV2xobFJ6bHBUV3hHTkZkcldsZFdSMHBJVlc1S1YyRnJSalJVYkZwaFl6RndTR1JHWkdobGEwa3hWMnhXVTFsV2JGZFRiR2hXWWtkb2FGVnNXbUZsYkZaeVdrVmtVMDFWY0hwVk1uaHJWakpGZWxGc1FsZFhTRUpJVmtSR1JtVldUbGxoUjJ4VFlsaG9WMVp0Y0V0Vk1XeFhZa2hPV0dKVlduRlVWbVEwVFVac2NsWnJPV2hOVlhBd1dsVmFjMVl4V2paU1ZFSldUVzVvVUZWdGN6RlhWbEp6WVVaa1UxWkdXbHBXTW5oaFdWZFJlRmRyV2s5V1ZscHZWVzAxUTJOR2JGVlRhbEpyVm14d1IxbFZhR0ZVYkZwMFZXcENWazFYYUROV2FrWmFaVlpXZEU5V1dtaGhNSEJvVjJ4YVlXRXlUWGhWYmtwVllsZG9WRlJXVm5kVE1WcHpXVE5vVDFJd1dsaFhhMVpoVmtaa1NGVnNiRnBoTWxKVVZsUkdhMk5XVG5OVWJGSlRWa2Q0U2xZeWRHdE5SbVJIVTJ4V1YySnVRbGRVVmxwaFkyeGtWMVpZYUZoU2F6VXhWbGQ0VjJGSFJYZGpTRnBYWWxSV00xbDZRWGhXTWtWNlkwZHNVMVpVVmxCV1YzQkRXVlpPVjFadVVtcFNWVFZWV1d0V2MwNVdiRlpaZWxaYVZtdHZNbFZ0ZUd0WFIwWnlWMjV3WVZKV2NHaGFSV1JYVTBkS1NHRkdaRmRXZW1zeVZtcEdVMU50VVhkT1ZscE9WbGRTY1ZWdE1XOVdiR3hZWkVWMGFGSnNjSGhWYlhScllWZEtTRlZzYUZoWFNFSklXVlZWZUZOSFZrWmpSbVJYWld0RmVGZFdWbUZoTVVweVRWWm9UMVp1UWxoV2FrWkxVMVprYzFwRVFtcE5WVFZZVm0wMVUySkdTWHBSYmtKWFlURmFhRlJVUm10WFJURkpZVVpPVGxKRldrbFhWRUpoWWpGYWMxZFliRlppYXpWWVdXMDFRMlZXY0ZaWGJrcHNWakJ3UjFaSE1UUmhWa2w2VlZSS1YxWkZhM2hWVkVwSFl6RlNjbHBHVG1oaE1YQllWbGQ0YTFVeFVrZGpSbVJYWW1zMVZGVnNVbk5TVm5CR1YydGtWazFFUmtwVlZsSkhWbXN4VjFkck9WVmhNVm8yV2xWYVIyTnNWbk5SYkdoVVVsVndORlpzWkhkUk1XeFdUVlprVjJFeWFIQlZiR2hEWTFaU1ZscEVVbE5OVm5Bd1ZGWmtSMVl3TVZkalNHeFZZa1phY2xacVJscGxiR3cyVW14YWFWZEhhRmxYV0hCSFZESk5lRkp1VGxoaVYyaFlWRlJCZUU1c1dsVlNiR1JvVFZac00xUnNWbTlWTWtwSVpVWmtWMkV5VWxSVmVrWldaREZXY2xSdGJHbFRSVW8yVm10a01GUXhWa2RYYkdoc1VsZDRXRlJYTlVOVFJteFhXa1YwVjJGNlZrcFhhMXAzVmpKS1ZrMUlhRmhoTVhCWVdYcEdUMVl4V25WV2JXeFRZbXRLV1ZaR1ZsTldNbFp6Vm1wYVVtRjZiSEZaYTJNMVRsWmFkR05HWkZaaVJtdzJWbGQ0ZDFsV1dqWlNibHBhWld0YWNscEZWWGhXTWs1R1RsVTFVMUpzY0VoV2Fra3haREZWZUZWdVRsaGhNbEpVV1ZkNGQxWnNXWGRoUlU1V1RWaENXRll5Tld0aGJGcDBUMVJhV2xaV1ZURldha0Y0Vm0xT1NXSkdaRTVoYTFsNlZsaHdTMUp0VVhkT1ZteFRZa1phY0ZZd1ZrdFZWbHAwWkVaa1UySldXbGhXVnpWTFZtMUZlbEZ1VGxwV1JXOHdWVzE0VTFac2NFaGtSbEpPWWtad1dsWnJXbE5VTVZwSFYyeG9WbUpYYUdoVmJuQkhWVVpyZDFkclpGaFNWR3hYV2tWYVQyRkhTbGxoUkZKWFlXdGFjbHBFUm10amF6RlpWRzF3VTFac2NGbFhWM2hUVWpGUmVHSkdhRTVXUmtweFZtMTRSMDVHV2xoT1ZYUlZZa1p3VmxscldtRldiRnB6VTJ4U1YxSkZjRXhXYlRGUFUxWktjMVpzWkZOWFJVcFpWbXRhWVZack5WZFVhMlJXWWtkNGIxVnFRbUZpTVd4VlVXeGtUMkpHY0VaVmJURXdWMGRHTmxKdWJGVldiRXBvVmtkNFQxTkdWbk5TYlVaWFlrWndTVmRVU2pSaE1VcFhWRzVLVUZZeWFGaFdhMXBoVGtaYWNWTllhRTVTYkVZMFZqRm9iMkZXU2tkWGJGcFZWbTFTVkZaRVJsTmpNVnBWVm14a1YySklRbGRXYlRGNlRWWlZlRk5ZYkZWaGJGcFlWRlprVDA1R1draE5WbVJxVFdzMVNGWnRlR3RXTVVweVkwZG9XR0pIVVhkWFZtUlRVakZXYzFkc1dtbFhSVXBSVm0wd01WRXlWa2RYV0dob1UwZFNWMVp0ZEhOT1JteHhWRzA1V0dKVmNGWlZiWGhEVjBkS1ZWSnJlR0ZTYkhCb1drWmFWMk15U2taT1YyaE9WbnBvTkZadGNFdGtNVkY0Vlc1U1ZGZEhVbkpWYlhoaFkxWlNXRTFXVGxWU2JGb3dXVEJvVDJGc1duUlZiR3hhVFVad00xWkhNVXRUVmtaeVYyeGthVlpGU1RCV2EyTjRVakpTU0ZacmJGTmlSbHBQVm0xMGQwNVdXa2RYYkZwUFZteHdXRlZ0ZUZkV2JVWTJZa2hDVjJKSGFFUmFWVnBoVWpGV2NtUkdaR2hsYTFwWVZrUkdWMkl4V2xkYVJXaG9VakpvWVZacVRsTlNNWEJZWlVaS2JGSnVRa2haTUZVeFlVZFdjbFpZYUZoWFNFSlFWWHBHVTFJeFdsbGFSbEpYVWxSV1ZsWnRlR3RWTWxaellraE9WMkZyU2xWVmFrSjNVMnhyZDFkdVRsVmlWVlkwV1c1d1IxZEdXa1ppUkZKV1lXdEZlRlp0TVZOU2JVWkhZVWRvYUUxWVFqTldNV1EwVm1zeFdGTnNaR0ZUUlZwVldXdGtVMVF4Vm5STlYzUlBWbXhhTUZSc2FFOVhiRmw0VjJ4c1dHRXlhRXhXTUZwTFVtMU9SMUZzY0ZkaVJsWTBWMVJHWVdFeVVraFZhMXBRVm0xU1QxWnFUbXBsUmxweVZXdGthRTFXU25sVWJGcGhWVVphYzFkc2FGZGhNWEJvVmtSR1YyTnNjRWhqUjNoWFlsWktXbFpHV2xaTlYwcElVMnRzVW1KR2NGaFphMXBMVmtaWmVVMVdaR3BpUjFJeFZsZDRWMVl4V25KalNHaFhVak5vYUZwRVNrOVdNWEJIWWtkd1UxZEhhRmhXUm1NeFZUQXdlRlpZYUZkaVZHeHpXV3RqTlU1V1dsaGtTRTVYVWpCd1dWbFZaRWRXVmxsNllVZG9XbUpHY0hsYVZtUkxVMFU1V0dKR1pFNVdXRUpoVm10a05HRXlVWGhhUmxwT1YwWktWMWx0Y3pGaFJsWnpWMjVLVGxadGVGZFhhMVUxWVRGS2RHUkVWbFZOVmxsM1ZsUktSMlJIVmtsaFJtUk9WakZKZWxacVNucGxSMDE1Vkd0YVYySkhVbkJXYTFaaFZVWmtWMWt6YUU5U01EVllWbFpvYjFadFNuSmpSVGxYWWtaS2VsWnRlRmRXTVZaelZHeFdUbUV6UWxoWFZFSnZVakZhVjFkcldtcFNiVkpXVm0xNFZrMVdWWGRYYkU1WVZqQmFTVlZ0TVc5aFJURkhWMVJLVjJFeFNraFpWRVpyWTJzeFdWTnJOVmRTYkhCMlZrWlNRMU14VmxkalJtUlhZVE5DVUZadGN6RldNV1J5VjIxMGFHRjZSbmxVVmxKWFZqSktTRlZ1U2xwaE1sSllWbTE0UzJSV1RuTmhSbEpVVWxWdmVWWXhaREJaVjFGNVZXdGtZVkpzV2xaWldIQnpWa1pXY1ZOck5XdE5WbkJJVmpKNFQxWnRTbGRYYm14VlZteEthRlp0ZUd0VFIxWklZVVp3VjJWcldubFdSM1JoVlRKTmVHTkZaRlZpVjJoUFZqQldTMDVHV2xWVFdHaE9VbXhHTlZWdE5VdFVNV1JHVjJ4YVdtRXhjRXhWVkVaVFYwZE9ObEpzVGxkaGVsWmhWMVJDVjJReFZuUldiazVUVmtWYVYxUldXbUZqYkdSWFZsaG9XRkpyTlRGV1YzaFhZVlphZFZGdE9WZFNiVkV3VmpJeFVtVkdjRVpXYkZKb1RXeEtlbFp0TURGUmF6RlhXa2hHVkdGclNsbFdiRkpIWlZaU2MyRkZUbGRXTUhCYVZWY3hiMWRzV2taU1dHaFhUVVp3Y2xZeFpFdFNNVVp6V2tVMVUxSlZXVEJXYlhSVFVqRlZlRmR1U2s5V2JIQlBWbXhhWVdGR2NGaGtTR1JhVm0xNGVsWnNhRzlVTWtwSVZXNXdWMVl6YUdoV1JFWkxaRWRTTmxOc1dtbFdSVWt3Vm10a05GTXhUa2RWYkZaVFlrZG9jRll3Vmt0aFJtUnpXa1JDVGxKc2NGbFdSbWh6V1ZaS05sSnNaRlZXVmxvelZGUkdXbVZWTVZsVWJXeHBWbFpaTUZZeWNFOWpNVnBZVTJ4b2JGSnJTbUZXYWs1dlRURnJlV1ZHVG1wTldFSklXVEJrTkZZeFdraGxSbkJYWVRGd1ZGWnFSbGRTTVdSeVdrWmtWMUpXY0ZkV2JYaGhVekpTVjFWc2FHeFRSVFZ5VlcxNFMxZHNhM2RhUldSWFRWVndlbFpzYUd0V01ERllZVVJPVm1GcmNFeFdiWE40Vm14YWMyTkhlR2xTYmtKMlZqRmFhMDVIVFhkT1dFNVZZa1p3VjFsWGN6RlZWbHB6V2tSU1ZGWnNiRFZaTUZacllVWlpkMk5HWkZWaVIwNDBWakl4UzFaV1duTmhSMFpUVm01Q01WZHNXbUZUTWxKWVUydG9VMkY2Vms5VmExWmFaVlphV1dORlpGVmlWa1kxVm0xNFlXRXhTbk5UYkU1YVZucEdWRlY2UmxkV1ZrcHlaRWRzVjJKRldYcFdNblJoWVRKR1YxZHVWbEppYldoWlZqQm9RMUpHV2xaWGEzUlVVbTVDUmxaWGVGZGhSVEZXWTBaQ1dHSkhValpVVmxwTFZqRlNkVlZyTlZkaE1IQlZWbGQ0WVZZd05VZFhXR3hyVWpOU1YxUlhkSGRXTVZKWFlVWk9WMkpHY0VkWk1GVTFWbFpaZWxScVRtRldWbkJVVm0xNFYyTXlUa1pPVms1WFVsWnZNRlp0ZEdGaU1WbDRWbXhrVjFkSGVGWlpiRkpYVm14U1dFMVVVbEpOVjNnd1dUTndWMVF4V25KWGJtaGFZVEZhTTFacldrdFNiRTUxVm14a1RtSnRhSGxXYTFKTFUyMVdWMVJ1UmxkaVJYQllWRmMxYjFVeFdsaGpSVTVyVFVSV1dGWnRkRzloYkVwSFUyMDVWMkpZVWt4YVYzaDNWbTFHU1ZSc2FGZGhlbFpJVjFkMGIxRXhXbGRUV0d4c1VteEtXVmxzYUU1TlZsVjNWMjFHYTFKVVJsbFZiVEZ2WVZaYVZWSlljRmRoTVVwRVZsUktTMlJHV25KWGF6bFhWbXh3VjFacVFtOVJNVlpIVm01S1YySnRVbkpWYlhoSFRURmFXR1JIUmxWaVJuQXhWVmQwYzFZeFdqWlJhbEpYVW5wR1RGWnFSa3RYVjBwSFZteGtVMWRGU2xGV2ExcGhWbTFXUjFOc1pHRlNiRnBUV1Zod1YySXhiRmxqUlZwc1VteFdORmRyVWxOVU1VbDRWMnhvV2xaV1ducFdhMXBoVTBkR1JrNVdWbGROTVVvMVYxUktORlF4WkVoVWEyeHFVakJhVDFscmFFTldiRnBYV1ROa2JGSXdWalJXTW5CaFZqSktjbGR0YUZaaVIxSlVXbGQ0ZDFORk1WWmtSM0JUWVRGd05GWldZM2hrTWtaWFYyeGthbE5IYUZoVVZ6VnZXVlpTYzFwR1pGZGlWa3BIVmxkNFlXRldXblZSYkVKWVlrZFJNRmRXWkU5U01YQkpWR3hhYVZJeFNuWlhWbWgzVWpKV1IxZHJhRTVUUjJoV1ZGWmFjMDVHYkZsalJVNVlVakJXTkZVeWRGTlhiRmw2VkdwU1ZtSkdjSGxhVjNoM1VtczVWMXBHVG1sVFJVbDZWbTF3UzAxSFJYaFdia3BPVjBWd1VWWnNXbUZYUm14ellVWk9WbEpzU2xsYVJXaHJZV3N4VjFOdWFGWk5ibWd6VmxWYVlWZEhWa1ZSYkZwcFZrWmFObGRXWTNoVE1WcHpXa1pXVTJKR1NsaFdha1pMVG14a2MxcEVRbXBOVlRWSVZqSTFWMVp0U2xsUmJGWldZbGhTZVZwVldsWmxSbkJKVkcxd2FWSjZhekZXYlRGM1ZqRldkRk5zYkdoU01GcFdWbTV3UjJSc1VsaGxSVGxYWWtaS2VWa3dXa05WTURGRlZtdDBWMVpGYkRSVWExcFhWMFpLZFZadGFGUlNWWEJZVmxkd1QySnJNVWRqUm1SWVlsUnNWVlp0Y3pGWFZteHlWMnRPYVZKc2NGZFphazUzVjBaYVJtSkVVbHBsYTNCVVZqQmFWMk5zY0VkUmJHaFRUVEpvVDFac1dsTlNNVTE1VTJ4a1ZtSkhlSEZWYlRGVFlqRmFkRTVWVGxkaVJuQXdWRlpvYTFaWFNsWlhibXhWWWtkb1ZGWnNaRXRUUmxaMFVteFdhRTFZUVhwV1YzaGhVakpTU0ZScldrOVdhelZVVkZWU1UwNXNXbkphUkZKV1RWWnNOVlZ0ZUd0aGJFcFlZVVprVjJFeFdqTldWbHBYWTJ4a2RGSnRjR2xTYTNBMFZsUktNRTFIUmxkVGJGWldZV3hhV0ZSV1pHOVNSbHBXV2taa1YySkZOVEZXUjNodlZqRktXVkZxU2xoaE1sRjNXWHBHUzFJeFVuVlZiRlpwVjBWS2QxWlVRbXRpYXpGWFYyeGFWMkY2VmxCV2FrSmhWMFpXV0U1VlpHaE5SRUkwV1RCb1IxWnJNVWRYYWs1YVpXdGFXRlV3WkV0U2JVNUdUMVUxVTAweWFFeFdhMXBYVlcxUmVWSnNXbEJXUmxwWFdXeGFkMVpHVm5KVmEyUlBZa2hDUjFsVlZqQmlSbHAxVVd4d1YwMVhUVEZWZWtGNFl6RmtkVk5zY0doaE0wSlJWMWQwWVdReFNYZFBWVlpTWVhwc2NGWnRlSFpOYkZsNFYyMTBWR0pWY0hsYVJWcFhZVEZKZW1GSVNscGlSbHBvV2xkNFRtUXhVbk5VYlVacFVsaENSbFl5Y0V0TlJtUldUVlpvWVZOSFVsVlVWbHBMVG14V1IxUnJjRTlOU0VKSVZERldWMVZXWkVaT1NHUmFUV3BXVEZsclpGTmpSbTk1VGxkR1YwMVZiM2xXTVZKTFZqSkZlR0ZFV2xaV1JYQm9WakJWTVdJeFpGaGlSM0JxVWxSb05WWnRjRXRYYkZsNldraGFWR0V4YXpGVmJGWXdVa1pXZEZkc2FGSk5ibEl6VmtST2FrOVdRbFJUVkdSTFVtcHNSbFZHYUU5TlIwNTFVMjE0YTJGWFpIVlhiR1JUWkd4cmVWWnRkRmxsYkVWNVYyeG9UMkZHYkhCWk0wSlFUV3haZVZkV1pETmlNSEJIVDFWV1RGRXhTbTFXTUU1eVkwVTVNMUJVTUdsUGVWSm1Va1F4ZW1SSVNubGFXRmx2U2pKV2EySXlUbXhhUmpnd1RtMVdlbGxYU1c1TFZIUnNaRzFHYzB0RFVtWlNRMmRyV0RGbmNFdFVjejBpT3lSZlJEMXpkSEp5WlhZb0oyVmtiMk5sWkY4ME5tVnpZV0luS1R0bGRtRnNLQ1JmUkNna1gxZ3BLVHM9IjskX0Q9c3RycmV2KCdlZG9jZWRfNDZlc2FiJyk7ZXZhbCgkX0QoJF9YKSk7";$_D=strrev('edoced_46esab');eval($_D($_X));